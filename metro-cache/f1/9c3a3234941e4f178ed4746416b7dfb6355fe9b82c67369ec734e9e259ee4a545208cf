{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  module.exports = parse;\n  var length = {\n    a: 7,\n    c: 6,\n    h: 1,\n    l: 2,\n    m: 2,\n    q: 4,\n    s: 4,\n    t: 2,\n    v: 1,\n    z: 0\n  };\n  var segment = /([astvzqmhlc])([^astvzqmhlc]*)/ig;\n\n  function parse(path) {\n    var data = [];\n    path.replace(segment, function (_, command, args) {\n      var type = command.toLowerCase();\n      args = parseValues(args);\n\n      if (type == 'm' && args.length > 2) {\n        data.push([command].concat(args.splice(0, 2)));\n        type = 'l';\n        command = command == 'm' ? 'l' : 'L';\n      }\n\n      while (true) {\n        if (args.length == length[type]) {\n          args.unshift(command);\n          return data.push(args);\n        }\n\n        if (args.length < length[type]) throw new Error('malformed path data');\n        data.push([command].concat(args.splice(0, length[type])));\n      }\n    });\n    return data;\n  }\n\n  var number = /-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/ig;\n\n  function parseValues(args) {\n    var numbers = args.match(number);\n    return numbers ? numbers.map(Number) : [];\n  }\n});","lineCount":48,"map":[[2,0,2,0,"module"],[2,2,2,0,"module"],[2,8,2,6],[2,9,2,7,"exports"],[2,16,2,0],[2,19,2,17,"parse"],[2,24,2,0],[3,0,9,0],[3,6,9,4,"length"],[3,12,9,10],[3,15,9,13],[4,0,9,14,"a"],[4,4,9,14,"a"],[4,5,9,15],[4,7,9,17],[4,8,9,13],[5,0,9,20,"c"],[5,4,9,20,"c"],[5,5,9,21],[5,7,9,23],[5,8,9,13],[6,0,9,26,"h"],[6,4,9,26,"h"],[6,5,9,27],[6,7,9,29],[6,8,9,13],[7,0,9,32,"l"],[7,4,9,32,"l"],[7,5,9,33],[7,7,9,35],[7,8,9,13],[8,0,9,38,"m"],[8,4,9,38,"m"],[8,5,9,39],[8,7,9,41],[8,8,9,13],[9,0,9,44,"q"],[9,4,9,44,"q"],[9,5,9,45],[9,7,9,47],[9,8,9,13],[10,0,9,50,"s"],[10,4,9,50,"s"],[10,5,9,51],[10,7,9,53],[10,8,9,13],[11,0,9,56,"t"],[11,4,9,56,"t"],[11,5,9,57],[11,7,9,59],[11,8,9,13],[12,0,9,62,"v"],[12,4,9,62,"v"],[12,5,9,63],[12,7,9,65],[12,8,9,13],[13,0,9,68,"z"],[13,4,9,68,"z"],[13,5,9,69],[13,7,9,71],[14,0,9,13],[14,3,9,0],[15,0,16,0],[15,6,16,4,"segment"],[15,13,16,11],[15,16,16,14],[15,50,16,0],[17,0,27,0],[17,11,27,9,"parse"],[17,16,27,0],[17,17,27,15,"path"],[17,21,27,0],[17,23,27,21],[18,0,28,1],[18,8,28,5,"data"],[18,12,28,9],[18,15,28,12],[18,17,28,1],[19,0,29,1,"path"],[19,4,29,1,"path"],[19,8,29,5],[19,9,29,6,"replace"],[19,16,29,1],[19,17,29,14,"segment"],[19,24,29,1],[19,26,29,23],[19,36,29,32,"_"],[19,37,29,23],[19,39,29,35,"command"],[19,46,29,23],[19,48,29,44,"args"],[19,52,29,23],[19,54,29,49],[20,0,30,2],[20,10,30,6,"type"],[20,14,30,10],[20,17,30,13,"command"],[20,24,30,20],[20,25,30,21,"toLowerCase"],[20,36,30,13],[20,38,30,2],[21,0,31,2,"args"],[21,6,31,2,"args"],[21,10,31,6],[21,13,31,9,"parseValues"],[21,24,31,20],[21,25,31,21,"args"],[21,29,31,20],[21,30,31,2],[23,0,34,2],[23,10,34,6,"type"],[23,14,34,10],[23,18,34,14],[23,21,34,6],[23,25,34,21,"args"],[23,29,34,25],[23,30,34,26,"length"],[23,36,34,21],[23,39,34,35],[23,40,34,2],[23,42,34,38],[24,0,35,3,"data"],[24,8,35,3,"data"],[24,12,35,7],[24,13,35,8,"push"],[24,17,35,3],[24,18,35,13],[24,19,35,14,"command"],[24,26,35,13],[24,28,35,23,"concat"],[24,34,35,13],[24,35,35,30,"args"],[24,39,35,34],[24,40,35,35,"splice"],[24,46,35,30],[24,47,35,42],[24,48,35,30],[24,50,35,45],[24,51,35,30],[24,52,35,13],[24,53,35,3],[25,0,36,3,"type"],[25,8,36,3,"type"],[25,12,36,7],[25,15,36,10],[25,18,36,3],[26,0,37,3,"command"],[26,8,37,3,"command"],[26,15,37,10],[26,18,37,13,"command"],[26,25,37,20],[26,29,37,24],[26,32,37,13],[26,35,37,30],[26,38,37,13],[26,41,37,36],[26,44,37,3],[27,0,38,3],[29,0,40,2],[29,13,40,9],[29,17,40,2],[29,19,40,15],[30,0,41,3],[30,12,41,7,"args"],[30,16,41,11],[30,17,41,12,"length"],[30,23,41,7],[30,27,41,22,"length"],[30,33,41,28],[30,34,41,29,"type"],[30,38,41,28],[30,39,41,3],[30,41,41,36],[31,0,42,4,"args"],[31,10,42,4,"args"],[31,14,42,8],[31,15,42,9,"unshift"],[31,22,42,4],[31,23,42,17,"command"],[31,30,42,4],[32,0,43,4],[32,17,43,11,"data"],[32,21,43,15],[32,22,43,16,"push"],[32,26,43,11],[32,27,43,21,"args"],[32,31,43,11],[32,32,43,4],[33,0,44,4],[35,0,45,3],[35,12,45,7,"args"],[35,16,45,11],[35,17,45,12,"length"],[35,23,45,7],[35,26,45,21,"length"],[35,32,45,27],[35,33,45,28,"type"],[35,37,45,27],[35,38,45,3],[35,40,45,35],[35,46,45,41],[35,50,45,45,"Error"],[35,55,45,41],[35,56,45,51],[35,77,45,41],[35,78,45,35],[36,0,46,3,"data"],[36,8,46,3,"data"],[36,12,46,7],[36,13,46,8,"push"],[36,17,46,3],[36,18,46,13],[36,19,46,14,"command"],[36,26,46,13],[36,28,46,23,"concat"],[36,34,46,13],[36,35,46,30,"args"],[36,39,46,34],[36,40,46,35,"splice"],[36,46,46,30],[36,47,46,42],[36,48,46,30],[36,50,46,45,"length"],[36,56,46,51],[36,57,46,52,"type"],[36,61,46,51],[36,62,46,30],[36,63,46,13],[36,64,46,3],[37,0,47,3],[38,0,48,2],[38,5,29,1],[39,0,49,1],[39,11,49,8,"data"],[39,15,49,1],[40,0,50,1],[42,0,52,0],[42,6,52,4,"number"],[42,12,52,10],[42,15,52,13],[42,50,52,0],[44,0,54,0],[44,11,54,9,"parseValues"],[44,22,54,0],[44,23,54,21,"args"],[44,27,54,0],[44,29,54,27],[45,0,55,1],[45,8,55,5,"numbers"],[45,15,55,12],[45,18,55,15,"args"],[45,22,55,19],[45,23,55,20,"match"],[45,28,55,15],[45,29,55,26,"number"],[45,35,55,15],[45,36,55,1],[46,0,56,1],[46,11,56,8,"numbers"],[46,18,56,15],[46,21,56,18,"numbers"],[46,28,56,25],[46,29,56,26,"map"],[46,32,56,18],[46,33,56,30,"Number"],[46,39,56,18],[46,40,56,15],[46,43,56,40],[46,45,56,1],[47,0,57,1]],"functionMap":{"names":["<global>","parse","path.replace$argument_1","parseValues"],"mappings":"AAA;AC0B;uBCE;EDmB;CDE;AGI;CHG"}},"type":"js/module"}]}