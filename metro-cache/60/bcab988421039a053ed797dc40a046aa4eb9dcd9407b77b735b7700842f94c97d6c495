{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":1,"column":58}}]}},{"name":"../core/InternalAnimatedValue","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":1,"column":58}}]}},{"name":"../core/AnimatedCond","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":19},"end":{"line":19,"column":23},"identifierName":"cond"}]}},{"name":"../core/AnimatedCall","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":4},"end":{"line":22,"column":8},"identifierName":"call"}]}},{"name":"../core/AnimatedSet","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":16},"end":{"line":22,"column":19},"identifierName":"set"}]}},{"name":"../core/AnimatedAlways","data":{"asyncType":null,"locs":[{"start":{"line":30,"column":21},"end":{"line":30,"column":27},"identifierName":"always"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.evaluateOnce = evaluateOnce;\n\n  var _InternalAnimatedValue = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"../core/InternalAnimatedValue\"));\n\n  function evaluateOnce(node) {\n    var input = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var callback = arguments.length > 2 ? arguments[2] : undefined;\n\n    if (!Array.isArray(input)) {\n      input = [input];\n    }\n\n    var done = new _InternalAnimatedValue.default(0);\n    var evalNode = (0, _$$_REQUIRE(_dependencyMap[2], \"../core/AnimatedCond\").createAnimatedCond)(done, 0, (0, _$$_REQUIRE(_dependencyMap[3], \"../core/AnimatedCall\").createAnimatedCall)([node, (0, _$$_REQUIRE(_dependencyMap[4], \"../core/AnimatedSet\").createAnimatedSet)(done, 1)], function () {\n      callback && callback();\n\n      for (var i = 0; i < input.length; i++) {\n        input[i].__removeChild(alwaysNode);\n\n        alwaysNode.__detach();\n      }\n    }));\n    var alwaysNode = (0, _$$_REQUIRE(_dependencyMap[5], \"../core/AnimatedAlways\").createAnimatedAlways)(evalNode);\n\n    for (var i = 0; i < input.length; i++) {\n      input[i].__addChild(alwaysNode);\n\n      alwaysNode.__attach();\n    }\n  }\n});","lineCount":35,"map":[[7,0,1,0],[9,0,14,7],[9,11,14,16,"evaluateOnce"],[9,23,14,7],[9,24,14,29,"node"],[9,28,14,7],[9,30,14,57],[10,0,14,57],[10,8,14,35,"input"],[10,13,14,57],[10,84,14,43],[10,86,14,57],[11,0,14,57],[11,8,14,47,"callback"],[11,16,14,57],[13,0,15,2],[13,8,15,6],[13,9,15,7,"Array"],[13,14,15,12],[13,15,15,13,"isArray"],[13,22,15,7],[13,23,15,21,"input"],[13,28,15,7],[13,29,15,2],[13,31,15,29],[14,0,16,4,"input"],[14,6,16,4,"input"],[14,11,16,9],[14,14,16,12],[14,15,16,13,"input"],[14,20,16,12],[14,21,16,4],[15,0,17,3],[17,0,18,2],[17,8,18,8,"done"],[17,12,18,12],[17,15,18,15],[17,19,18,19,"AnimatedValue"],[17,49,18,15],[17,50,18,33],[17,51,18,15],[17,52,18,2],[18,0,19,2],[18,8,19,8,"evalNode"],[18,16,19,16],[18,19,19,19],[18,98,20,4,"done"],[18,102,19,19],[18,104,21,4],[18,105,19,19],[18,107,22,4],[18,186,22,9],[18,187,22,10,"node"],[18,191,22,9],[18,193,22,16],[18,270,22,20,"done"],[18,274,22,16],[18,276,22,26],[18,277,22,16],[18,278,22,9],[18,279,22,4],[18,281,22,31],[18,293,22,37],[19,0,23,6,"callback"],[19,6,23,6,"callback"],[19,14,23,14],[19,18,23,18,"callback"],[19,26,23,26],[19,28,23,6],[21,0,24,6],[21,11,24,11],[21,15,24,15,"i"],[21,16,24,16],[21,19,24,19],[21,20,24,6],[21,22,24,22,"i"],[21,23,24,23],[21,26,24,26,"input"],[21,31,24,31],[21,32,24,32,"length"],[21,38,24,6],[21,40,24,40,"i"],[21,41,24,41],[21,43,24,6],[21,45,24,45],[22,0,25,8,"input"],[22,8,25,8,"input"],[22,13,25,13],[22,14,25,14,"i"],[22,15,25,13],[22,16,25,8],[22,17,25,17,"__removeChild"],[22,30,25,8],[22,31,25,31,"alwaysNode"],[22,41,25,8],[24,0,26,8,"alwaysNode"],[24,8,26,8,"alwaysNode"],[24,18,26,18],[24,19,26,19,"__detach"],[24,27,26,8],[25,0,27,7],[26,0,28,5],[26,5,22,4],[26,6,19,19],[26,7,19,2],[27,0,30,2],[27,8,30,8,"alwaysNode"],[27,18,30,18],[27,21,30,21],[27,104,30,28,"evalNode"],[27,112,30,21],[27,113,30,2],[29,0,31,2],[29,9,31,7],[29,13,31,11,"i"],[29,14,31,12],[29,17,31,15],[29,18,31,2],[29,20,31,18,"i"],[29,21,31,19],[29,24,31,22,"input"],[29,29,31,27],[29,30,31,28,"length"],[29,36,31,2],[29,38,31,36,"i"],[29,39,31,37],[29,41,31,2],[29,43,31,41],[30,0,32,4,"input"],[30,6,32,4,"input"],[30,11,32,9],[30,12,32,10,"i"],[30,13,32,9],[30,14,32,4],[30,15,32,13,"__addChild"],[30,25,32,4],[30,26,32,24,"alwaysNode"],[30,36,32,4],[32,0,33,4,"alwaysNode"],[32,6,33,4,"alwaysNode"],[32,16,33,14],[32,17,33,15,"__attach"],[32,25,33,4],[33,0,34,3],[34,0,35,1]],"functionMap":{"names":["<global>","evaluateOnce","call$argument_1"],"mappings":"AAA;OCa;+BCQ;KDM;CDO"}},"type":"js/module"}]}