{"dependencies":[{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":1,"column":32}}]}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0},"end":{"line":2,"column":34}}]}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0},"end":{"line":2,"column":34}}]}},{"name":"../components/bottomSheet/constants","data":{"asyncType":null,"locs":[{"start":{"line":32,"column":41},"end":{"line":32,"column":59},"identifierName":"INITIAL_SNAP_POINT"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.usePropsValidator = void 0;\n\n  var _react = _$$_REQUIRE(_dependencyMap[0], \"react\");\n\n  var _invariant = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"invariant\"));\n\n  var usePropsValidator = function usePropsValidator(_ref) {\n    var index = _ref.index,\n        snapPoints = _ref.snapPoints,\n        topInset = _ref.topInset,\n        bottomInset = _ref.bottomInset;\n    (0, _react.useMemo)(function () {\n      var _snapPoints = 'value' in snapPoints ? snapPoints.value : snapPoints;\n\n      (0, _invariant.default)(_snapPoints, \"'snapPoints' was not provided! please provide at least one snap point.\");\n\n      _snapPoints.map(function (snapPoint) {\n        var _snapPoint = typeof snapPoint === 'number' ? snapPoint : parseInt(snapPoint.replace('%', ''), 10);\n\n        (0, _invariant.default)(_snapPoint > 0 || _snapPoint === _$$_REQUIRE(_dependencyMap[3], \"../components/bottomSheet/constants\").INITIAL_SNAP_POINT, \"Snap point '\" + snapPoint + \"' is invalid. if you want to allow user to close the sheet, Please use 'enablePanDownToClose' prop.\");\n      });\n\n      (0, _invariant.default)('value' in _snapPoints || _snapPoints.length > 0, \"'snapPoints' was provided with no points! please provide at least one snap point.\");\n      (0, _invariant.default)(typeof index === 'number' || typeof index === 'undefined', \"'index' was provided but with wrong type ! expected type is a number.\");\n      (0, _invariant.default)(typeof index === 'number' ? index >= -1 && index <= _snapPoints.length - 1 : true, \"'index' was provided but out of the provided snap points range! expected value to be between -1, \" + (_snapPoints.length - 1));\n      (0, _invariant.default)(typeof topInset === 'number' || typeof topInset === 'undefined', \"'topInset' was provided but with wrong type ! expected type is a number.\");\n      (0, _invariant.default)(typeof bottomInset === 'number' || typeof bottomInset === 'undefined', \"'bottomInset' was provided but with wrong type ! expected type is a number.\");\n    }, [index, snapPoints, topInset, bottomInset]);\n  };\n\n  exports.usePropsValidator = usePropsValidator;\n});","lineCount":36,"map":[[7,0,1,0],[9,0,2,0],[11,0,11,7],[11,6,11,13,"usePropsValidator"],[11,23,11,30],[11,26,11,33],[11,35,11,13,"usePropsValidator"],[11,52,11,33],[11,59,16,24],[12,0,16,24],[12,8,12,2,"index"],[12,13,16,24],[12,21,12,2,"index"],[12,26,16,24],[13,0,16,24],[13,8,13,2,"snapPoints"],[13,18,16,24],[13,26,13,2,"snapPoints"],[13,36,16,24],[14,0,16,24],[14,8,14,2,"topInset"],[14,16,16,24],[14,24,14,2,"topInset"],[14,32,16,24],[15,0,16,24],[15,8,15,2,"bottomInset"],[15,19,16,24],[15,27,15,2,"bottomInset"],[15,38,16,24],[16,0,17,2],[16,24,17,10],[16,36,17,16],[17,0,19,4],[17,10,19,10,"_snapPoints"],[17,21,19,21],[17,24,19,24],[17,35,19,35,"snapPoints"],[17,45,19,24],[17,48,19,48,"snapPoints"],[17,58,19,58],[17,59,19,59,"value"],[17,64,19,24],[17,67,19,67,"snapPoints"],[17,77,19,4],[19,0,20,4],[19,30,21,6,"_snapPoints"],[19,41,20,4],[21,0,25,4,"_snapPoints"],[21,6,25,4,"_snapPoints"],[21,17,25,15],[21,18,25,16,"map"],[21,21,25,4],[21,22,25,20],[21,32,25,20,"snapPoint"],[21,41,25,29],[21,43,25,33],[22,0,26,6],[22,12,26,12,"_snapPoint"],[22,22,26,22],[22,25,27,8],[22,32,27,15,"snapPoint"],[22,41,27,8],[22,46,27,29],[22,54,27,8],[22,57,28,12,"snapPoint"],[22,66,27,8],[22,69,29,12,"parseInt"],[22,77,29,20],[22,78,29,21,"snapPoint"],[22,87,29,30],[22,88,29,31,"replace"],[22,95,29,21],[22,96,29,39],[22,99,29,21],[22,101,29,44],[22,103,29,21],[22,104,29,20],[22,106,29,49],[22,108,29,20],[22,109,26,6],[24,0,31,6],[24,32,32,8,"_snapPoint"],[24,42,32,18],[24,45,32,21],[24,46,32,8],[24,50,32,26,"_snapPoint"],[24,60,32,36],[24,65,32,41,"INITIAL_SNAP_POINT"],[24,153,31,6],[24,172,33,23,"snapPoint"],[24,181,31,6],[25,0,35,5],[25,7,25,4],[27,0,37,4],[27,30,38,6],[27,41,38,17,"_snapPoints"],[27,52,38,6],[27,56,38,32,"_snapPoints"],[27,67,38,43],[27,68,38,44,"length"],[27,74,38,32],[27,77,38,53],[27,78,37,4],[28,0,44,4],[28,30,45,6],[28,37,45,13,"index"],[28,42,45,6],[28,47,45,23],[28,55,45,6],[28,59,45,35],[28,66,45,42,"index"],[28,71,45,35],[28,76,45,52],[28,87,44,4],[29,0,49,4],[29,30,50,6],[29,37,50,13,"index"],[29,42,50,6],[29,47,50,23],[29,55,50,6],[29,58,51,10,"index"],[29,63,51,15],[29,67,51,19],[29,68,51,20],[29,69,51,10],[29,73,51,25,"index"],[29,78,51,30],[29,82,51,34,"_snapPoints"],[29,93,51,45],[29,94,51,46,"length"],[29,100,51,34],[29,103,51,55],[29,104,50,6],[29,107,52,10],[29,111,49,4],[29,216,54,8,"_snapPoints"],[29,227,54,19],[29,228,54,20,"length"],[29,234,54,8],[29,237,54,29],[29,238,49,4],[30,0,60,4],[30,30,61,6],[30,37,61,13,"topInset"],[30,45,61,6],[30,50,61,26],[30,58,61,6],[30,62,61,38],[30,69,61,45,"topInset"],[30,77,61,38],[30,82,61,58],[30,93,60,4],[31,0,64,4],[31,30,65,6],[31,37,65,13,"bottomInset"],[31,48,65,6],[31,53,65,29],[31,61,65,6],[31,65,65,41],[31,72,65,48,"bottomInset"],[31,83,65,41],[31,88,65,64],[31,99,64,4],[32,0,71,3],[32,5,17,2],[32,7,71,5],[32,8,71,6,"index"],[32,13,71,5],[32,15,71,13,"snapPoints"],[32,25,71,5],[32,27,71,25,"topInset"],[32,35,71,5],[32,37,71,35,"bottomInset"],[32,48,71,5],[32,49,17,2],[33,0,72,1],[33,3,11,7]],"functionMap":{"names":["<global>","usePropsValidator","useMemo$argument_0","_snapPoints.map$argument_0"],"mappings":"AAA;iCCU;UCM;oBCQ;KDU;GDoC;CDC"}},"type":"js/module"}]}