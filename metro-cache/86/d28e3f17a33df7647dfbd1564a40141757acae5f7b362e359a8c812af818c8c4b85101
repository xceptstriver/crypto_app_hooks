{"dependencies":[{"name":"../utils/createCustomError","data":{"asyncType":null,"locs":[{"start":{"line":53,"column":16},"end":{"line":53,"column":57}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var MAX_LINE_LENGTH = 100;\n  var OFFSET_CORRECTION = 60;\n  var TAB_REPLACEMENT = '    ';\n\n  function sourceFragment(error, extraLines) {\n    function processLines(start, end) {\n      return lines.slice(start, end).map(function (line, idx) {\n        var num = String(start + idx + 1);\n\n        while (num.length < maxNumLength) {\n          num = ' ' + num;\n        }\n\n        return num + ' |' + line;\n      }).join('\\n');\n    }\n\n    var lines = error.source.split(/\\r\\n?|\\n|\\f/);\n    var line = error.line;\n    var column = error.column;\n    var startLine = Math.max(1, line - extraLines) - 1;\n    var endLine = Math.min(line + extraLines, lines.length + 1);\n    var maxNumLength = Math.max(4, String(endLine).length) + 1;\n    var cutLeft = 0;\n    column += (TAB_REPLACEMENT.length - 1) * (lines[line - 1].substr(0, column - 1).match(/\\t/g) || []).length;\n\n    if (column > MAX_LINE_LENGTH) {\n      cutLeft = column - OFFSET_CORRECTION + 3;\n      column = OFFSET_CORRECTION - 2;\n    }\n\n    for (var i = startLine; i <= endLine; i++) {\n      if (i >= 0 && i < lines.length) {\n        lines[i] = lines[i].replace(/\\t/g, TAB_REPLACEMENT);\n        lines[i] = (cutLeft > 0 && lines[i].length > cutLeft ? \"\\u2026\" : '') + lines[i].substr(cutLeft, MAX_LINE_LENGTH - 2) + (lines[i].length > cutLeft + MAX_LINE_LENGTH - 1 ? \"\\u2026\" : '');\n      }\n    }\n\n    return [processLines(startLine, line), new Array(column + maxNumLength + 2).join('-') + '^', processLines(line, endLine)].filter(Boolean).join('\\n');\n  }\n\n  var SyntaxError = function SyntaxError(message, source, offset, line, column) {\n    var error = _$$_REQUIRE(_dependencyMap[0], \"../utils/createCustomError\")('SyntaxError', message);\n\n    error.source = source;\n    error.offset = offset;\n    error.line = line;\n    error.column = column;\n\n    error.sourceFragment = function (extraLines) {\n      return sourceFragment(error, isNaN(extraLines) ? 0 : extraLines);\n    };\n\n    Object.defineProperty(error, 'formattedMessage', {\n      get: function get() {\n        return 'Parse error: ' + error.message + '\\n' + sourceFragment(error, 2);\n      }\n    });\n    error.parseError = {\n      offset: offset,\n      line: line,\n      column: column\n    };\n    return error;\n  };\n\n  module.exports = SyntaxError;\n});","lineCount":69,"map":[[2,0,2,0],[2,6,2,4,"MAX_LINE_LENGTH"],[2,21,2,19],[2,24,2,22],[2,27,2,0],[3,0,3,0],[3,6,3,4,"OFFSET_CORRECTION"],[3,23,3,21],[3,26,3,24],[3,28,3,0],[4,0,4,0],[4,6,4,4,"TAB_REPLACEMENT"],[4,21,4,19],[4,24,4,22],[4,30,4,0],[6,0,6,0],[6,11,6,9,"sourceFragment"],[6,25,6,0],[6,26,6,24,"error"],[6,31,6,0],[6,33,6,31,"extraLines"],[6,43,6,0],[6,45,6,43],[7,0,7,4],[7,13,7,13,"processLines"],[7,25,7,4],[7,26,7,26,"start"],[7,31,7,4],[7,33,7,33,"end"],[7,36,7,4],[7,38,7,38],[8,0,8,8],[8,13,8,15,"lines"],[8,18,8,20],[8,19,8,21,"slice"],[8,24,8,15],[8,25,8,27,"start"],[8,30,8,15],[8,32,8,34,"end"],[8,35,8,15],[8,37,8,39,"map"],[8,40,8,15],[8,41,8,43],[8,51,8,52,"line"],[8,55,8,43],[8,57,8,58,"idx"],[8,60,8,43],[8,62,8,63],[9,0,9,12],[9,12,9,16,"num"],[9,15,9,19],[9,18,9,22,"String"],[9,24,9,28],[9,25,9,29,"start"],[9,30,9,34],[9,33,9,37,"idx"],[9,36,9,29],[9,39,9,43],[9,40,9,28],[9,41,9,12],[11,0,11,12],[11,15,11,19,"num"],[11,18,11,22],[11,19,11,23,"length"],[11,25,11,19],[11,28,11,32,"maxNumLength"],[11,40,11,12],[11,42,11,46],[12,0,12,16,"num"],[12,10,12,16,"num"],[12,13,12,19],[12,16,12,22],[12,22,12,28,"num"],[12,25,12,16],[13,0,13,13],[15,0,15,12],[15,15,15,19,"num"],[15,18,15,22],[15,21,15,25],[15,25,15,19],[15,28,15,32,"line"],[15,32,15,12],[16,0,16,9],[16,7,8,15],[16,9,16,11,"join"],[16,13,8,15],[16,14,16,16],[16,18,8,15],[16,19,8,8],[17,0,17,5],[19,0,19,4],[19,8,19,8,"lines"],[19,13,19,13],[19,16,19,16,"error"],[19,21,19,21],[19,22,19,22,"source"],[19,28,19,16],[19,29,19,29,"split"],[19,34,19,16],[19,35,19,35],[19,48,19,16],[19,49,19,4],[20,0,20,4],[20,8,20,8,"line"],[20,12,20,12],[20,15,20,15,"error"],[20,20,20,20],[20,21,20,21,"line"],[20,25,20,4],[21,0,21,4],[21,8,21,8,"column"],[21,14,21,14],[21,17,21,17,"error"],[21,22,21,22],[21,23,21,23,"column"],[21,29,21,4],[22,0,22,4],[22,8,22,8,"startLine"],[22,17,22,17],[22,20,22,20,"Math"],[22,24,22,24],[22,25,22,25,"max"],[22,28,22,20],[22,29,22,29],[22,30,22,20],[22,32,22,32,"line"],[22,36,22,36],[22,39,22,39,"extraLines"],[22,49,22,20],[22,53,22,53],[22,54,22,4],[23,0,23,4],[23,8,23,8,"endLine"],[23,15,23,15],[23,18,23,18,"Math"],[23,22,23,22],[23,23,23,23,"min"],[23,26,23,18],[23,27,23,27,"line"],[23,31,23,31],[23,34,23,34,"extraLines"],[23,44,23,18],[23,46,23,46,"lines"],[23,51,23,51],[23,52,23,52,"length"],[23,58,23,46],[23,61,23,61],[23,62,23,18],[23,63,23,4],[24,0,24,4],[24,8,24,8,"maxNumLength"],[24,20,24,20],[24,23,24,23,"Math"],[24,27,24,27],[24,28,24,28,"max"],[24,31,24,23],[24,32,24,32],[24,33,24,23],[24,35,24,35,"String"],[24,41,24,41],[24,42,24,42,"endLine"],[24,49,24,41],[24,50,24,35],[24,51,24,51,"length"],[24,57,24,23],[24,61,24,61],[24,62,24,4],[25,0,25,4],[25,8,25,8,"cutLeft"],[25,15,25,15],[25,18,25,18],[25,19,25,4],[26,0,28,4,"column"],[26,4,28,4,"column"],[26,10,28,10],[26,14,28,14],[26,15,28,15,"TAB_REPLACEMENT"],[26,30,28,30],[26,31,28,31,"length"],[26,37,28,15],[26,40,28,40],[26,41,28,14],[26,45,28,45],[26,46,28,46,"lines"],[26,51,28,51],[26,52,28,52,"line"],[26,56,28,56],[26,59,28,59],[26,60,28,51],[26,61,28,46],[26,62,28,62,"substr"],[26,68,28,46],[26,69,28,69],[26,70,28,46],[26,72,28,72,"column"],[26,78,28,78],[26,81,28,81],[26,82,28,46],[26,84,28,84,"match"],[26,89,28,46],[26,90,28,90],[26,95,28,46],[26,100,28,100],[26,102,28,45],[26,104,28,104,"length"],[26,110,28,4],[28,0,30,4],[28,8,30,8,"column"],[28,14,30,14],[28,17,30,17,"MAX_LINE_LENGTH"],[28,32,30,4],[28,34,30,34],[29,0,31,8,"cutLeft"],[29,6,31,8,"cutLeft"],[29,13,31,15],[29,16,31,18,"column"],[29,22,31,24],[29,25,31,27,"OFFSET_CORRECTION"],[29,42,31,18],[29,45,31,47],[29,46,31,8],[30,0,32,8,"column"],[30,6,32,8,"column"],[30,12,32,14],[30,15,32,17,"OFFSET_CORRECTION"],[30,32,32,34],[30,35,32,37],[30,36,32,8],[31,0,33,5],[33,0,35,4],[33,9,35,9],[33,13,35,13,"i"],[33,14,35,14],[33,17,35,17,"startLine"],[33,26,35,4],[33,28,35,28,"i"],[33,29,35,29],[33,33,35,33,"endLine"],[33,40,35,4],[33,42,35,42,"i"],[33,43,35,43],[33,45,35,4],[33,47,35,47],[34,0,36,8],[34,10,36,12,"i"],[34,11,36,13],[34,15,36,17],[34,16,36,12],[34,20,36,22,"i"],[34,21,36,23],[34,24,36,26,"lines"],[34,29,36,31],[34,30,36,32,"length"],[34,36,36,8],[34,38,36,40],[35,0,37,12,"lines"],[35,8,37,12,"lines"],[35,13,37,17],[35,14,37,18,"i"],[35,15,37,17],[35,16,37,12],[35,19,37,23,"lines"],[35,24,37,28],[35,25,37,29,"i"],[35,26,37,28],[35,27,37,23],[35,28,37,32,"replace"],[35,35,37,23],[35,36,37,40],[35,41,37,23],[35,43,37,47,"TAB_REPLACEMENT"],[35,58,37,23],[35,59,37,12],[36,0,38,12,"lines"],[36,8,38,12,"lines"],[36,13,38,17],[36,14,38,18,"i"],[36,15,38,17],[36,16,38,12],[36,19,39,16],[36,20,39,17,"cutLeft"],[36,27,39,24],[36,30,39,27],[36,31,39,17],[36,35,39,32,"lines"],[36,40,39,37],[36,41,39,38,"i"],[36,42,39,37],[36,43,39,32],[36,44,39,41,"length"],[36,50,39,32],[36,53,39,50,"cutLeft"],[36,60,39,17],[36,63,39,60],[36,71,39,17],[36,74,39,71],[36,76,39,16],[36,80,40,16,"lines"],[36,85,40,21],[36,86,40,22,"i"],[36,87,40,21],[36,88,40,16],[36,89,40,25,"substr"],[36,95,40,16],[36,96,40,32,"cutLeft"],[36,103,40,16],[36,105,40,41,"MAX_LINE_LENGTH"],[36,120,40,56],[36,123,40,59],[36,124,40,16],[36,125,39,16],[36,129,41,17,"lines"],[36,134,41,22],[36,135,41,23,"i"],[36,136,41,22],[36,137,41,17],[36,138,41,26,"length"],[36,144,41,17],[36,147,41,35,"cutLeft"],[36,154,41,42],[36,157,41,45,"MAX_LINE_LENGTH"],[36,172,41,35],[36,175,41,63],[36,176,41,17],[36,179,41,67],[36,187,41,17],[36,190,41,78],[36,192,39,16],[36,193,38,12],[37,0,42,9],[38,0,43,5],[40,0,45,4],[40,11,45,11],[40,12,46,8,"processLines"],[40,24,46,20],[40,25,46,21,"startLine"],[40,34,46,20],[40,36,46,32,"line"],[40,40,46,20],[40,41,45,11],[40,43,47,8],[40,47,47,12,"Array"],[40,52,47,8],[40,53,47,18,"column"],[40,59,47,24],[40,62,47,27,"maxNumLength"],[40,74,47,18],[40,77,47,42],[40,78,47,8],[40,80,47,45,"join"],[40,84,47,8],[40,85,47,50],[40,88,47,8],[40,92,47,57],[40,95,45,11],[40,97,48,8,"processLines"],[40,109,48,20],[40,110,48,21,"line"],[40,114,48,20],[40,116,48,27,"endLine"],[40,123,48,20],[40,124,45,11],[40,126,49,6,"filter"],[40,132,45,11],[40,133,49,13,"Boolean"],[40,140,45,11],[40,142,49,22,"join"],[40,146,45,11],[40,147,49,27],[40,151,45,11],[40,152,45,4],[41,0,50,1],[43,0,52,0],[43,6,52,4,"SyntaxError"],[43,17,52,15],[43,20,52,18],[43,29,52,4,"SyntaxError"],[43,40,52,18],[43,41,52,27,"message"],[43,48,52,18],[43,50,52,36,"source"],[43,56,52,18],[43,58,52,44,"offset"],[43,64,52,18],[43,66,52,52,"line"],[43,70,52,18],[43,72,52,58,"column"],[43,78,52,18],[43,80,52,66],[44,0,53,4],[44,8,53,8,"error"],[44,13,53,13],[44,16,53,16],[44,77,53,34],[44,90,53,16],[44,92,53,49,"message"],[44,99,53,16],[44,100,53,4],[46,0,55,4,"error"],[46,4,55,4,"error"],[46,9,55,9],[46,10,55,10,"source"],[46,16,55,4],[46,19,55,19,"source"],[46,25,55,4],[47,0,56,4,"error"],[47,4,56,4,"error"],[47,9,56,9],[47,10,56,10,"offset"],[47,16,56,4],[47,19,56,19,"offset"],[47,25,56,4],[48,0,57,4,"error"],[48,4,57,4,"error"],[48,9,57,9],[48,10,57,10,"line"],[48,14,57,4],[48,17,57,17,"line"],[48,21,57,4],[49,0,58,4,"error"],[49,4,58,4,"error"],[49,9,58,9],[49,10,58,10,"column"],[49,16,58,4],[49,19,58,19,"column"],[49,25,58,4],[51,0,60,4,"error"],[51,4,60,4,"error"],[51,9,60,9],[51,10,60,10,"sourceFragment"],[51,24,60,4],[51,27,60,27],[51,37,60,36,"extraLines"],[51,47,60,27],[51,49,60,48],[52,0,61,8],[52,13,61,15,"sourceFragment"],[52,27,61,29],[52,28,61,30,"error"],[52,33,61,29],[52,35,61,37,"isNaN"],[52,40,61,42],[52,41,61,43,"extraLines"],[52,51,61,42],[52,52,61,37],[52,55,61,57],[52,56,61,37],[52,59,61,61,"extraLines"],[52,69,61,29],[52,70,61,8],[53,0,62,5],[53,5,60,4],[55,0,63,4,"Object"],[55,4,63,4,"Object"],[55,10,63,10],[55,11,63,11,"defineProperty"],[55,25,63,4],[55,26,63,26,"error"],[55,31,63,4],[55,33,63,33],[55,51,63,4],[55,53,63,53],[56,0,64,8,"get"],[56,6,64,8,"get"],[56,9,64,11],[56,11,64,13],[56,26,64,24],[57,0,65,12],[57,15,66,16],[57,33,66,34,"error"],[57,38,66,39],[57,39,66,40,"message"],[57,46,66,16],[57,49,66,50],[57,53,66,16],[57,56,67,16,"sourceFragment"],[57,70,67,30],[57,71,67,31,"error"],[57,76,67,30],[57,78,67,38],[57,79,67,30],[57,80,65,12],[58,0,69,9],[59,0,63,53],[59,5,63,4],[60,0,73,4,"error"],[60,4,73,4,"error"],[60,9,73,9],[60,10,73,10,"parseError"],[60,20,73,4],[60,23,73,23],[61,0,74,8,"offset"],[61,6,74,8,"offset"],[61,12,74,14],[61,14,74,16,"offset"],[61,20,73,23],[62,0,75,8,"line"],[62,6,75,8,"line"],[62,10,75,12],[62,12,75,14,"line"],[62,16,73,23],[63,0,76,8,"column"],[63,6,76,8,"column"],[63,12,76,14],[63,14,76,16,"column"],[64,0,73,23],[64,5,73,4],[65,0,79,4],[65,11,79,11,"error"],[65,16,79,4],[66,0,80,1],[66,3,52,0],[68,0,82,0,"module"],[68,2,82,0,"module"],[68,8,82,6],[68,9,82,7,"exports"],[68,16,82,0],[68,19,82,17,"SyntaxError"],[68,30,82,0]],"functionMap":{"names":["<global>","sourceFragment","processLines","lines.slice.map$argument_0","SyntaxError","error.sourceFragment","Object.defineProperty$argument_2.get"],"mappings":"AAA;ACK;ICC;2CCC;SDQ;KDC;CDiC;kBIE;2BCQ;KDE;aEE;SFK;CJW"}},"type":"js/module"}]}