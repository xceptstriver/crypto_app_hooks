{"dependencies":[{"name":"./SyntaxError","data":{"asyncType":null,"locs":[{"start":{"line":51,"column":14},"end":{"line":51,"column":58}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var TAB = 9;\n  var N = 10;\n  var F = 12;\n  var R = 13;\n  var SPACE = 32;\n\n  var Tokenizer = function Tokenizer(str) {\n    this.str = str;\n    this.pos = 0;\n  };\n\n  Tokenizer.prototype = {\n    charCodeAt: function charCodeAt(pos) {\n      return pos < this.str.length ? this.str.charCodeAt(pos) : 0;\n    },\n    charCode: function charCode() {\n      return this.charCodeAt(this.pos);\n    },\n    nextCharCode: function nextCharCode() {\n      return this.charCodeAt(this.pos + 1);\n    },\n    nextNonWsCode: function nextNonWsCode(pos) {\n      return this.charCodeAt(this.findWsEnd(pos));\n    },\n    findWsEnd: function findWsEnd(pos) {\n      for (; pos < this.str.length; pos++) {\n        var code = this.str.charCodeAt(pos);\n\n        if (code !== R && code !== N && code !== F && code !== SPACE && code !== TAB) {\n          break;\n        }\n      }\n\n      return pos;\n    },\n    substringToPos: function substringToPos(end) {\n      return this.str.substring(this.pos, this.pos = end);\n    },\n    eat: function eat(code) {\n      if (this.charCode() !== code) {\n        this.error('Expect `' + String.fromCharCode(code) + '`');\n      }\n\n      this.pos++;\n    },\n    peek: function peek() {\n      return this.pos < this.str.length ? this.str.charAt(this.pos++) : '';\n    },\n    error: function error(message) {\n      throw new (_$$_REQUIRE(_dependencyMap[0], \"./SyntaxError\"))(message, this.str, this.pos);\n    }\n  };\n  module.exports = Tokenizer;\n});","lineCount":55,"map":[[2,0,3,0],[2,6,3,4,"TAB"],[2,9,3,7],[2,12,3,10],[2,13,3,0],[3,0,4,0],[3,6,4,4,"N"],[3,7,4,5],[3,10,4,8],[3,12,4,0],[4,0,5,0],[4,6,5,4,"F"],[4,7,5,5],[4,10,5,8],[4,12,5,0],[5,0,6,0],[5,6,6,4,"R"],[5,7,6,5],[5,10,6,8],[5,12,6,0],[6,0,7,0],[6,6,7,4,"SPACE"],[6,11,7,9],[6,14,7,12],[6,16,7,0],[8,0,9,0],[8,6,9,4,"Tokenizer"],[8,15,9,13],[8,18,9,16],[8,27,9,4,"Tokenizer"],[8,36,9,16],[8,37,9,25,"str"],[8,40,9,16],[8,42,9,30],[9,0,10,4],[9,9,10,9,"str"],[9,12,10,4],[9,15,10,15,"str"],[9,18,10,4],[10,0,11,4],[10,9,11,9,"pos"],[10,12,11,4],[10,15,11,15],[10,16,11,4],[11,0,12,1],[11,3,9,0],[13,0,14,0,"Tokenizer"],[13,2,14,0,"Tokenizer"],[13,11,14,9],[13,12,14,10,"prototype"],[13,21,14,0],[13,24,14,22],[14,0,15,4,"charCodeAt"],[14,4,15,4,"charCodeAt"],[14,14,15,14],[14,16,15,16],[14,36,15,25,"pos"],[14,39,15,16],[14,41,15,30],[15,0,16,8],[15,13,16,15,"pos"],[15,16,16,18],[15,19,16,21],[15,24,16,26,"str"],[15,27,16,21],[15,28,16,30,"length"],[15,34,16,15],[15,37,16,39],[15,42,16,44,"str"],[15,45,16,39],[15,46,16,48,"charCodeAt"],[15,56,16,39],[15,57,16,59,"pos"],[15,60,16,39],[15,61,16,15],[15,64,16,66],[15,65,16,8],[16,0,17,5],[16,5,14,22],[17,0,18,4,"charCode"],[17,4,18,4,"charCode"],[17,12,18,12],[17,14,18,14],[17,34,18,25],[18,0,19,8],[18,13,19,15],[18,18,19,20,"charCodeAt"],[18,28,19,15],[18,29,19,31],[18,34,19,36,"pos"],[18,37,19,15],[18,38,19,8],[19,0,20,5],[19,5,14,22],[20,0,21,4,"nextCharCode"],[20,4,21,4,"nextCharCode"],[20,16,21,16],[20,18,21,18],[20,42,21,29],[21,0,22,8],[21,13,22,15],[21,18,22,20,"charCodeAt"],[21,28,22,15],[21,29,22,31],[21,34,22,36,"pos"],[21,37,22,31],[21,40,22,42],[21,41,22,15],[21,42,22,8],[22,0,23,5],[22,5,14,22],[23,0,24,4,"nextNonWsCode"],[23,4,24,4,"nextNonWsCode"],[23,17,24,17],[23,19,24,19],[23,42,24,28,"pos"],[23,45,24,19],[23,47,24,33],[24,0,25,8],[24,13,25,15],[24,18,25,20,"charCodeAt"],[24,28,25,15],[24,29,25,31],[24,34,25,36,"findWsEnd"],[24,43,25,31],[24,44,25,46,"pos"],[24,47,25,31],[24,48,25,15],[24,49,25,8],[25,0,26,5],[25,5,14,22],[26,0,27,4,"findWsEnd"],[26,4,27,4,"findWsEnd"],[26,13,27,13],[26,15,27,15],[26,34,27,24,"pos"],[26,37,27,15],[26,39,27,29],[27,0,28,8],[27,13,28,15,"pos"],[27,16,28,18],[27,19,28,21],[27,24,28,26,"str"],[27,27,28,21],[27,28,28,30,"length"],[27,34,28,8],[27,36,28,38,"pos"],[27,39,28,41],[27,41,28,8],[27,43,28,45],[28,0,29,12],[28,12,29,16,"code"],[28,16,29,20],[28,19,29,23],[28,24,29,28,"str"],[28,27,29,23],[28,28,29,32,"charCodeAt"],[28,38,29,23],[28,39,29,43,"pos"],[28,42,29,23],[28,43,29,12],[30,0,30,12],[30,12,30,16,"code"],[30,16,30,20],[30,21,30,25,"R"],[30,22,30,16],[30,26,30,30,"code"],[30,30,30,34],[30,35,30,39,"N"],[30,36,30,16],[30,40,30,44,"code"],[30,44,30,48],[30,49,30,53,"F"],[30,50,30,16],[30,54,30,58,"code"],[30,58,30,62],[30,63,30,67,"SPACE"],[30,68,30,16],[30,72,30,76,"code"],[30,76,30,80],[30,81,30,85,"TAB"],[30,84,30,12],[30,86,30,90],[31,0,31,16],[32,0,32,13],[33,0,33,9],[35,0,35,8],[35,13,35,15,"pos"],[35,16,35,8],[36,0,36,5],[36,5,14,22],[37,0,37,4,"substringToPos"],[37,4,37,4,"substringToPos"],[37,18,37,18],[37,20,37,20],[37,44,37,29,"end"],[37,47,37,20],[37,49,37,34],[38,0,38,8],[38,13,38,15],[38,18,38,20,"str"],[38,21,38,15],[38,22,38,24,"substring"],[38,31,38,15],[38,32,38,34],[38,37,38,39,"pos"],[38,40,38,15],[38,42,38,44],[38,47,38,49,"pos"],[38,50,38,44],[38,53,38,55,"end"],[38,56,38,15],[38,57,38,8],[39,0,39,5],[39,5,14,22],[40,0,40,4,"eat"],[40,4,40,4,"eat"],[40,7,40,7],[40,9,40,9],[40,22,40,18,"code"],[40,26,40,9],[40,28,40,24],[41,0,41,8],[41,10,41,12],[41,15,41,17,"charCode"],[41,23,41,12],[41,30,41,32,"code"],[41,34,41,8],[41,36,41,38],[42,0,42,12],[42,13,42,17,"error"],[42,18,42,12],[42,19,42,23],[42,32,42,36,"String"],[42,38,42,42],[42,39,42,43,"fromCharCode"],[42,51,42,36],[42,52,42,56,"code"],[42,56,42,36],[42,57,42,23],[42,60,42,64],[42,63,42,12],[43,0,43,9],[45,0,45,8],[45,11,45,13,"pos"],[45,14,45,8],[46,0,46,5],[46,5,14,22],[47,0,47,4,"peek"],[47,4,47,4,"peek"],[47,8,47,8],[47,10,47,10],[47,26,47,21],[48,0,48,8],[48,13,48,15],[48,18,48,20,"pos"],[48,21,48,15],[48,24,48,26],[48,29,48,31,"str"],[48,32,48,26],[48,33,48,35,"length"],[48,39,48,15],[48,42,48,44],[48,47,48,49,"str"],[48,50,48,44],[48,51,48,53,"charAt"],[48,57,48,44],[48,58,48,60],[48,63,48,65,"pos"],[48,66,48,60],[48,68,48,44],[48,69,48,15],[48,72,48,74],[48,74,48,8],[49,0,49,5],[49,5,14,22],[50,0,50,4,"error"],[50,4,50,4,"error"],[50,9,50,9],[50,11,50,11],[50,26,50,20,"message"],[50,33,50,11],[50,35,50,29],[51,0,51,8],[51,12,51,14],[51,66,51,30,"message"],[51,73,51,14],[51,75,51,39],[51,80,51,44,"str"],[51,83,51,14],[51,85,51,49],[51,90,51,54,"pos"],[51,93,51,14],[51,94,51,8],[52,0,52,5],[53,0,14,22],[53,3,14,0],[54,0,55,0,"module"],[54,2,55,0,"module"],[54,8,55,6],[54,9,55,7,"exports"],[54,16,55,0],[54,19,55,17,"Tokenizer"],[54,28,55,0]],"functionMap":{"names":["<global>","Tokenizer","Tokenizer.prototype.charCodeAt","Tokenizer.prototype.charCode","Tokenizer.prototype.nextCharCode","Tokenizer.prototype.nextNonWsCode","Tokenizer.prototype.findWsEnd","Tokenizer.prototype.substringToPos","Tokenizer.prototype.eat","Tokenizer.prototype.peek","Tokenizer.prototype.error"],"mappings":"AAA;gBCQ;CDG;gBEG;KFE;cGC;KHE;kBIC;KJE;mBKC;KLE;eMC;KNS;oBOC;KPE;SQC;KRM;USC;KTE;WUC;KVE"}},"type":"js/module"}]}