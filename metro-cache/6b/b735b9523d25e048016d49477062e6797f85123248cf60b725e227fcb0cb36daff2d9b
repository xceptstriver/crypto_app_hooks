{"dependencies":[{"name":"css-what","data":{"asyncType":null,"locs":[{"start":{"line":32,"column":16},"end":{"line":32,"column":40}}]}},{"name":"./sort.js","data":{"asyncType":null,"locs":[{"start":{"line":83,"column":4},"end":{"line":83,"column":28}}]}},{"name":"boolbase","data":{"asyncType":null,"locs":[{"start":{"line":95,"column":16},"end":{"line":107,"column":39}},{"start":{"line":120,"column":12},"end":{"line":120,"column":30}},{"start":{"line":127,"column":7},"end":{"line":127,"column":48}},{"start":{"line":131,"column":8},"end":{"line":131,"column":23}},{"start":{"line":131,"column":27},"end":{"line":131,"column":41}},{"start":{"line":134,"column":8},"end":{"line":134,"column":23}},{"start":{"line":134,"column":27},"end":{"line":134,"column":41}},{"start":{"line":165,"column":8},"end":{"line":165,"column":26}},{"start":{"line":166,"column":8},"end":{"line":166,"column":25}},{"start":{"line":166,"column":27},"end":{"line":166,"column":44}},{"start":{"line":186,"column":8},"end":{"line":186,"column":26}},{"start":{"line":186,"column":28},"end":{"line":186,"column":45}},{"start":{"line":187,"column":8},"end":{"line":187,"column":25}}]}},{"name":"./procedure.json","data":{"asyncType":null,"locs":[{"start":{"line":115,"column":11},"end":{"line":115,"column":28}}]}},{"name":"./general.js","data":{"asyncType":null,"locs":[{"start":{"line":122,"column":14},"end":{"line":122,"column":32}},{"start":{"line":126,"column":15},"end":{"line":126,"column":31}}]}},{"name":"./pseudos.js","data":{"asyncType":null,"locs":[{"start":{"line":150,"column":0},"end":{"line":150,"column":11}},{"start":{"line":173,"column":0},"end":{"line":173,"column":11}},{"start":{"line":206,"column":0},"end":{"line":206,"column":15}},{"start":{"line":219,"column":0},"end":{"line":219,"column":25}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  module.exports = compile;\n\n  function compile(selector, options, context) {\n    var next = compileUnsafe(selector, options, context);\n    return wrap(next, options);\n  }\n\n  function wrap(next, options) {\n    var adapter = options.adapter;\n    return function base(elem) {\n      return adapter.isTag(elem) && next(elem);\n    };\n  }\n\n  function compileUnsafe(selector, options, context) {\n    var token = _$$_REQUIRE(_dependencyMap[0], \"css-what\").parse(selector, options);\n\n    return compileToken(token, options, context);\n  }\n\n  function includesScopePseudo(t) {\n    return t.type === \"pseudo\" && (t.name === \"scope\" || Array.isArray(t.data) && t.data.some(function (data) {\n      return data.some(includesScopePseudo);\n    }));\n  }\n\n  var DESCENDANT_TOKEN = {\n    type: \"descendant\"\n  };\n  var FLEXIBLE_DESCENDANT_TOKEN = {\n    type: \"_flexibleDescendant\"\n  };\n  var SCOPE_TOKEN = {\n    type: \"pseudo\",\n    name: \"scope\"\n  };\n  var PLACEHOLDER_ELEMENT = {};\n\n  function absolutize(token, options, context) {\n    var adapter = options.adapter;\n    var hasContext = !!context && !!context.length && context.every(function (e) {\n      return e === PLACEHOLDER_ELEMENT || !!adapter.getParent(e);\n    });\n    token.forEach(function (t) {\n      if (t.length > 0 && isTraversal(t[0]) && t[0].type !== \"descendant\") {} else if (hasContext && !(Array.isArray(t) ? t.some(includesScopePseudo) : includesScopePseudo(t))) {\n        t.unshift(DESCENDANT_TOKEN);\n      } else {\n        return;\n      }\n\n      t.unshift(SCOPE_TOKEN);\n    });\n  }\n\n  function compileToken(token, options, context) {\n    token = token.filter(function (t) {\n      return t.length > 0;\n    });\n    token.forEach(_$$_REQUIRE(_dependencyMap[1], \"./sort.js\"));\n    var isArrayContext = Array.isArray(context);\n    context = options && options.context || context;\n    if (context && !isArrayContext) context = [context];\n    absolutize(token, options, context);\n    var shouldTestNextSiblings = false;\n    var query = token.map(function (rules) {\n      if (rules[0] && rules[1] && rules[0].name === \"scope\") {\n        var ruleType = rules[1].type;\n\n        if (isArrayContext && ruleType === \"descendant\") {\n          rules[1] = FLEXIBLE_DESCENDANT_TOKEN;\n        } else if (ruleType === \"adjacent\" || ruleType === \"sibling\") {\n          shouldTestNextSiblings = true;\n        }\n      }\n\n      return compileRules(rules, options, context);\n    }).reduce(reduceRules, _$$_REQUIRE(_dependencyMap[2], \"boolbase\").falseFunc);\n    query.shouldTestNextSiblings = shouldTestNextSiblings;\n    return query;\n  }\n\n  function isTraversal(t) {\n    return _$$_REQUIRE(_dependencyMap[3], \"./procedure.json\")[t.type] < 0;\n  }\n\n  function compileRules(rules, options, context) {\n    return rules.reduce(function (func, rule) {\n      if (func === _$$_REQUIRE(_dependencyMap[2], \"boolbase\").falseFunc) return func;\n\n      if (!(rule.type in _$$_REQUIRE(_dependencyMap[4], \"./general.js\"))) {\n        throw new Error(\"Rule type \" + rule.type + \" is not supported by css-select\");\n      }\n\n      return _$$_REQUIRE(_dependencyMap[4], \"./general.js\")[rule.type](func, rule, options, context);\n    }, options && options.rootFunc || _$$_REQUIRE(_dependencyMap[2], \"boolbase\").trueFunc);\n  }\n\n  function reduceRules(a, b) {\n    if (b === _$$_REQUIRE(_dependencyMap[2], \"boolbase\").falseFunc || a === _$$_REQUIRE(_dependencyMap[2], \"boolbase\").trueFunc) {\n      return a;\n    }\n\n    if (a === _$$_REQUIRE(_dependencyMap[2], \"boolbase\").falseFunc || b === _$$_REQUIRE(_dependencyMap[2], \"boolbase\").trueFunc) {\n      return b;\n    }\n\n    return function combine(elem) {\n      return a(elem) || b(elem);\n    };\n  }\n\n  function containsTraversal(t) {\n    return t.some(isTraversal);\n  }\n\n  _$$_REQUIRE(_dependencyMap[5], \"./pseudos.js\").filters.not = function (next, token, options, context) {\n    var opts = {\n      xmlMode: !!(options && options.xmlMode),\n      strict: !!(options && options.strict),\n      adapter: options.adapter\n    };\n\n    if (opts.strict) {\n      if (token.length > 1 || token.some(containsTraversal)) {\n        throw new Error(\"complex selectors in :not aren't allowed in strict mode\");\n      }\n    }\n\n    var func = compileToken(token, opts, context);\n    if (func === _$$_REQUIRE(_dependencyMap[2], \"boolbase\").falseFunc) return next;\n    if (func === _$$_REQUIRE(_dependencyMap[2], \"boolbase\").trueFunc) return _$$_REQUIRE(_dependencyMap[2], \"boolbase\").falseFunc;\n    return function not(elem) {\n      return !func(elem) && next(elem);\n    };\n  };\n\n  _$$_REQUIRE(_dependencyMap[5], \"./pseudos.js\").filters.has = function (next, token, options) {\n    var adapter = options.adapter;\n    var opts = {\n      xmlMode: !!(options && options.xmlMode),\n      strict: !!(options && options.strict),\n      adapter: adapter\n    };\n    var context = token.some(containsTraversal) ? [PLACEHOLDER_ELEMENT] : null;\n    var func = compileToken(token, opts, context);\n    if (func === _$$_REQUIRE(_dependencyMap[2], \"boolbase\").falseFunc) return _$$_REQUIRE(_dependencyMap[2], \"boolbase\").falseFunc;\n\n    if (func === _$$_REQUIRE(_dependencyMap[2], \"boolbase\").trueFunc) {\n      return function hasChild(elem) {\n        return adapter.getChildren(elem).some(adapter.isTag) && next(elem);\n      };\n    }\n\n    func = wrap(func, options);\n\n    if (context) {\n      return function has(elem) {\n        return next(elem) && (context[0] = elem, adapter.existsOne(func, adapter.getChildren(elem)));\n      };\n    }\n\n    return function has(elem) {\n      return next(elem) && adapter.existsOne(func, adapter.getChildren(elem));\n    };\n  };\n\n  _$$_REQUIRE(_dependencyMap[5], \"./pseudos.js\").filters.matches = function (next, token, options, context) {\n    var opts = {\n      xmlMode: !!(options && options.xmlMode),\n      strict: !!(options && options.strict),\n      rootFunc: next,\n      adapter: options.adapter\n    };\n    return compileToken(token, opts, context);\n  };\n\n  compile.compileToken = compileToken;\n  compile.compileUnsafe = compileUnsafe;\n  compile.Pseudos = _$$_REQUIRE(_dependencyMap[5], \"./pseudos.js\");\n});","lineCount":181,"map":[[2,0,5,0,"module"],[2,2,5,0,"module"],[2,8,5,6],[2,9,5,7,"exports"],[2,16,5,0],[2,19,5,17,"compile"],[2,26,5,0],[4,0,18,0],[4,11,18,9,"compile"],[4,18,18,0],[4,19,18,17,"selector"],[4,27,18,0],[4,29,18,27,"options"],[4,36,18,0],[4,38,18,36,"context"],[4,45,18,0],[4,47,18,45],[5,0,19,4],[5,8,19,8,"next"],[5,12,19,12],[5,15,19,15,"compileUnsafe"],[5,28,19,28],[5,29,19,29,"selector"],[5,37,19,28],[5,39,19,39,"options"],[5,46,19,28],[5,48,19,48,"context"],[5,55,19,28],[5,56,19,4],[6,0,20,4],[6,11,20,11,"wrap"],[6,15,20,15],[6,16,20,16,"next"],[6,20,20,15],[6,22,20,22,"options"],[6,29,20,15],[6,30,20,4],[7,0,21,1],[9,0,23,0],[9,11,23,9,"wrap"],[9,15,23,0],[9,16,23,14,"next"],[9,20,23,0],[9,22,23,20,"options"],[9,29,23,0],[9,31,23,29],[10,0,24,4],[10,8,24,8,"adapter"],[10,15,24,15],[10,18,24,18,"options"],[10,25,24,25],[10,26,24,26,"adapter"],[10,33,24,4],[11,0,26,4],[11,11,26,11],[11,20,26,20,"base"],[11,24,26,11],[11,25,26,25,"elem"],[11,29,26,11],[11,31,26,31],[12,0,27,8],[12,13,27,15,"adapter"],[12,20,27,22],[12,21,27,23,"isTag"],[12,26,27,15],[12,27,27,29,"elem"],[12,31,27,15],[12,36,27,38,"next"],[12,40,27,42],[12,41,27,43,"elem"],[12,45,27,42],[12,46,27,8],[13,0,28,5],[13,5,26,4],[14,0,29,1],[16,0,31,0],[16,11,31,9,"compileUnsafe"],[16,24,31,0],[16,25,31,23,"selector"],[16,33,31,0],[16,35,31,33,"options"],[16,42,31,0],[16,44,31,42,"context"],[16,51,31,0],[16,53,31,51],[17,0,32,4],[17,8,32,8,"token"],[17,13,32,13],[17,16,32,16],[17,65,32,22,"selector"],[17,73,32,16],[17,75,32,32,"options"],[17,82,32,16],[17,83,32,4],[19,0,33,4],[19,11,33,11,"compileToken"],[19,23,33,23],[19,24,33,24,"token"],[19,29,33,23],[19,31,33,31,"options"],[19,38,33,23],[19,40,33,40,"context"],[19,47,33,23],[19,48,33,4],[20,0,34,1],[22,0,36,0],[22,11,36,9,"includesScopePseudo"],[22,30,36,0],[22,31,36,29,"t"],[22,32,36,0],[22,34,36,32],[23,0,37,4],[23,11,38,8,"t"],[23,12,38,9],[23,13,38,10,"type"],[23,17,38,8],[23,22,38,19],[23,30,38,8],[23,35,39,9,"t"],[23,36,39,10],[23,37,39,11,"name"],[23,41,39,9],[23,46,39,20],[23,53,39,9],[23,57,40,13,"Array"],[23,62,40,18],[23,63,40,19,"isArray"],[23,70,40,13],[23,71,40,27,"t"],[23,72,40,28],[23,73,40,29,"data"],[23,77,40,13],[23,82,41,16,"t"],[23,83,41,17],[23,84,41,18,"data"],[23,88,41,16],[23,89,41,23,"some"],[23,93,41,16],[23,94,41,28],[23,104,41,37,"data"],[23,108,41,28],[23,110,41,43],[24,0,42,20],[24,13,42,27,"data"],[24,17,42,31],[24,18,42,32,"some"],[24,22,42,27],[24,23,42,37,"includesScopePseudo"],[24,42,42,27],[24,43,42,20],[25,0,43,17],[25,5,41,16],[25,6,38,8],[25,7,37,4],[26,0,45,1],[28,0,47,0],[28,6,47,4,"DESCENDANT_TOKEN"],[28,22,47,20],[28,25,47,23],[29,0,47,25,"type"],[29,4,47,25,"type"],[29,8,47,29],[29,10,47,31],[30,0,47,23],[30,3,47,0],[31,0,48,0],[31,6,48,4,"FLEXIBLE_DESCENDANT_TOKEN"],[31,31,48,29],[31,34,48,32],[32,0,48,34,"type"],[32,4,48,34,"type"],[32,8,48,38],[32,10,48,40],[33,0,48,32],[33,3,48,0],[34,0,49,0],[34,6,49,4,"SCOPE_TOKEN"],[34,17,49,15],[34,20,49,18],[35,0,49,20,"type"],[35,4,49,20,"type"],[35,8,49,24],[35,10,49,26],[35,18,49,18],[36,0,49,36,"name"],[36,4,49,36,"name"],[36,8,49,40],[36,10,49,42],[37,0,49,18],[37,3,49,0],[38,0,50,0],[38,6,50,4,"PLACEHOLDER_ELEMENT"],[38,25,50,23],[38,28,50,26],[38,30,50,0],[40,0,54,0],[40,11,54,9,"absolutize"],[40,21,54,0],[40,22,54,20,"token"],[40,27,54,0],[40,29,54,27,"options"],[40,36,54,0],[40,38,54,36,"context"],[40,45,54,0],[40,47,54,45],[41,0,55,4],[41,8,55,8,"adapter"],[41,15,55,15],[41,18,55,18,"options"],[41,25,55,25],[41,26,55,26,"adapter"],[41,33,55,4],[42,0,58,4],[42,8,58,8,"hasContext"],[42,18,58,18],[42,21,59,8],[42,22,59,9],[42,23,59,10,"context"],[42,30,59,8],[42,34,60,8],[42,35,60,9],[42,36,60,10,"context"],[42,43,60,17],[42,44,60,18,"length"],[42,50,59,8],[42,54,61,8,"context"],[42,61,61,15],[42,62,61,16,"every"],[42,67,61,8],[42,68,61,22],[42,78,61,31,"e"],[42,79,61,22],[42,81,61,34],[43,0,62,12],[43,13,62,19,"e"],[43,14,62,20],[43,19,62,25,"PLACEHOLDER_ELEMENT"],[43,38,62,19],[43,42,62,48],[43,43,62,49],[43,44,62,50,"adapter"],[43,51,62,57],[43,52,62,58,"getParent"],[43,61,62,50],[43,62,62,68,"e"],[43,63,62,50],[43,64,62,12],[44,0,63,9],[44,5,61,8],[44,6,58,4],[45,0,65,4,"token"],[45,4,65,4,"token"],[45,9,65,9],[45,10,65,10,"forEach"],[45,17,65,4],[45,18,65,18],[45,28,65,27,"t"],[45,29,65,18],[45,31,65,30],[46,0,66,8],[46,10,66,12,"t"],[46,11,66,13],[46,12,66,14,"length"],[46,18,66,12],[46,21,66,23],[46,22,66,12],[46,26,66,28,"isTraversal"],[46,37,66,39],[46,38,66,40,"t"],[46,39,66,41],[46,40,66,42],[46,41,66,41],[46,42,66,39],[46,43,66,12],[46,47,66,49,"t"],[46,48,66,50],[46,49,66,51],[46,50,66,50],[46,51,66,49],[46,52,66,54,"type"],[46,56,66,49],[46,61,66,63],[46,73,66,8],[46,75,66,77],[46,76,68,9],[46,77,66,8],[46,83,68,15],[46,87,68,19,"hasContext"],[46,97,68,29],[46,101,68,33],[46,103,68,35,"Array"],[46,108,68,40],[46,109,68,41,"isArray"],[46,116,68,35],[46,117,68,49,"t"],[46,118,68,35],[46,122,68,54,"t"],[46,123,68,55],[46,124,68,56,"some"],[46,128,68,54],[46,129,68,61,"includesScopePseudo"],[46,148,68,54],[46,149,68,35],[46,152,68,84,"includesScopePseudo"],[46,171,68,103],[46,172,68,104,"t"],[46,173,68,103],[46,174,68,33],[46,175,68,15],[46,177,68,109],[47,0,69,12,"t"],[47,8,69,12,"t"],[47,9,69,13],[47,10,69,14,"unshift"],[47,17,69,12],[47,18,69,22,"DESCENDANT_TOKEN"],[47,34,69,12],[48,0,70,9],[48,7,68,15],[48,13,70,15],[49,0,71,12],[50,0,72,9],[52,0,74,8,"t"],[52,6,74,8,"t"],[52,7,74,9],[52,8,74,10,"unshift"],[52,15,74,8],[52,16,74,18,"SCOPE_TOKEN"],[52,27,74,8],[53,0,75,5],[53,5,65,4],[54,0,76,1],[56,0,78,0],[56,11,78,9,"compileToken"],[56,23,78,0],[56,24,78,22,"token"],[56,29,78,0],[56,31,78,29,"options"],[56,38,78,0],[56,40,78,38,"context"],[56,47,78,0],[56,49,78,47],[57,0,79,4,"token"],[57,4,79,4,"token"],[57,9,79,9],[57,12,79,12,"token"],[57,17,79,17],[57,18,79,18,"filter"],[57,24,79,12],[57,25,79,25],[57,35,79,34,"t"],[57,36,79,25],[57,38,79,37],[58,0,80,8],[58,13,80,15,"t"],[58,14,80,16],[58,15,80,17,"length"],[58,21,80,15],[58,24,80,26],[58,25,80,8],[59,0,81,5],[59,5,79,12],[59,6,79,4],[60,0,83,4,"token"],[60,4,83,4,"token"],[60,9,83,9],[60,10,83,10,"forEach"],[60,17,83,4],[61,0,85,4],[61,8,85,8,"isArrayContext"],[61,22,85,22],[61,25,85,25,"Array"],[61,30,85,30],[61,31,85,31,"isArray"],[61,38,85,25],[61,39,85,39,"context"],[61,46,85,25],[61,47,85,4],[62,0,87,4,"context"],[62,4,87,4,"context"],[62,11,87,11],[62,14,87,15,"options"],[62,21,87,22],[62,25,87,26,"options"],[62,32,87,33],[62,33,87,34,"context"],[62,40,87,14],[62,44,87,46,"context"],[62,51,87,4],[63,0,89,4],[63,8,89,8,"context"],[63,15,89,15],[63,19,89,19],[63,20,89,20,"isArrayContext"],[63,34,89,4],[63,36,89,36,"context"],[63,43,89,43],[63,46,89,46],[63,47,89,47,"context"],[63,54,89,46],[63,55,89,36],[64,0,91,4,"absolutize"],[64,4,91,4,"absolutize"],[64,14,91,14],[64,15,91,15,"token"],[64,20,91,14],[64,22,91,22,"options"],[64,29,91,14],[64,31,91,31,"context"],[64,38,91,14],[64,39,91,4],[65,0,93,4],[65,8,93,8,"shouldTestNextSiblings"],[65,30,93,30],[65,33,93,33],[65,38,93,4],[66,0,95,4],[66,8,95,8,"query"],[66,13,95,13],[66,16,95,16,"token"],[66,21,95,21],[66,22,96,9,"map"],[66,25,95,16],[66,26,96,13],[66,36,96,22,"rules"],[66,41,96,13],[66,43,96,29],[67,0,97,12],[67,10,97,16,"rules"],[67,15,97,21],[67,16,97,22],[67,17,97,21],[67,18,97,16],[67,22,97,28,"rules"],[67,27,97,33],[67,28,97,34],[67,29,97,33],[67,30,97,16],[67,34,97,40,"rules"],[67,39,97,45],[67,40,97,46],[67,41,97,45],[67,42,97,40],[67,43,97,49,"name"],[67,47,97,40],[67,52,97,58],[67,59,97,12],[67,61,97,67],[68,0,98,16],[68,12,98,20,"ruleType"],[68,20,98,28],[68,23,98,31,"rules"],[68,28,98,36],[68,29,98,37],[68,30,98,36],[68,31,98,31],[68,32,98,40,"type"],[68,36,98,16],[70,0,99,16],[70,12,99,20,"isArrayContext"],[70,26,99,34],[70,30,99,38,"ruleType"],[70,38,99,46],[70,43,99,51],[70,55,99,16],[70,57,99,65],[71,0,100,20,"rules"],[71,10,100,20,"rules"],[71,15,100,25],[71,16,100,26],[71,17,100,25],[71,18,100,20],[71,21,100,31,"FLEXIBLE_DESCENDANT_TOKEN"],[71,46,100,20],[72,0,101,17],[72,9,99,16],[72,15,101,23],[72,19,101,27,"ruleType"],[72,27,101,35],[72,32,101,40],[72,42,101,27],[72,46,101,54,"ruleType"],[72,54,101,62],[72,59,101,67],[72,68,101,23],[72,70,101,78],[73,0,102,20,"shouldTestNextSiblings"],[73,10,102,20,"shouldTestNextSiblings"],[73,32,102,42],[73,35,102,45],[73,39,102,20],[74,0,103,17],[75,0,104,13],[77,0,105,12],[77,13,105,19,"compileRules"],[77,25,105,31],[77,26,105,32,"rules"],[77,31,105,31],[77,33,105,39,"options"],[77,40,105,31],[77,42,105,48,"context"],[77,49,105,31],[77,50,105,12],[78,0,106,9],[78,5,95,16],[78,7,107,9,"reduce"],[78,13,95,16],[78,14,107,16,"reduceRules"],[78,25,95,16],[78,80,95,4],[79,0,109,4,"query"],[79,4,109,4,"query"],[79,9,109,9],[79,10,109,10,"shouldTestNextSiblings"],[79,32,109,4],[79,35,109,35,"shouldTestNextSiblings"],[79,57,109,4],[80,0,111,4],[80,11,111,11,"query"],[80,16,111,4],[81,0,112,1],[83,0,114,0],[83,11,114,9,"isTraversal"],[83,22,114,0],[83,23,114,21,"t"],[83,24,114,0],[83,26,114,24],[84,0,115,4],[84,11,115,11],[84,62,115,21,"t"],[84,63,115,22],[84,64,115,23,"type"],[84,68,115,11],[84,72,115,31],[84,73,115,4],[85,0,116,1],[87,0,118,0],[87,11,118,9,"compileRules"],[87,23,118,0],[87,24,118,22,"rules"],[87,29,118,0],[87,31,118,29,"options"],[87,38,118,0],[87,40,118,38,"context"],[87,47,118,0],[87,49,118,47],[88,0,119,4],[88,11,119,11,"rules"],[88,16,119,16],[88,17,119,17,"reduce"],[88,23,119,11],[88,24,119,24],[88,34,119,33,"func"],[88,38,119,24],[88,40,119,39,"rule"],[88,44,119,24],[88,46,119,45],[89,0,120,8],[89,10,120,12,"func"],[89,14,120,16],[89,71,120,8],[89,73,120,32],[89,80,120,39,"func"],[89,84,120,32],[91,0,122,8],[91,10,122,12],[91,12,122,14,"rule"],[91,16,122,18],[91,17,122,19,"type"],[91,21,122,14],[91,71,122,12],[91,72,122,8],[91,74,122,35],[92,0,123,12],[92,14,123,18],[92,18,123,22,"Error"],[92,23,123,18],[92,24,123,28],[92,39,123,43,"rule"],[92,43,123,47],[92,44,123,48,"type"],[92,48,123,28],[92,51,123,55],[92,84,123,18],[92,85,123,12],[93,0,124,9],[95,0,126,8],[95,13,126,15],[95,60,126,21,"rule"],[95,64,126,25],[95,65,126,26,"type"],[95,69,126,15],[95,71,126,32,"func"],[95,75,126,15],[95,77,126,38,"rule"],[95,81,126,15],[95,83,126,44,"options"],[95,90,126,15],[95,92,126,53,"context"],[95,99,126,15],[95,100,126,8],[96,0,127,5],[96,5,119,11],[96,7,127,8,"options"],[96,14,127,15],[96,18,127,19,"options"],[96,25,127,26],[96,26,127,27,"rootFunc"],[96,34,127,7],[96,89,119,11],[96,90,119,4],[97,0,128,1],[99,0,130,0],[99,11,130,9,"reduceRules"],[99,22,130,0],[99,23,130,21,"a"],[99,24,130,0],[99,26,130,24,"b"],[99,27,130,0],[99,29,130,27],[100,0,131,4],[100,8,131,8,"b"],[100,9,131,9],[100,66,131,8],[100,70,131,27,"a"],[100,71,131,28],[100,127,131,4],[100,129,131,43],[101,0,132,8],[101,13,132,15,"a"],[101,14,132,8],[102,0,133,5],[104,0,134,4],[104,8,134,8,"a"],[104,9,134,9],[104,66,134,8],[104,70,134,27,"b"],[104,71,134,28],[104,127,134,4],[104,129,134,43],[105,0,135,8],[105,13,135,15,"b"],[105,14,135,8],[106,0,136,5],[108,0,138,4],[108,11,138,11],[108,20,138,20,"combine"],[108,27,138,11],[108,28,138,28,"elem"],[108,32,138,11],[108,34,138,34],[109,0,139,8],[109,13,139,15,"a"],[109,14,139,16],[109,15,139,17,"elem"],[109,19,139,16],[109,20,139,15],[109,24,139,26,"b"],[109,25,139,27],[109,26,139,28,"elem"],[109,30,139,27],[109,31,139,8],[110,0,140,5],[110,5,138,4],[111,0,141,1],[113,0,143,0],[113,11,143,9,"containsTraversal"],[113,28,143,0],[113,29,143,27,"t"],[113,30,143,0],[113,32,143,30],[114,0,144,4],[114,11,144,11,"t"],[114,12,144,12],[114,13,144,13,"some"],[114,17,144,11],[114,18,144,18,"isTraversal"],[114,29,144,11],[114,30,144,4],[115,0,145,1],[117,0,150,0],[117,57,150,8,"not"],[117,60,150,0],[117,63,150,14],[117,73,150,23,"next"],[117,77,150,14],[117,79,150,29,"token"],[117,84,150,14],[117,86,150,36,"options"],[117,93,150,14],[117,95,150,45,"context"],[117,102,150,14],[117,104,150,54],[118,0,151,4],[118,8,151,8,"opts"],[118,12,151,12],[118,15,151,15],[119,0,152,8,"xmlMode"],[119,6,152,8,"xmlMode"],[119,13,152,15],[119,15,152,17],[119,16,152,18],[119,18,152,20,"options"],[119,25,152,27],[119,29,152,31,"options"],[119,36,152,38],[119,37,152,39,"xmlMode"],[119,44,152,18],[119,45,151,15],[120,0,153,8,"strict"],[120,6,153,8,"strict"],[120,12,153,14],[120,14,153,16],[120,15,153,17],[120,17,153,19,"options"],[120,24,153,26],[120,28,153,30,"options"],[120,35,153,37],[120,36,153,38,"strict"],[120,42,153,17],[120,43,151,15],[121,0,154,8,"adapter"],[121,6,154,8,"adapter"],[121,13,154,15],[121,15,154,17,"options"],[121,22,154,24],[121,23,154,25,"adapter"],[122,0,151,15],[122,5,151,4],[124,0,157,4],[124,8,157,8,"opts"],[124,12,157,12],[124,13,157,13,"strict"],[124,19,157,4],[124,21,157,21],[125,0,158,8],[125,10,158,12,"token"],[125,15,158,17],[125,16,158,18,"length"],[125,22,158,12],[125,25,158,27],[125,26,158,12],[125,30,158,32,"token"],[125,35,158,37],[125,36,158,38,"some"],[125,40,158,32],[125,41,158,43,"containsTraversal"],[125,58,158,32],[125,59,158,8],[125,61,158,63],[126,0,159,12],[126,14,159,18],[126,18,159,22,"Error"],[126,23,159,18],[126,24,159,28],[126,81,159,18],[126,82,159,12],[127,0,160,9],[128,0,161,5],[130,0,163,4],[130,8,163,8,"func"],[130,12,163,12],[130,15,163,15,"compileToken"],[130,27,163,27],[130,28,163,28,"token"],[130,33,163,27],[130,35,163,35,"opts"],[130,39,163,27],[130,41,163,41,"context"],[130,48,163,27],[130,49,163,4],[131,0,165,4],[131,8,165,8,"func"],[131,12,165,12],[131,69,165,4],[131,71,165,28],[131,78,165,35,"next"],[131,82,165,28],[132,0,166,4],[132,8,166,8,"func"],[132,12,166,12],[132,68,166,4],[132,70,166,27],[133,0,168,4],[133,11,168,11],[133,20,168,20,"not"],[133,23,168,11],[133,24,168,24,"elem"],[133,28,168,11],[133,30,168,30],[134,0,169,8],[134,13,169,15],[134,14,169,16,"func"],[134,18,169,20],[134,19,169,21,"elem"],[134,23,169,20],[134,24,169,15],[134,28,169,30,"next"],[134,32,169,34],[134,33,169,35,"elem"],[134,37,169,34],[134,38,169,8],[135,0,170,5],[135,5,168,4],[136,0,171,1],[136,3,150,0],[138,0,173,0],[138,57,173,8,"has"],[138,60,173,0],[138,63,173,14],[138,73,173,23,"next"],[138,77,173,14],[138,79,173,29,"token"],[138,84,173,14],[138,86,173,36,"options"],[138,93,173,14],[138,95,173,45],[139,0,174,4],[139,8,174,8,"adapter"],[139,15,174,15],[139,18,174,18,"options"],[139,25,174,25],[139,26,174,26,"adapter"],[139,33,174,4],[140,0,175,4],[140,8,175,8,"opts"],[140,12,175,12],[140,15,175,15],[141,0,176,8,"xmlMode"],[141,6,176,8,"xmlMode"],[141,13,176,15],[141,15,176,17],[141,16,176,18],[141,18,176,20,"options"],[141,25,176,27],[141,29,176,31,"options"],[141,36,176,38],[141,37,176,39,"xmlMode"],[141,44,176,18],[141,45,175,15],[142,0,177,8,"strict"],[142,6,177,8,"strict"],[142,12,177,14],[142,14,177,16],[142,15,177,17],[142,17,177,19,"options"],[142,24,177,26],[142,28,177,30,"options"],[142,35,177,37],[142,36,177,38,"strict"],[142,42,177,17],[142,43,175,15],[143,0,178,8,"adapter"],[143,6,178,8,"adapter"],[143,13,178,15],[143,15,178,17,"adapter"],[144,0,175,15],[144,5,175,4],[145,0,182,4],[145,8,182,8,"context"],[145,15,182,15],[145,18,182,18,"token"],[145,23,182,23],[145,24,182,24,"some"],[145,28,182,18],[145,29,182,29,"containsTraversal"],[145,46,182,18],[145,50,182,50],[145,51,182,51,"PLACEHOLDER_ELEMENT"],[145,70,182,50],[145,71,182,18],[145,74,182,74],[145,78,182,4],[146,0,184,4],[146,8,184,8,"func"],[146,12,184,12],[146,15,184,15,"compileToken"],[146,27,184,27],[146,28,184,28,"token"],[146,33,184,27],[146,35,184,35,"opts"],[146,39,184,27],[146,41,184,41,"context"],[146,48,184,27],[146,49,184,4],[147,0,186,4],[147,8,186,8,"func"],[147,12,186,12],[147,69,186,4],[147,71,186,28],[149,0,187,4],[149,8,187,8,"func"],[149,12,187,12],[149,68,187,4],[149,70,187,27],[150,0,188,8],[150,13,188,15],[150,22,188,24,"hasChild"],[150,30,188,15],[150,31,188,33,"elem"],[150,35,188,15],[150,37,188,39],[151,0,189,12],[151,15,189,19,"adapter"],[151,22,189,26],[151,23,189,27,"getChildren"],[151,34,189,19],[151,35,189,39,"elem"],[151,39,189,19],[151,41,189,45,"some"],[151,45,189,19],[151,46,189,50,"adapter"],[151,53,189,57],[151,54,189,58,"isTag"],[151,59,189,19],[151,64,189,68,"next"],[151,68,189,72],[151,69,189,73,"elem"],[151,73,189,72],[151,74,189,12],[152,0,190,9],[152,7,188,8],[153,0,191,5],[155,0,193,4,"func"],[155,4,193,4,"func"],[155,8,193,8],[155,11,193,11,"wrap"],[155,15,193,15],[155,16,193,16,"func"],[155,20,193,15],[155,22,193,22,"options"],[155,29,193,15],[155,30,193,4],[157,0,195,4],[157,8,195,8,"context"],[157,15,195,4],[157,17,195,17],[158,0,196,8],[158,13,196,15],[158,22,196,24,"has"],[158,25,196,15],[158,26,196,28,"elem"],[158,30,196,15],[158,32,196,34],[159,0,197,12],[159,15,197,19,"next"],[159,19,197,23],[159,20,197,24,"elem"],[159,24,197,23],[159,25,197,19],[159,30,197,35,"context"],[159,37,197,42],[159,38,197,43],[159,39,197,42],[159,40,197,35],[159,43,197,48,"elem"],[159,47,197,34],[159,49,197,55,"adapter"],[159,56,197,62],[159,57,197,63,"existsOne"],[159,66,197,55],[159,67,197,73,"func"],[159,71,197,55],[159,73,197,79,"adapter"],[159,80,197,86],[159,81,197,87,"getChildren"],[159,92,197,79],[159,93,197,99,"elem"],[159,97,197,79],[159,98,197,55],[159,99,197,19],[159,100,197,12],[160,0,198,9],[160,7,196,8],[161,0,199,5],[163,0,201,4],[163,11,201,11],[163,20,201,20,"has"],[163,23,201,11],[163,24,201,24,"elem"],[163,28,201,11],[163,30,201,30],[164,0,202,8],[164,13,202,15,"next"],[164,17,202,19],[164,18,202,20,"elem"],[164,22,202,19],[164,23,202,15],[164,27,202,29,"adapter"],[164,34,202,36],[164,35,202,37,"existsOne"],[164,44,202,29],[164,45,202,47,"func"],[164,49,202,29],[164,51,202,53,"adapter"],[164,58,202,60],[164,59,202,61,"getChildren"],[164,70,202,53],[164,71,202,73,"elem"],[164,75,202,53],[164,76,202,29],[164,77,202,8],[165,0,203,5],[165,5,201,4],[166,0,204,1],[166,3,173,0],[168,0,206,0],[168,57,206,8,"matches"],[168,64,206,0],[168,67,206,18],[168,77,206,27,"next"],[168,81,206,18],[168,83,206,33,"token"],[168,88,206,18],[168,90,206,40,"options"],[168,97,206,18],[168,99,206,49,"context"],[168,106,206,18],[168,108,206,58],[169,0,207,4],[169,8,207,8,"opts"],[169,12,207,12],[169,15,207,15],[170,0,208,8,"xmlMode"],[170,6,208,8,"xmlMode"],[170,13,208,15],[170,15,208,17],[170,16,208,18],[170,18,208,20,"options"],[170,25,208,27],[170,29,208,31,"options"],[170,36,208,38],[170,37,208,39,"xmlMode"],[170,44,208,18],[170,45,207,15],[171,0,209,8,"strict"],[171,6,209,8,"strict"],[171,12,209,14],[171,14,209,16],[171,15,209,17],[171,17,209,19,"options"],[171,24,209,26],[171,28,209,30,"options"],[171,35,209,37],[171,36,209,38,"strict"],[171,42,209,17],[171,43,207,15],[172,0,210,8,"rootFunc"],[172,6,210,8,"rootFunc"],[172,14,210,16],[172,16,210,18,"next"],[172,20,207,15],[173,0,211,8,"adapter"],[173,6,211,8,"adapter"],[173,13,211,15],[173,15,211,17,"options"],[173,22,211,24],[173,23,211,25,"adapter"],[174,0,207,15],[174,5,207,4],[175,0,214,4],[175,11,214,11,"compileToken"],[175,23,214,23],[175,24,214,24,"token"],[175,29,214,23],[175,31,214,31,"opts"],[175,35,214,23],[175,37,214,37,"context"],[175,44,214,23],[175,45,214,4],[176,0,215,1],[176,3,206,0],[178,0,217,0,"compile"],[178,2,217,0,"compile"],[178,9,217,7],[178,10,217,8,"compileToken"],[178,22,217,0],[178,25,217,23,"compileToken"],[178,37,217,0],[179,0,218,0,"compile"],[179,2,218,0,"compile"],[179,9,218,7],[179,10,218,8,"compileUnsafe"],[179,23,218,0],[179,26,218,24,"compileUnsafe"],[179,39,218,0],[180,0,219,0,"compile"],[180,2,219,0,"compile"],[180,9,219,7],[180,10,219,8,"Pseudos"],[180,17,219,0]],"functionMap":{"names":["<global>","compile","wrap","base","compileUnsafe","includesScopePseudo","t.data.some$argument_0","absolutize","context.every$argument_0","token.forEach$argument_0","compileToken","token.filter$argument_0","token.map$argument_0","isTraversal","compileRules","rules.reduce$argument_0","reduceRules","combine","containsTraversal","filters.not","not","filters.has","hasChild","has","filters.matches"],"mappings":"AAA;ACiB;CDG;AEE;WCG;KDE;CFC;AIE;CJG;AKE;4BCK;iBDE;CLE;AOS;sBCO;SDE;kBEE;KFU;CPC;AUE;yBCC;KDE;aEe;SFU;CVM;AaE;CbE;AcE;wBCC;KDQ;CdC;AgBE;WCQ;KDE;ChBC;AkBE;ClBE;cmBK;WCkB;KDE;CnBC;cqBE;eCe;SDE;eEM;SFE;WEG;KFE;CrBC;kBwBE;CxBS"}},"type":"js/module"}]}