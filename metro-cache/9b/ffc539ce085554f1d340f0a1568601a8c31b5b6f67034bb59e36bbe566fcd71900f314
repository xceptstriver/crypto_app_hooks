{"dependencies":[{"name":"../utils/createCustomError","data":{"asyncType":null,"locs":[{"start":{"line":84,"column":18},"end":{"line":87,"column":5}},{"start":{"line":95,"column":18},"end":{"line":95,"column":64}}]}},{"name":"../definition-syntax/generate","data":{"asyncType":null,"locs":[{"start":{"line":105,"column":28},"end":{"line":105,"column":44}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var defaultLoc = {\n    offset: 0,\n    line: 1,\n    column: 1\n  };\n\n  function locateMismatch(matchResult, node) {\n    var tokens = matchResult.tokens;\n    var longestMatch = matchResult.longestMatch;\n    var mismatchNode = longestMatch < tokens.length ? tokens[longestMatch].node || null : null;\n    var badNode = mismatchNode !== node ? mismatchNode : null;\n    var mismatchOffset = 0;\n    var mismatchLength = 0;\n    var entries = 0;\n    var css = '';\n    var start;\n    var end;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i].value;\n\n      if (i === longestMatch) {\n        mismatchLength = token.length;\n        mismatchOffset = css.length;\n      }\n\n      if (badNode !== null && tokens[i].node === badNode) {\n        if (i <= longestMatch) {\n          entries++;\n        } else {\n          entries = 0;\n        }\n      }\n\n      css += token;\n    }\n\n    if (longestMatch === tokens.length || entries > 1) {\n      start = fromLoc(badNode || node, 'end') || buildLoc(defaultLoc, css);\n      end = buildLoc(start);\n    } else {\n      start = fromLoc(badNode, 'start') || buildLoc(fromLoc(node, 'start') || defaultLoc, css.slice(0, mismatchOffset));\n      end = fromLoc(badNode, 'end') || buildLoc(start, css.substr(mismatchOffset, mismatchLength));\n    }\n\n    return {\n      css: css,\n      mismatchOffset: mismatchOffset,\n      mismatchLength: mismatchLength,\n      start: start,\n      end: end\n    };\n  }\n\n  function fromLoc(node, point) {\n    var value = node && node.loc && node.loc[point];\n\n    if (value) {\n      return 'line' in value ? buildLoc(value) : value;\n    }\n\n    return null;\n  }\n\n  function buildLoc(_ref, extra) {\n    var offset = _ref.offset,\n        line = _ref.line,\n        column = _ref.column;\n    var loc = {\n      offset: offset,\n      line: line,\n      column: column\n    };\n\n    if (extra) {\n      var lines = extra.split(/\\n|\\r\\n?|\\f/);\n      loc.offset += extra.length;\n      loc.line += lines.length - 1;\n      loc.column = lines.length === 1 ? loc.column + extra.length : lines.pop().length + 1;\n    }\n\n    return loc;\n  }\n\n  var SyntaxReferenceError = function SyntaxReferenceError(type, referenceName) {\n    var error = _$$_REQUIRE(_dependencyMap[0], \"../utils/createCustomError\")('SyntaxReferenceError', type + (referenceName ? ' `' + referenceName + '`' : ''));\n\n    error.reference = referenceName;\n    return error;\n  };\n\n  var SyntaxMatchError = function SyntaxMatchError(message, syntax, node, matchResult) {\n    var error = _$$_REQUIRE(_dependencyMap[0], \"../utils/createCustomError\")('SyntaxMatchError', message);\n\n    var _locateMismatch = locateMismatch(matchResult, node),\n        css = _locateMismatch.css,\n        mismatchOffset = _locateMismatch.mismatchOffset,\n        mismatchLength = _locateMismatch.mismatchLength,\n        start = _locateMismatch.start,\n        end = _locateMismatch.end;\n\n    error.rawMessage = message;\n    error.syntax = syntax ? _$$_REQUIRE(_dependencyMap[1], \"../definition-syntax/generate\")(syntax) : '<generic>';\n    error.css = css;\n    error.mismatchOffset = mismatchOffset;\n    error.mismatchLength = mismatchLength;\n    error.message = message + '\\n' + '  syntax: ' + error.syntax + '\\n' + '   value: ' + (css || '<empty string>') + '\\n' + '  --------' + new Array(error.mismatchOffset + 1).join('-') + '^';\n    Object.assign(error, start);\n    error.loc = {\n      source: node && node.loc && node.loc.source || '<unknown>',\n      start: start,\n      end: end\n    };\n    return error;\n  };\n\n  module.exports = {\n    SyntaxReferenceError: SyntaxReferenceError,\n    SyntaxMatchError: SyntaxMatchError\n  };\n});","lineCount":122,"map":[[2,0,3,0],[2,6,3,6,"defaultLoc"],[2,16,3,16],[2,19,3,19],[3,0,3,21,"offset"],[3,4,3,21,"offset"],[3,10,3,27],[3,12,3,29],[3,13,3,19],[4,0,3,32,"line"],[4,4,3,32,"line"],[4,8,3,36],[4,10,3,38],[4,11,3,19],[5,0,3,41,"column"],[5,4,3,41,"column"],[5,10,3,47],[5,12,3,49],[6,0,3,19],[6,3,3,0],[8,0,5,0],[8,11,5,9,"locateMismatch"],[8,25,5,0],[8,26,5,24,"matchResult"],[8,37,5,0],[8,39,5,37,"node"],[8,43,5,0],[8,45,5,43],[9,0,6,4],[9,8,6,10,"tokens"],[9,14,6,16],[9,17,6,19,"matchResult"],[9,28,6,30],[9,29,6,31,"tokens"],[9,35,6,4],[10,0,7,4],[10,8,7,10,"longestMatch"],[10,20,7,22],[10,23,7,25,"matchResult"],[10,34,7,36],[10,35,7,37,"longestMatch"],[10,47,7,4],[11,0,8,4],[11,8,8,10,"mismatchNode"],[11,20,8,22],[11,23,8,25,"longestMatch"],[11,35,8,37],[11,38,8,40,"tokens"],[11,44,8,46],[11,45,8,47,"length"],[11,51,8,25],[11,54,8,56,"tokens"],[11,60,8,62],[11,61,8,63,"longestMatch"],[11,73,8,62],[11,74,8,56],[11,75,8,77,"node"],[11,79,8,56],[11,83,8,85],[11,87,8,25],[11,90,8,92],[11,94,8,4],[12,0,9,4],[12,8,9,10,"badNode"],[12,15,9,17],[12,18,9,20,"mismatchNode"],[12,30,9,32],[12,35,9,37,"node"],[12,39,9,20],[12,42,9,44,"mismatchNode"],[12,54,9,20],[12,57,9,59],[12,61,9,4],[13,0,10,4],[13,8,10,8,"mismatchOffset"],[13,22,10,22],[13,25,10,25],[13,26,10,4],[14,0,11,4],[14,8,11,8,"mismatchLength"],[14,22,11,22],[14,25,11,25],[14,26,11,4],[15,0,12,4],[15,8,12,8,"entries"],[15,15,12,15],[15,18,12,18],[15,19,12,4],[16,0,13,4],[16,8,13,8,"css"],[16,11,13,11],[16,14,13,14],[16,16,13,4],[17,0,14,4],[17,8,14,8,"start"],[17,13,14,4],[18,0,15,4],[18,8,15,8,"end"],[18,11,15,4],[20,0,17,4],[20,9,17,9],[20,13,17,13,"i"],[20,14,17,14],[20,17,17,17],[20,18,17,4],[20,20,17,20,"i"],[20,21,17,21],[20,24,17,24,"tokens"],[20,30,17,30],[20,31,17,31,"length"],[20,37,17,4],[20,39,17,39,"i"],[20,40,17,40],[20,42,17,4],[20,44,17,44],[21,0,18,8],[21,10,18,14,"token"],[21,15,18,19],[21,18,18,22,"tokens"],[21,24,18,28],[21,25,18,29,"i"],[21,26,18,28],[21,27,18,22],[21,28,18,32,"value"],[21,33,18,8],[23,0,20,8],[23,10,20,12,"i"],[23,11,20,13],[23,16,20,18,"longestMatch"],[23,28,20,8],[23,30,20,32],[24,0,21,12,"mismatchLength"],[24,8,21,12,"mismatchLength"],[24,22,21,26],[24,25,21,29,"token"],[24,30,21,34],[24,31,21,35,"length"],[24,37,21,12],[25,0,22,12,"mismatchOffset"],[25,8,22,12,"mismatchOffset"],[25,22,22,26],[25,25,22,29,"css"],[25,28,22,32],[25,29,22,33,"length"],[25,35,22,12],[26,0,23,9],[28,0,25,8],[28,10,25,12,"badNode"],[28,17,25,19],[28,22,25,24],[28,26,25,12],[28,30,25,32,"tokens"],[28,36,25,38],[28,37,25,39,"i"],[28,38,25,38],[28,39,25,32],[28,40,25,42,"node"],[28,44,25,32],[28,49,25,51,"badNode"],[28,56,25,8],[28,58,25,60],[29,0,26,12],[29,12,26,16,"i"],[29,13,26,17],[29,17,26,21,"longestMatch"],[29,29,26,12],[29,31,26,35],[30,0,27,16,"entries"],[30,10,27,16,"entries"],[30,17,27,23],[31,0,28,13],[31,9,26,12],[31,15,28,19],[32,0,29,16,"entries"],[32,10,29,16,"entries"],[32,17,29,23],[32,20,29,26],[32,21,29,16],[33,0,30,13],[34,0,31,9],[36,0,33,8,"css"],[36,6,33,8,"css"],[36,9,33,11],[36,13,33,15,"token"],[36,18,33,8],[37,0,34,5],[39,0,36,4],[39,8,36,8,"longestMatch"],[39,20,36,20],[39,25,36,25,"tokens"],[39,31,36,31],[39,32,36,32,"length"],[39,38,36,8],[39,42,36,42,"entries"],[39,49,36,49],[39,52,36,52],[39,53,36,4],[39,55,36,55],[40,0,37,8,"start"],[40,6,37,8,"start"],[40,11,37,13],[40,14,37,16,"fromLoc"],[40,21,37,23],[40,22,37,24,"badNode"],[40,29,37,31],[40,33,37,35,"node"],[40,37,37,23],[40,39,37,41],[40,44,37,23],[40,45,37,16],[40,49,37,51,"buildLoc"],[40,57,37,59],[40,58,37,60,"defaultLoc"],[40,68,37,59],[40,70,37,72,"css"],[40,73,37,59],[40,74,37,8],[41,0,38,8,"end"],[41,6,38,8,"end"],[41,9,38,11],[41,12,38,14,"buildLoc"],[41,20,38,22],[41,21,38,23,"start"],[41,26,38,22],[41,27,38,8],[42,0,39,5],[42,5,36,4],[42,11,39,11],[43,0,40,8,"start"],[43,6,40,8,"start"],[43,11,40,13],[43,14,40,16,"fromLoc"],[43,21,40,23],[43,22,40,24,"badNode"],[43,29,40,23],[43,31,40,33],[43,38,40,23],[43,39,40,16],[43,43,41,12,"buildLoc"],[43,51,41,20],[43,52,41,21,"fromLoc"],[43,59,41,28],[43,60,41,29,"node"],[43,64,41,28],[43,66,41,35],[43,73,41,28],[43,74,41,21],[43,78,41,47,"defaultLoc"],[43,88,41,20],[43,90,41,59,"css"],[43,93,41,62],[43,94,41,63,"slice"],[43,99,41,59],[43,100,41,69],[43,101,41,59],[43,103,41,72,"mismatchOffset"],[43,117,41,59],[43,118,41,20],[43,119,40,8],[44,0,42,8,"end"],[44,6,42,8,"end"],[44,9,42,11],[44,12,42,14,"fromLoc"],[44,19,42,21],[44,20,42,22,"badNode"],[44,27,42,21],[44,29,42,31],[44,34,42,21],[44,35,42,14],[44,39,43,12,"buildLoc"],[44,47,43,20],[44,48,43,21,"start"],[44,53,43,20],[44,55,43,28,"css"],[44,58,43,31],[44,59,43,32,"substr"],[44,65,43,28],[44,66,43,39,"mismatchOffset"],[44,80,43,28],[44,82,43,55,"mismatchLength"],[44,96,43,28],[44,97,43,20],[44,98,42,8],[45,0,44,5],[47,0,46,4],[47,11,46,11],[48,0,47,8,"css"],[48,6,47,8,"css"],[48,9,47,11],[48,11,47,8,"css"],[48,14,46,11],[49,0,48,8,"mismatchOffset"],[49,6,48,8,"mismatchOffset"],[49,20,48,22],[49,22,48,8,"mismatchOffset"],[49,36,46,11],[50,0,49,8,"mismatchLength"],[50,6,49,8,"mismatchLength"],[50,20,49,22],[50,22,49,8,"mismatchLength"],[50,36,46,11],[51,0,50,8,"start"],[51,6,50,8,"start"],[51,11,50,13],[51,13,50,8,"start"],[51,18,46,11],[52,0,51,8,"end"],[52,6,51,8,"end"],[52,9,51,11],[52,11,51,8,"end"],[53,0,46,11],[53,5,46,4],[54,0,53,1],[56,0,55,0],[56,11,55,9,"fromLoc"],[56,18,55,0],[56,19,55,17,"node"],[56,23,55,0],[56,25,55,23,"point"],[56,30,55,0],[56,32,55,30],[57,0,56,4],[57,8,56,10,"value"],[57,13,56,15],[57,16,56,18,"node"],[57,20,56,22],[57,24,56,26,"node"],[57,28,56,30],[57,29,56,31,"loc"],[57,32,56,18],[57,36,56,38,"node"],[57,40,56,42],[57,41,56,43,"loc"],[57,44,56,38],[57,45,56,47,"point"],[57,50,56,38],[57,51,56,4],[59,0,58,4],[59,8,58,8,"value"],[59,13,58,4],[59,15,58,15],[60,0,59,8],[60,13,59,15],[60,23,59,25,"value"],[60,28,59,15],[60,31,59,33,"buildLoc"],[60,39,59,41],[60,40,59,42,"value"],[60,45,59,41],[60,46,59,15],[60,49,59,51,"value"],[60,54,59,8],[61,0,60,5],[63,0,62,4],[63,11,62,11],[63,15,62,4],[64,0,63,1],[66,0,65,0],[66,11,65,9,"buildLoc"],[66,19,65,0],[66,26,65,44,"extra"],[66,31,65,0],[66,33,65,51],[67,0,65,51],[67,8,65,20,"offset"],[67,14,65,51],[67,22,65,20,"offset"],[67,28,65,51],[68,0,65,51],[68,8,65,28,"line"],[68,12,65,51],[68,20,65,28,"line"],[68,24,65,51],[69,0,65,51],[69,8,65,34,"column"],[69,14,65,51],[69,22,65,34,"column"],[69,28,65,51],[70,0,66,4],[70,8,66,10,"loc"],[70,11,66,13],[70,14,66,16],[71,0,67,8,"offset"],[71,6,67,8,"offset"],[71,12,67,14],[71,14,67,8,"offset"],[71,20,66,16],[72,0,68,8,"line"],[72,6,68,8,"line"],[72,10,68,12],[72,12,68,8,"line"],[72,16,66,16],[73,0,69,8,"column"],[73,6,69,8,"column"],[73,12,69,14],[73,14,69,8,"column"],[74,0,66,16],[74,5,66,4],[76,0,72,4],[76,8,72,8,"extra"],[76,13,72,4],[76,15,72,15],[77,0,73,8],[77,10,73,14,"lines"],[77,15,73,19],[77,18,73,22,"extra"],[77,23,73,27],[77,24,73,28,"split"],[77,29,73,22],[77,30,73,34],[77,43,73,22],[77,44,73,8],[78,0,75,8,"loc"],[78,6,75,8,"loc"],[78,9,75,11],[78,10,75,12,"offset"],[78,16,75,8],[78,20,75,22,"extra"],[78,25,75,27],[78,26,75,28,"length"],[78,32,75,8],[79,0,76,8,"loc"],[79,6,76,8,"loc"],[79,9,76,11],[79,10,76,12,"line"],[79,14,76,8],[79,18,76,20,"lines"],[79,23,76,25],[79,24,76,26,"length"],[79,30,76,20],[79,33,76,35],[79,34,76,8],[80,0,77,8,"loc"],[80,6,77,8,"loc"],[80,9,77,11],[80,10,77,12,"column"],[80,16,77,8],[80,19,77,21,"lines"],[80,24,77,26],[80,25,77,27,"length"],[80,31,77,21],[80,36,77,38],[80,37,77,21],[80,40,77,42,"loc"],[80,43,77,45],[80,44,77,46,"column"],[80,50,77,42],[80,53,77,55,"extra"],[80,58,77,60],[80,59,77,61,"length"],[80,65,77,21],[80,68,77,70,"lines"],[80,73,77,75],[80,74,77,76,"pop"],[80,77,77,70],[80,80,77,82,"length"],[80,86,77,70],[80,89,77,91],[80,90,77,8],[81,0,78,5],[83,0,80,4],[83,11,80,11,"loc"],[83,14,80,4],[84,0,81,1],[86,0,83,0],[86,6,83,6,"SyntaxReferenceError"],[86,26,83,26],[86,29,83,29],[86,38,83,6,"SyntaxReferenceError"],[86,58,83,29],[86,59,83,38,"type"],[86,63,83,29],[86,65,83,44,"referenceName"],[86,78,83,29],[86,80,83,59],[87,0,84,4],[87,8,84,10,"error"],[87,13,84,15],[87,16,84,18],[87,77,85,8],[87,99,84,18],[87,101,86,8,"type"],[87,105,86,12],[87,109,86,16,"referenceName"],[87,122,86,29],[87,125,86,32],[87,132,86,39,"referenceName"],[87,145,86,32],[87,148,86,55],[87,151,86,29],[87,154,86,61],[87,156,86,12],[87,157,84,18],[87,158,84,4],[89,0,89,4,"error"],[89,4,89,4,"error"],[89,9,89,9],[89,10,89,10,"reference"],[89,19,89,4],[89,22,89,22,"referenceName"],[89,35,89,4],[90,0,91,4],[90,11,91,11,"error"],[90,16,91,4],[91,0,92,1],[91,3,83,0],[93,0,94,0],[93,6,94,6,"SyntaxMatchError"],[93,22,94,22],[93,25,94,25],[93,34,94,6,"SyntaxMatchError"],[93,50,94,25],[93,51,94,34,"message"],[93,58,94,25],[93,60,94,43,"syntax"],[93,66,94,25],[93,68,94,51,"node"],[93,72,94,25],[93,74,94,57,"matchResult"],[93,85,94,25],[93,87,94,70],[94,0,95,4],[94,8,95,10,"error"],[94,13,95,15],[94,16,95,18],[94,77,95,36],[94,95,95,18],[94,97,95,56,"message"],[94,104,95,18],[94,105,95,4],[96,0,96,4],[96,26,102,8,"locateMismatch"],[96,40,102,22],[96,41,102,23,"matchResult"],[96,52,102,22],[96,54,102,36,"node"],[96,58,102,22],[96,59,96,4],[97,0,96,4],[97,8,97,8,"css"],[97,11,96,4],[97,30,97,8,"css"],[97,33,96,4],[98,0,96,4],[98,8,98,8,"mismatchOffset"],[98,22,96,4],[98,41,98,8,"mismatchOffset"],[98,55,96,4],[99,0,96,4],[99,8,99,8,"mismatchLength"],[99,22,96,4],[99,41,99,8,"mismatchLength"],[99,55,96,4],[100,0,96,4],[100,8,100,8,"start"],[100,13,96,4],[100,32,100,8,"start"],[100,37,96,4],[101,0,96,4],[101,8,101,8,"end"],[101,11,96,4],[101,30,101,8,"end"],[101,33,96,4],[103,0,104,4,"error"],[103,4,104,4,"error"],[103,9,104,9],[103,10,104,10,"rawMessage"],[103,20,104,4],[103,23,104,23,"message"],[103,30,104,4],[104,0,105,4,"error"],[104,4,105,4,"error"],[104,9,105,9],[104,10,105,10,"syntax"],[104,16,105,4],[104,19,105,19,"syntax"],[104,25,105,25],[104,28,105,28],[104,92,105,37,"syntax"],[104,98,105,28],[104,99,105,25],[104,102,105,47],[104,113,105,4],[105,0,106,4,"error"],[105,4,106,4,"error"],[105,9,106,9],[105,10,106,10,"css"],[105,13,106,4],[105,16,106,16,"css"],[105,19,106,4],[106,0,107,4,"error"],[106,4,107,4,"error"],[106,9,107,9],[106,10,107,10,"mismatchOffset"],[106,24,107,4],[106,27,107,27,"mismatchOffset"],[106,41,107,4],[107,0,108,4,"error"],[107,4,108,4,"error"],[107,9,108,9],[107,10,108,10,"mismatchLength"],[107,24,108,4],[107,27,108,27,"mismatchLength"],[107,41,108,4],[108,0,109,4,"error"],[108,4,109,4,"error"],[108,9,109,9],[108,10,109,10,"message"],[108,17,109,4],[108,20,109,20,"message"],[108,27,109,27],[108,30,109,30],[108,34,109,20],[108,37,110,8],[108,49,109,20],[108,52,110,23,"error"],[108,57,110,28],[108,58,110,29,"syntax"],[108,64,109,20],[108,67,110,38],[108,71,109,20],[108,74,111,8],[108,86,109,20],[108,90,111,24,"css"],[108,93,111,27],[108,97,111,31],[108,113,109,20],[108,117,111,51],[108,121,109,20],[108,124,112,8],[108,136,109,20],[108,139,112,23],[108,143,112,27,"Array"],[108,148,112,23],[108,149,112,33,"error"],[108,154,112,38],[108,155,112,39,"mismatchOffset"],[108,169,112,33],[108,172,112,56],[108,173,112,23],[108,175,112,59,"join"],[108,179,112,23],[108,180,112,64],[108,183,112,23],[108,184,109,20],[108,187,112,71],[108,190,109,4],[109,0,114,4,"Object"],[109,4,114,4,"Object"],[109,10,114,10],[109,11,114,11,"assign"],[109,17,114,4],[109,18,114,18,"error"],[109,23,114,4],[109,25,114,25,"start"],[109,30,114,4],[110,0,115,4,"error"],[110,4,115,4,"error"],[110,9,115,9],[110,10,115,10,"loc"],[110,13,115,4],[110,16,115,16],[111,0,116,8,"source"],[111,6,116,8,"source"],[111,12,116,14],[111,14,116,17,"node"],[111,18,116,21],[111,22,116,25,"node"],[111,26,116,29],[111,27,116,30,"loc"],[111,30,116,17],[111,34,116,37,"node"],[111,38,116,41],[111,39,116,42,"loc"],[111,42,116,37],[111,43,116,46,"source"],[111,49,116,16],[111,53,116,57],[111,64,115,16],[112,0,117,8,"start"],[112,6,117,8,"start"],[112,11,117,13],[112,13,117,8,"start"],[112,18,115,16],[113,0,118,8,"end"],[113,6,118,8,"end"],[113,9,118,11],[113,11,118,8,"end"],[114,0,115,16],[114,5,115,4],[115,0,121,4],[115,11,121,11,"error"],[115,16,121,4],[116,0,122,1],[116,3,94,0],[118,0,124,0,"module"],[118,2,124,0,"module"],[118,8,124,6],[118,9,124,7,"exports"],[118,16,124,0],[118,19,124,17],[119,0,125,4,"SyntaxReferenceError"],[119,4,125,4,"SyntaxReferenceError"],[119,24,125,24],[119,26,125,4,"SyntaxReferenceError"],[119,46,124,17],[120,0,126,4,"SyntaxMatchError"],[120,4,126,4,"SyntaxMatchError"],[120,20,126,20],[120,22,126,4,"SyntaxMatchError"],[121,0,124,17],[121,3,124,0]],"functionMap":{"names":["<global>","locateMismatch","fromLoc","buildLoc","SyntaxReferenceError","SyntaxMatchError"],"mappings":"AAA;ACI;CDgD;AEE;CFQ;AGE;CHgB;6BIE;CJS;yBKE;CL4B"}},"type":"js/module"}]}