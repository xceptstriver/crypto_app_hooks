{"dependencies":[{"name":"./util","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":9},"end":{"line":21,"column":49}},{"start":{"line":73,"column":21},"end":{"line":73,"column":61}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  function generatedPositionAfter(mappingA, mappingB) {\n    var lineA = mappingA.generatedLine;\n    var lineB = mappingB.generatedLine;\n    var columnA = mappingA.generatedColumn;\n    var columnB = mappingB.generatedColumn;\n    return lineB > lineA || lineB == lineA && columnB >= columnA || _$$_REQUIRE(_dependencyMap[0], \"./util\").compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n  }\n\n  function MappingList() {\n    this._array = [];\n    this._sorted = true;\n    this._last = {\n      generatedLine: -1,\n      generatedColumn: 0\n    };\n  }\n\n  MappingList.prototype.unsortedForEach = function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n  MappingList.prototype.add = function MappingList_add(aMapping) {\n    if (generatedPositionAfter(this._last, aMapping)) {\n      this._last = aMapping;\n\n      this._array.push(aMapping);\n    } else {\n      this._sorted = false;\n\n      this._array.push(aMapping);\n    }\n  };\n\n  MappingList.prototype.toArray = function MappingList_toArray() {\n    if (!this._sorted) {\n      this._array.sort(_$$_REQUIRE(_dependencyMap[0], \"./util\").compareByGeneratedPositionsInflated);\n\n      this._sorted = true;\n    }\n\n    return this._array;\n  };\n\n  exports.MappingList = MappingList;\n});","lineCount":46,"map":[[2,0,14,0],[2,11,14,9,"generatedPositionAfter"],[2,33,14,0],[2,34,14,32,"mappingA"],[2,42,14,0],[2,44,14,42,"mappingB"],[2,52,14,0],[2,54,14,52],[3,0,16,2],[3,8,16,6,"lineA"],[3,13,16,11],[3,16,16,14,"mappingA"],[3,24,16,22],[3,25,16,23,"generatedLine"],[3,38,16,2],[4,0,17,2],[4,8,17,6,"lineB"],[4,13,17,11],[4,16,17,14,"mappingB"],[4,24,17,22],[4,25,17,23,"generatedLine"],[4,38,17,2],[5,0,18,2],[5,8,18,6,"columnA"],[5,15,18,13],[5,18,18,16,"mappingA"],[5,26,18,24],[5,27,18,25,"generatedColumn"],[5,42,18,2],[6,0,19,2],[6,8,19,6,"columnB"],[6,15,19,13],[6,18,19,16,"mappingB"],[6,26,19,24],[6,27,19,25,"generatedColumn"],[6,42,19,2],[7,0,20,2],[7,11,20,9,"lineB"],[7,16,20,14],[7,19,20,17,"lineA"],[7,24,20,9],[7,28,20,26,"lineB"],[7,33,20,31],[7,37,20,35,"lineA"],[7,42,20,26],[7,46,20,44,"columnB"],[7,53,20,51],[7,57,20,55,"columnA"],[7,64,20,9],[7,68,21,9],[7,109,21,14,"compareByGeneratedPositionsInflated"],[7,144,21,9],[7,145,21,50,"mappingA"],[7,153,21,9],[7,155,21,60,"mappingB"],[7,163,21,9],[7,168,21,73],[7,169,20,2],[8,0,22,1],[10,0,29,0],[10,11,29,9,"MappingList"],[10,22,29,0],[10,25,29,23],[11,0,30,2],[11,9,30,7,"_array"],[11,15,30,2],[11,18,30,16],[11,20,30,2],[12,0,31,2],[12,9,31,7,"_sorted"],[12,16,31,2],[12,19,31,17],[12,23,31,2],[13,0,33,2],[13,9,33,7,"_last"],[13,14,33,2],[13,17,33,15],[14,0,33,16,"generatedLine"],[14,6,33,16,"generatedLine"],[14,19,33,29],[14,21,33,31],[14,22,33,32],[14,23,33,15],[15,0,33,35,"generatedColumn"],[15,6,33,35,"generatedColumn"],[15,21,33,50],[15,23,33,52],[16,0,33,15],[16,5,33,2],[17,0,34,1],[19,0,42,0,"MappingList"],[19,2,42,0,"MappingList"],[19,13,42,11],[19,14,42,12,"prototype"],[19,23,42,0],[19,24,42,22,"unsortedForEach"],[19,39,42,0],[19,42,43,2],[19,51,43,11,"MappingList_forEach"],[19,70,43,2],[19,71,43,31,"aCallback"],[19,80,43,2],[19,82,43,42,"aThisArg"],[19,90,43,2],[19,92,43,52],[20,0,44,4],[20,9,44,9,"_array"],[20,15,44,4],[20,16,44,16,"forEach"],[20,23,44,4],[20,24,44,24,"aCallback"],[20,33,44,4],[20,35,44,35,"aThisArg"],[20,43,44,4],[21,0,45,3],[21,3,42,0],[23,0,52,0,"MappingList"],[23,2,52,0,"MappingList"],[23,13,52,11],[23,14,52,12,"prototype"],[23,23,52,0],[23,24,52,22,"add"],[23,27,52,0],[23,30,52,28],[23,39,52,37,"MappingList_add"],[23,54,52,28],[23,55,52,53,"aMapping"],[23,63,52,28],[23,65,52,63],[24,0,53,2],[24,8,53,6,"generatedPositionAfter"],[24,30,53,28],[24,31,53,29],[24,36,53,34,"_last"],[24,41,53,28],[24,43,53,41,"aMapping"],[24,51,53,28],[24,52,53,2],[24,54,53,52],[25,0,54,4],[25,11,54,9,"_last"],[25,16,54,4],[25,19,54,17,"aMapping"],[25,27,54,4],[27,0,55,4],[27,11,55,9,"_array"],[27,17,55,4],[27,18,55,16,"push"],[27,22,55,4],[27,23,55,21,"aMapping"],[27,31,55,4],[28,0,56,3],[28,5,53,2],[28,11,56,9],[29,0,57,4],[29,11,57,9,"_sorted"],[29,18,57,4],[29,21,57,19],[29,26,57,4],[31,0,58,4],[31,11,58,9,"_array"],[31,17,58,4],[31,18,58,16,"push"],[31,22,58,4],[31,23,58,21,"aMapping"],[31,31,58,4],[32,0,59,3],[33,0,60,1],[33,3,52,0],[35,0,71,0,"MappingList"],[35,2,71,0,"MappingList"],[35,13,71,11],[35,14,71,12,"prototype"],[35,23,71,0],[35,24,71,22,"toArray"],[35,31,71,0],[35,34,71,32],[35,43,71,41,"MappingList_toArray"],[35,62,71,32],[35,65,71,63],[36,0,72,2],[36,8,72,6],[36,9,72,7],[36,14,72,12,"_sorted"],[36,21,72,2],[36,23,72,21],[37,0,73,4],[37,11,73,9,"_array"],[37,17,73,4],[37,18,73,16,"sort"],[37,22,73,4],[37,23,73,21],[37,64,73,26,"compareByGeneratedPositionsInflated"],[37,99,73,4],[39,0,74,4],[39,11,74,9,"_sorted"],[39,18,74,4],[39,21,74,19],[39,25,74,4],[40,0,75,3],[42,0,76,2],[42,11,76,9],[42,16,76,14,"_array"],[42,22,76,2],[43,0,77,1],[43,3,71,0],[45,0,79,0,"exports"],[45,2,79,0,"exports"],[45,9,79,7],[45,10,79,8,"MappingList"],[45,21,79,0],[45,24,79,22,"MappingList"],[45,35,79,0]],"functionMap":{"names":["<global>","generatedPositionAfter","MappingList","MappingList_forEach","MappingList_add","MappingList_toArray"],"mappings":"AAA;ACa;CDQ;AEO;CFK;EGS;GHE;4BIO;CJQ;gCKW;CLM"}},"type":"js/module"}]}