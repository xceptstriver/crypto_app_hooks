{"dependencies":[{"name":"../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":12},"end":{"line":5,"column":22}},{"start":{"line":6,"column":17},"end":{"line":6,"column":32}},{"start":{"line":7,"column":14},"end":{"line":7,"column":26}},{"start":{"line":8,"column":12},"end":{"line":8,"column":22}},{"start":{"line":9,"column":13},"end":{"line":9,"column":24}},{"start":{"line":10,"column":16},"end":{"line":10,"column":30}},{"start":{"line":45,"column":13},"end":{"line":45,"column":57}},{"start":{"line":112,"column":13},"end":{"line":112,"column":39}},{"start":{"line":155,"column":31},"end":{"line":155,"column":57}},{"start":{"line":197,"column":17},"end":{"line":197,"column":51}},{"start":{"line":207,"column":13},"end":{"line":207,"column":39}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var DELIM = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Delim;\n\n  var WHITESPACE = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.WhiteSpace;\n\n  var COMMENT = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Comment;\n\n  var IDENT = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Ident;\n\n  var NUMBER = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Number;\n\n  var DIMENSION = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Dimension;\n\n  var PLUSSIGN = 0x002B;\n  var HYPHENMINUS = 0x002D;\n  var N = 0x006E;\n  var DISALLOW_SIGN = true;\n  var ALLOW_SIGN = false;\n\n  function isDelim(token, code) {\n    return token !== null && token.type === DELIM && token.value.charCodeAt(0) === code;\n  }\n\n  function skipSC(token, offset, getNextToken) {\n    while (token !== null && (token.type === WHITESPACE || token.type === COMMENT)) {\n      token = getNextToken(++offset);\n    }\n\n    return offset;\n  }\n\n  function checkInteger(token, valueOffset, disallowSign, offset) {\n    if (!token) {\n      return 0;\n    }\n\n    var code = token.value.charCodeAt(valueOffset);\n\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\n      if (disallowSign) {\n        return 0;\n      }\n\n      valueOffset++;\n    }\n\n    for (; valueOffset < token.value.length; valueOffset++) {\n      if (!_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").isDigit(token.value.charCodeAt(valueOffset))) {\n        return 0;\n      }\n    }\n\n    return offset + 1;\n  }\n\n  function consumeB(token, offset_, getNextToken) {\n    var sign = false;\n    var offset = skipSC(token, offset_, getNextToken);\n    token = getNextToken(offset);\n\n    if (token === null) {\n      return offset_;\n    }\n\n    if (token.type !== NUMBER) {\n      if (isDelim(token, PLUSSIGN) || isDelim(token, HYPHENMINUS)) {\n        sign = true;\n        offset = skipSC(getNextToken(++offset), offset, getNextToken);\n        token = getNextToken(offset);\n\n        if (token === null && token.type !== NUMBER) {\n          return 0;\n        }\n      } else {\n        return offset_;\n      }\n    }\n\n    if (!sign) {\n      var code = token.value.charCodeAt(0);\n\n      if (code !== PLUSSIGN && code !== HYPHENMINUS) {\n        return 0;\n      }\n    }\n\n    return checkInteger(token, sign ? 0 : 1, sign, offset);\n  }\n\n  module.exports = function anPlusB(token, getNextToken) {\n    var offset = 0;\n\n    if (!token) {\n      return 0;\n    }\n\n    if (token.type === NUMBER) {\n      return checkInteger(token, 0, ALLOW_SIGN, offset);\n    } else if (token.type === IDENT && token.value.charCodeAt(0) === HYPHENMINUS) {\n      if (!_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").cmpChar(token.value, 1, N)) {\n        return 0;\n      }\n\n      switch (token.value.length) {\n        case 2:\n          return consumeB(getNextToken(++offset), offset, getNextToken);\n\n        case 3:\n          if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n            return 0;\n          }\n\n          offset = skipSC(getNextToken(++offset), offset, getNextToken);\n          token = getNextToken(offset);\n          return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n        default:\n          if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n            return 0;\n          }\n\n          return checkInteger(token, 3, DISALLOW_SIGN, offset);\n      }\n    } else if (token.type === IDENT || isDelim(token, PLUSSIGN) && getNextToken(offset + 1).type === IDENT) {\n      if (token.type !== IDENT) {\n        token = getNextToken(++offset);\n      }\n\n      if (token === null || !_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").cmpChar(token.value, 0, N)) {\n        return 0;\n      }\n\n      switch (token.value.length) {\n        case 1:\n          return consumeB(getNextToken(++offset), offset, getNextToken);\n\n        case 2:\n          if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n            return 0;\n          }\n\n          offset = skipSC(getNextToken(++offset), offset, getNextToken);\n          token = getNextToken(offset);\n          return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n        default:\n          if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n            return 0;\n          }\n\n          return checkInteger(token, 2, DISALLOW_SIGN, offset);\n      }\n    } else if (token.type === DIMENSION) {\n      var code = token.value.charCodeAt(0);\n      var sign = code === PLUSSIGN || code === HYPHENMINUS ? 1 : 0;\n\n      for (var i = sign; i < token.value.length; i++) {\n        if (!_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").isDigit(token.value.charCodeAt(i))) {\n          break;\n        }\n      }\n\n      if (i === sign) {\n        return 0;\n      }\n\n      if (!_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").cmpChar(token.value, i, N)) {\n        return 0;\n      }\n\n      if (i + 1 === token.value.length) {\n        return consumeB(getNextToken(++offset), offset, getNextToken);\n      } else {\n        if (token.value.charCodeAt(i + 1) !== HYPHENMINUS) {\n          return 0;\n        }\n\n        if (i + 2 === token.value.length) {\n          offset = skipSC(getNextToken(++offset), offset, getNextToken);\n          token = getNextToken(offset);\n          return checkInteger(token, 0, DISALLOW_SIGN, offset);\n        } else {\n          return checkInteger(token, i + 2, DISALLOW_SIGN, offset);\n        }\n      }\n    }\n\n    return 0;\n  };\n});","lineCount":190,"map":[[2,0,5,0],[2,6,5,4,"DELIM"],[2,11,5,9],[2,14,5,12],[2,66,5,17,"Delim"],[2,71,5,0],[4,0,6,0],[4,6,6,4,"WHITESPACE"],[4,16,6,14],[4,19,6,17],[4,71,6,22,"WhiteSpace"],[4,81,6,0],[6,0,7,0],[6,6,7,4,"COMMENT"],[6,13,7,11],[6,16,7,14],[6,68,7,19,"Comment"],[6,75,7,0],[8,0,8,0],[8,6,8,4,"IDENT"],[8,11,8,9],[8,14,8,12],[8,66,8,17,"Ident"],[8,71,8,0],[10,0,9,0],[10,6,9,4,"NUMBER"],[10,12,9,10],[10,15,9,13],[10,67,9,18,"Number"],[10,73,9,0],[12,0,10,0],[12,6,10,4,"DIMENSION"],[12,15,10,13],[12,18,10,16],[12,70,10,21,"Dimension"],[12,79,10,0],[14,0,11,0],[14,6,11,4,"PLUSSIGN"],[14,14,11,12],[14,17,11,15],[14,23,11,0],[15,0,12,0],[15,6,12,4,"HYPHENMINUS"],[15,17,12,15],[15,20,12,18],[15,26,12,0],[16,0,13,0],[16,6,13,4,"N"],[16,7,13,5],[16,10,13,8],[16,16,13,0],[17,0,14,0],[17,6,14,4,"DISALLOW_SIGN"],[17,19,14,17],[17,22,14,20],[17,26,14,0],[18,0,15,0],[18,6,15,4,"ALLOW_SIGN"],[18,16,15,14],[18,19,15,17],[18,24,15,0],[20,0,17,0],[20,11,17,9,"isDelim"],[20,18,17,0],[20,19,17,17,"token"],[20,24,17,0],[20,26,17,24,"code"],[20,30,17,0],[20,32,17,30],[21,0,18,4],[21,11,18,11,"token"],[21,16,18,16],[21,21,18,21],[21,25,18,11],[21,29,18,29,"token"],[21,34,18,34],[21,35,18,35,"type"],[21,39,18,29],[21,44,18,44,"DELIM"],[21,49,18,11],[21,53,18,53,"token"],[21,58,18,58],[21,59,18,59,"value"],[21,64,18,53],[21,65,18,65,"charCodeAt"],[21,75,18,53],[21,76,18,76],[21,77,18,53],[21,83,18,83,"code"],[21,87,18,4],[22,0,19,1],[24,0,21,0],[24,11,21,9,"skipSC"],[24,17,21,0],[24,18,21,16,"token"],[24,23,21,0],[24,25,21,23,"offset"],[24,31,21,0],[24,33,21,31,"getNextToken"],[24,45,21,0],[24,47,21,45],[25,0,22,4],[25,11,22,11,"token"],[25,16,22,16],[25,21,22,21],[25,25,22,11],[25,30,22,30,"token"],[25,35,22,35],[25,36,22,36,"type"],[25,40,22,30],[25,45,22,45,"WHITESPACE"],[25,55,22,30],[25,59,22,59,"token"],[25,64,22,64],[25,65,22,65,"type"],[25,69,22,59],[25,74,22,74,"COMMENT"],[25,81,22,11],[25,82,22,4],[25,84,22,84],[26,0,23,8,"token"],[26,6,23,8,"token"],[26,11,23,13],[26,14,23,16,"getNextToken"],[26,26,23,28],[26,27,23,29],[26,29,23,31,"offset"],[26,35,23,28],[26,36,23,8],[27,0,24,5],[29,0,26,4],[29,11,26,11,"offset"],[29,17,26,4],[30,0,27,1],[32,0,29,0],[32,11,29,9,"checkInteger"],[32,23,29,0],[32,24,29,22,"token"],[32,29,29,0],[32,31,29,29,"valueOffset"],[32,42,29,0],[32,44,29,42,"disallowSign"],[32,56,29,0],[32,58,29,56,"offset"],[32,64,29,0],[32,66,29,64],[33,0,30,4],[33,8,30,8],[33,9,30,9,"token"],[33,14,30,4],[33,16,30,16],[34,0,31,8],[34,13,31,15],[34,14,31,8],[35,0,32,5],[37,0,34,4],[37,8,34,8,"code"],[37,12,34,12],[37,15,34,15,"token"],[37,20,34,20],[37,21,34,21,"value"],[37,26,34,15],[37,27,34,27,"charCodeAt"],[37,37,34,15],[37,38,34,38,"valueOffset"],[37,49,34,15],[37,50,34,4],[39,0,36,4],[39,8,36,8,"code"],[39,12,36,12],[39,17,36,17,"PLUSSIGN"],[39,25,36,8],[39,29,36,29,"code"],[39,33,36,33],[39,38,36,38,"HYPHENMINUS"],[39,49,36,4],[39,51,36,51],[40,0,37,8],[40,10,37,12,"disallowSign"],[40,22,37,8],[40,24,37,26],[41,0,39,12],[41,15,39,19],[41,16,39,12],[42,0,40,9],[44,0,41,8,"valueOffset"],[44,6,41,8,"valueOffset"],[44,17,41,19],[45,0,42,5],[47,0,44,4],[47,11,44,11,"valueOffset"],[47,22,44,22],[47,25,44,25,"token"],[47,30,44,30],[47,31,44,31,"value"],[47,36,44,25],[47,37,44,37,"length"],[47,43,44,4],[47,45,44,45,"valueOffset"],[47,56,44,56],[47,58,44,4],[47,60,44,60],[48,0,45,8],[48,10,45,12],[48,11,45,13],[48,66,45,21,"token"],[48,71,45,26],[48,72,45,27,"value"],[48,77,45,21],[48,78,45,33,"charCodeAt"],[48,88,45,21],[48,89,45,44,"valueOffset"],[48,100,45,21],[48,101,45,13],[48,102,45,8],[48,104,45,59],[49,0,47,12],[49,15,47,19],[49,16,47,12],[50,0,48,9],[51,0,49,5],[53,0,51,4],[53,11,51,11,"offset"],[53,17,51,17],[53,20,51,20],[53,21,51,4],[54,0,52,1],[56,0,56,0],[56,11,56,9,"consumeB"],[56,19,56,0],[56,20,56,18,"token"],[56,25,56,0],[56,27,56,25,"offset_"],[56,34,56,0],[56,36,56,34,"getNextToken"],[56,48,56,0],[56,50,56,48],[57,0,57,4],[57,8,57,8,"sign"],[57,12,57,12],[57,15,57,15],[57,20,57,4],[58,0,58,4],[58,8,58,8,"offset"],[58,14,58,14],[58,17,58,17,"skipSC"],[58,23,58,23],[58,24,58,24,"token"],[58,29,58,23],[58,31,58,31,"offset_"],[58,38,58,23],[58,40,58,40,"getNextToken"],[58,52,58,23],[58,53,58,4],[59,0,60,4,"token"],[59,4,60,4,"token"],[59,9,60,9],[59,12,60,12,"getNextToken"],[59,24,60,24],[59,25,60,25,"offset"],[59,31,60,24],[59,32,60,4],[61,0,62,4],[61,8,62,8,"token"],[61,13,62,13],[61,18,62,18],[61,22,62,4],[61,24,62,24],[62,0,63,8],[62,13,63,15,"offset_"],[62,20,63,8],[63,0,64,5],[65,0,66,4],[65,8,66,8,"token"],[65,13,66,13],[65,14,66,14,"type"],[65,18,66,8],[65,23,66,23,"NUMBER"],[65,29,66,4],[65,31,66,31],[66,0,67,8],[66,10,67,12,"isDelim"],[66,17,67,19],[66,18,67,20,"token"],[66,23,67,19],[66,25,67,27,"PLUSSIGN"],[66,33,67,19],[66,34,67,12],[66,38,67,40,"isDelim"],[66,45,67,47],[66,46,67,48,"token"],[66,51,67,47],[66,53,67,55,"HYPHENMINUS"],[66,64,67,47],[66,65,67,8],[66,67,67,69],[67,0,68,12,"sign"],[67,8,68,12,"sign"],[67,12,68,16],[67,15,68,19],[67,19,68,12],[68,0,69,12,"offset"],[68,8,69,12,"offset"],[68,14,69,18],[68,17,69,21,"skipSC"],[68,23,69,27],[68,24,69,28,"getNextToken"],[68,36,69,40],[68,37,69,41],[68,39,69,43,"offset"],[68,45,69,40],[68,46,69,27],[68,48,69,52,"offset"],[68,54,69,27],[68,56,69,60,"getNextToken"],[68,68,69,27],[68,69,69,12],[69,0,70,12,"token"],[69,8,70,12,"token"],[69,13,70,17],[69,16,70,20,"getNextToken"],[69,28,70,32],[69,29,70,33,"offset"],[69,35,70,32],[69,36,70,12],[71,0,72,12],[71,12,72,16,"token"],[71,17,72,21],[71,22,72,26],[71,26,72,16],[71,30,72,34,"token"],[71,35,72,39],[71,36,72,40,"type"],[71,40,72,34],[71,45,72,49,"NUMBER"],[71,51,72,12],[71,53,72,57],[72,0,73,16],[72,17,73,23],[72,18,73,16],[73,0,74,13],[74,0,75,9],[74,7,67,8],[74,13,75,15],[75,0,76,12],[75,15,76,19,"offset_"],[75,22,76,12],[76,0,77,9],[77,0,78,5],[79,0,80,4],[79,8,80,8],[79,9,80,9,"sign"],[79,13,80,4],[79,15,80,15],[80,0,81,8],[80,10,81,12,"code"],[80,14,81,16],[80,17,81,19,"token"],[80,22,81,24],[80,23,81,25,"value"],[80,28,81,19],[80,29,81,31,"charCodeAt"],[80,39,81,19],[80,40,81,42],[80,41,81,19],[80,42,81,8],[82,0,82,8],[82,10,82,12,"code"],[82,14,82,16],[82,19,82,21,"PLUSSIGN"],[82,27,82,12],[82,31,82,33,"code"],[82,35,82,37],[82,40,82,42,"HYPHENMINUS"],[82,51,82,8],[82,53,82,55],[83,0,84,12],[83,15,84,19],[83,16,84,12],[84,0,85,9],[85,0,86,5],[87,0,88,4],[87,11,88,11,"checkInteger"],[87,23,88,23],[87,24,88,24,"token"],[87,29,88,23],[87,31,88,31,"sign"],[87,35,88,35],[87,38,88,38],[87,39,88,35],[87,42,88,42],[87,43,88,23],[87,45,88,45,"sign"],[87,49,88,23],[87,51,88,51,"offset"],[87,57,88,23],[87,58,88,4],[88,0,89,1],[90,0,92,0,"module"],[90,2,92,0,"module"],[90,8,92,6],[90,9,92,7,"exports"],[90,16,92,0],[90,19,92,17],[90,28,92,26,"anPlusB"],[90,35,92,17],[90,36,92,34,"token"],[90,41,92,17],[90,43,92,41,"getNextToken"],[90,55,92,17],[90,57,92,55],[91,0,94,4],[91,8,94,8,"offset"],[91,14,94,14],[91,17,94,17],[91,18,94,4],[93,0,96,4],[93,8,96,8],[93,9,96,9,"token"],[93,14,96,4],[93,16,96,16],[94,0,97,8],[94,13,97,15],[94,14,97,8],[95,0,98,5],[97,0,101,4],[97,8,101,8,"token"],[97,13,101,13],[97,14,101,14,"type"],[97,18,101,8],[97,23,101,23,"NUMBER"],[97,29,101,4],[97,31,101,31],[98,0,102,8],[98,13,102,15,"checkInteger"],[98,25,102,27],[98,26,102,28,"token"],[98,31,102,27],[98,33,102,35],[98,34,102,27],[98,36,102,38,"ALLOW_SIGN"],[98,46,102,27],[98,48,102,50,"offset"],[98,54,102,27],[98,55,102,8],[99,0,103,5],[99,5,101,4],[99,11,110,9],[99,15,110,13,"token"],[99,20,110,18],[99,21,110,19,"type"],[99,25,110,13],[99,30,110,28,"IDENT"],[99,35,110,13],[99,39,110,37,"token"],[99,44,110,42],[99,45,110,43,"value"],[99,50,110,37],[99,51,110,49,"charCodeAt"],[99,61,110,37],[99,62,110,60],[99,63,110,37],[99,69,110,67,"HYPHENMINUS"],[99,80,110,9],[99,82,110,80],[100,0,112,8],[100,10,112,12],[100,11,112,13],[100,66,112,21,"token"],[100,71,112,26],[100,72,112,27,"value"],[100,77,112,13],[100,79,112,34],[100,80,112,13],[100,82,112,37,"N"],[100,83,112,13],[100,84,112,8],[100,86,112,41],[101,0,113,12],[101,15,113,19],[101,16,113,12],[102,0,114,9],[104,0,116,8],[104,14,116,16,"token"],[104,19,116,21],[104,20,116,22,"value"],[104,25,116,16],[104,26,116,28,"length"],[104,32,116,8],[105,0,120,12],[105,13,120,17],[105,14,120,12],[106,0,121,16],[106,17,121,23,"consumeB"],[106,25,121,31],[106,26,121,32,"getNextToken"],[106,38,121,44],[106,39,121,45],[106,41,121,47,"offset"],[106,47,121,44],[106,48,121,31],[106,50,121,56,"offset"],[106,56,121,31],[106,58,121,64,"getNextToken"],[106,70,121,31],[106,71,121,16],[108,0,124,12],[108,13,124,17],[108,14,124,12],[109,0,125,16],[109,14,125,20,"token"],[109,19,125,25],[109,20,125,26,"value"],[109,25,125,20],[109,26,125,32,"charCodeAt"],[109,36,125,20],[109,37,125,43],[109,38,125,20],[109,44,125,50,"HYPHENMINUS"],[109,55,125,16],[109,57,125,63],[110,0,126,20],[110,19,126,27],[110,20,126,20],[111,0,127,17],[113,0,129,16,"offset"],[113,10,129,16,"offset"],[113,16,129,22],[113,19,129,25,"skipSC"],[113,25,129,31],[113,26,129,32,"getNextToken"],[113,38,129,44],[113,39,129,45],[113,41,129,47,"offset"],[113,47,129,44],[113,48,129,31],[113,50,129,56,"offset"],[113,56,129,31],[113,58,129,64,"getNextToken"],[113,70,129,31],[113,71,129,16],[114,0,130,16,"token"],[114,10,130,16,"token"],[114,15,130,21],[114,18,130,24,"getNextToken"],[114,30,130,36],[114,31,130,37,"offset"],[114,37,130,36],[114,38,130,16],[115,0,132,16],[115,17,132,23,"checkInteger"],[115,29,132,35],[115,30,132,36,"token"],[115,35,132,35],[115,37,132,43],[115,38,132,35],[115,40,132,46,"DISALLOW_SIGN"],[115,53,132,35],[115,55,132,61,"offset"],[115,61,132,35],[115,62,132,16],[117,0,135,12],[118,0,136,16],[118,14,136,20,"token"],[118,19,136,25],[118,20,136,26,"value"],[118,25,136,20],[118,26,136,32,"charCodeAt"],[118,36,136,20],[118,37,136,43],[118,38,136,20],[118,44,136,50,"HYPHENMINUS"],[118,55,136,16],[118,57,136,63],[119,0,137,20],[119,19,137,27],[119,20,137,20],[120,0,138,17],[122,0,140,16],[122,17,140,23,"checkInteger"],[122,29,140,35],[122,30,140,36,"token"],[122,35,140,35],[122,37,140,43],[122,38,140,35],[122,40,140,46,"DISALLOW_SIGN"],[122,53,140,35],[122,55,140,61,"offset"],[122,61,140,35],[122,62,140,16],[123,0,116,8],[124,0,142,5],[124,5,110,9],[124,11,149,9],[124,15,149,13,"token"],[124,20,149,18],[124,21,149,19,"type"],[124,25,149,13],[124,30,149,28,"IDENT"],[124,35,149,13],[124,39,149,38,"isDelim"],[124,46,149,45],[124,47,149,46,"token"],[124,52,149,45],[124,54,149,53,"PLUSSIGN"],[124,62,149,45],[124,63,149,38],[124,67,149,66,"getNextToken"],[124,79,149,78],[124,80,149,79,"offset"],[124,86,149,85],[124,89,149,88],[124,90,149,78],[124,91,149,66],[124,92,149,91,"type"],[124,96,149,66],[124,101,149,100,"IDENT"],[124,106,149,9],[124,108,149,108],[125,0,151,8],[125,10,151,12,"token"],[125,15,151,17],[125,16,151,18,"type"],[125,20,151,12],[125,25,151,27,"IDENT"],[125,30,151,8],[125,32,151,34],[126,0,152,12,"token"],[126,8,152,12,"token"],[126,13,152,17],[126,16,152,20,"getNextToken"],[126,28,152,32],[126,29,152,33],[126,31,152,35,"offset"],[126,37,152,32],[126,38,152,12],[127,0,153,9],[129,0,155,8],[129,10,155,12,"token"],[129,15,155,17],[129,20,155,22],[129,24,155,12],[129,28,155,30],[129,29,155,31],[129,84,155,39,"token"],[129,89,155,44],[129,90,155,45,"value"],[129,95,155,31],[129,97,155,52],[129,98,155,31],[129,100,155,55,"N"],[129,101,155,31],[129,102,155,8],[129,104,155,59],[130,0,156,12],[130,15,156,19],[130,16,156,12],[131,0,157,9],[133,0,159,8],[133,14,159,16,"token"],[133,19,159,21],[133,20,159,22,"value"],[133,25,159,16],[133,26,159,28,"length"],[133,32,159,8],[134,0,163,12],[134,13,163,17],[134,14,163,12],[135,0,164,16],[135,17,164,23,"consumeB"],[135,25,164,31],[135,26,164,32,"getNextToken"],[135,38,164,44],[135,39,164,45],[135,41,164,47,"offset"],[135,47,164,44],[135,48,164,31],[135,50,164,56,"offset"],[135,56,164,31],[135,58,164,64,"getNextToken"],[135,70,164,31],[135,71,164,16],[137,0,167,12],[137,13,167,17],[137,14,167,12],[138,0,168,16],[138,14,168,20,"token"],[138,19,168,25],[138,20,168,26,"value"],[138,25,168,20],[138,26,168,32,"charCodeAt"],[138,36,168,20],[138,37,168,43],[138,38,168,20],[138,44,168,50,"HYPHENMINUS"],[138,55,168,16],[138,57,168,63],[139,0,169,20],[139,19,169,27],[139,20,169,20],[140,0,170,17],[142,0,172,16,"offset"],[142,10,172,16,"offset"],[142,16,172,22],[142,19,172,25,"skipSC"],[142,25,172,31],[142,26,172,32,"getNextToken"],[142,38,172,44],[142,39,172,45],[142,41,172,47,"offset"],[142,47,172,44],[142,48,172,31],[142,50,172,56,"offset"],[142,56,172,31],[142,58,172,64,"getNextToken"],[142,70,172,31],[142,71,172,16],[143,0,173,16,"token"],[143,10,173,16,"token"],[143,15,173,21],[143,18,173,24,"getNextToken"],[143,30,173,36],[143,31,173,37,"offset"],[143,37,173,36],[143,38,173,16],[144,0,175,16],[144,17,175,23,"checkInteger"],[144,29,175,35],[144,30,175,36,"token"],[144,35,175,35],[144,37,175,43],[144,38,175,35],[144,40,175,46,"DISALLOW_SIGN"],[144,53,175,35],[144,55,175,61,"offset"],[144,61,175,35],[144,62,175,16],[146,0,178,12],[147,0,179,16],[147,14,179,20,"token"],[147,19,179,25],[147,20,179,26,"value"],[147,25,179,20],[147,26,179,32,"charCodeAt"],[147,36,179,20],[147,37,179,43],[147,38,179,20],[147,44,179,50,"HYPHENMINUS"],[147,55,179,16],[147,57,179,63],[148,0,180,20],[148,19,180,27],[148,20,180,20],[149,0,181,17],[151,0,183,16],[151,17,183,23,"checkInteger"],[151,29,183,35],[151,30,183,36,"token"],[151,35,183,35],[151,37,183,43],[151,38,183,35],[151,40,183,46,"DISALLOW_SIGN"],[151,53,183,35],[151,55,183,61,"offset"],[151,61,183,35],[151,62,183,16],[152,0,159,8],[153,0,185,5],[153,5,149,9],[153,11,192,9],[153,15,192,13,"token"],[153,20,192,18],[153,21,192,19,"type"],[153,25,192,13],[153,30,192,28,"DIMENSION"],[153,39,192,9],[153,41,192,39],[154,0,193,8],[154,10,193,12,"code"],[154,14,193,16],[154,17,193,19,"token"],[154,22,193,24],[154,23,193,25,"value"],[154,28,193,19],[154,29,193,31,"charCodeAt"],[154,39,193,19],[154,40,193,42],[154,41,193,19],[154,42,193,8],[155,0,194,8],[155,10,194,12,"sign"],[155,14,194,16],[155,17,194,19,"code"],[155,21,194,23],[155,26,194,28,"PLUSSIGN"],[155,34,194,19],[155,38,194,40,"code"],[155,42,194,44],[155,47,194,49,"HYPHENMINUS"],[155,58,194,19],[155,61,194,63],[155,62,194,19],[155,65,194,67],[155,66,194,8],[157,0,196,8],[157,11,196,13],[157,15,196,17,"i"],[157,16,196,18],[157,19,196,21,"sign"],[157,23,196,8],[157,25,196,27,"i"],[157,26,196,28],[157,29,196,31,"token"],[157,34,196,36],[157,35,196,37,"value"],[157,40,196,31],[157,41,196,43,"length"],[157,47,196,8],[157,49,196,51,"i"],[157,50,196,52],[157,52,196,8],[157,54,196,56],[158,0,197,12],[158,12,197,16],[158,13,197,17],[158,68,197,25,"token"],[158,73,197,30],[158,74,197,31,"value"],[158,79,197,25],[158,80,197,37,"charCodeAt"],[158,90,197,25],[158,91,197,48,"i"],[158,92,197,25],[158,93,197,17],[158,94,197,12],[158,96,197,53],[159,0,198,16],[160,0,199,13],[161,0,200,9],[163,0,202,8],[163,10,202,12,"i"],[163,11,202,13],[163,16,202,18,"sign"],[163,20,202,8],[163,22,202,24],[164,0,204,12],[164,15,204,19],[164,16,204,12],[165,0,205,9],[167,0,207,8],[167,10,207,12],[167,11,207,13],[167,66,207,21,"token"],[167,71,207,26],[167,72,207,27,"value"],[167,77,207,13],[167,79,207,34,"i"],[167,80,207,13],[167,82,207,37,"N"],[167,83,207,13],[167,84,207,8],[167,86,207,41],[168,0,208,12],[168,15,208,19],[168,16,208,12],[169,0,209,9],[171,0,214,8],[171,10,214,12,"i"],[171,11,214,13],[171,14,214,16],[171,15,214,12],[171,20,214,22,"token"],[171,25,214,27],[171,26,214,28,"value"],[171,31,214,22],[171,32,214,34,"length"],[171,38,214,8],[171,40,214,42],[172,0,215,12],[172,15,215,19,"consumeB"],[172,23,215,27],[172,24,215,28,"getNextToken"],[172,36,215,40],[172,37,215,41],[172,39,215,43,"offset"],[172,45,215,40],[172,46,215,27],[172,48,215,52,"offset"],[172,54,215,27],[172,56,215,60,"getNextToken"],[172,68,215,27],[172,69,215,12],[173,0,216,9],[173,7,214,8],[173,13,216,15],[174,0,217,12],[174,12,217,16,"token"],[174,17,217,21],[174,18,217,22,"value"],[174,23,217,16],[174,24,217,28,"charCodeAt"],[174,34,217,16],[174,35,217,39,"i"],[174,36,217,40],[174,39,217,43],[174,40,217,16],[174,46,217,50,"HYPHENMINUS"],[174,57,217,12],[174,59,217,63],[175,0,218,16],[175,17,218,23],[175,18,218,16],[176,0,219,13],[178,0,222,12],[178,12,222,16,"i"],[178,13,222,17],[178,16,222,20],[178,17,222,16],[178,22,222,26,"token"],[178,27,222,31],[178,28,222,32,"value"],[178,33,222,26],[178,34,222,38,"length"],[178,40,222,12],[178,42,222,46],[179,0,223,16,"offset"],[179,10,223,16,"offset"],[179,16,223,22],[179,19,223,25,"skipSC"],[179,25,223,31],[179,26,223,32,"getNextToken"],[179,38,223,44],[179,39,223,45],[179,41,223,47,"offset"],[179,47,223,44],[179,48,223,31],[179,50,223,56,"offset"],[179,56,223,31],[179,58,223,64,"getNextToken"],[179,70,223,31],[179,71,223,16],[180,0,224,16,"token"],[180,10,224,16,"token"],[180,15,224,21],[180,18,224,24,"getNextToken"],[180,30,224,36],[180,31,224,37,"offset"],[180,37,224,36],[180,38,224,16],[181,0,226,16],[181,17,226,23,"checkInteger"],[181,29,226,35],[181,30,226,36,"token"],[181,35,226,35],[181,37,226,43],[181,38,226,35],[181,40,226,46,"DISALLOW_SIGN"],[181,53,226,35],[181,55,226,61,"offset"],[181,61,226,35],[181,62,226,16],[182,0,227,13],[182,9,222,12],[182,15,229,17],[183,0,230,16],[183,17,230,23,"checkInteger"],[183,29,230,35],[183,30,230,36,"token"],[183,35,230,35],[183,37,230,43,"i"],[183,38,230,44],[183,41,230,47],[183,42,230,35],[183,44,230,50,"DISALLOW_SIGN"],[183,57,230,35],[183,59,230,65,"offset"],[183,65,230,35],[183,66,230,16],[184,0,231,13],[185,0,232,9],[186,0,233,5],[188,0,235,4],[188,11,235,11],[188,12,235,4],[189,0,236,1],[189,3,92,0]],"functionMap":{"names":["<global>","isDelim","skipSC","checkInteger","consumeB","anPlusB"],"mappings":"AAA;ACgB;CDE;AEE;CFM;AGE;CHuB;AII;CJiC;iBKG;CLgJ"}},"type":"js/module"}]}