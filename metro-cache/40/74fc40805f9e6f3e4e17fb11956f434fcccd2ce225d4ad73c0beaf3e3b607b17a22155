{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":16},"end":{"line":4,"column":30}},{"start":{"line":5,"column":16},"end":{"line":5,"column":30}},{"start":{"line":6,"column":23},"end":{"line":6,"column":44}},{"start":{"line":7,"column":24},"end":{"line":7,"column":46}}]}},{"name":"./Raw","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":32},"end":{"line":10,"column":67}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var ATKEYWORD = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.AtKeyword;\n\n  var SEMICOLON = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Semicolon;\n\n  var LEFTCURLYBRACKET = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.LeftCurlyBracket;\n\n  var RIGHTCURLYBRACKET = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.RightCurlyBracket;\n\n  function consumeRaw(startToken) {\n    return this.Raw(startToken, _$$_REQUIRE(_dependencyMap[1], \"./Raw\").mode.leftCurlyBracketOrSemicolon, true);\n  }\n\n  function isDeclarationBlockAtrule() {\n    for (var offset = 1, type; type = this.scanner.lookupType(offset); offset++) {\n      if (type === RIGHTCURLYBRACKET) {\n        return true;\n      }\n\n      if (type === LEFTCURLYBRACKET || type === ATKEYWORD) {\n        return false;\n      }\n    }\n\n    return false;\n  }\n\n  module.exports = {\n    name: 'Atrule',\n    structure: {\n      name: String,\n      prelude: ['AtrulePrelude', 'Raw', null],\n      block: ['Block', null]\n    },\n    parse: function parse() {\n      var start = this.scanner.tokenStart;\n      var name;\n      var nameLowerCase;\n      var prelude = null;\n      var block = null;\n      this.eat(ATKEYWORD);\n      name = this.scanner.substrToCursor(start + 1);\n      nameLowerCase = name.toLowerCase();\n      this.scanner.skipSC();\n\n      if (this.scanner.eof === false && this.scanner.tokenType !== LEFTCURLYBRACKET && this.scanner.tokenType !== SEMICOLON) {\n        if (this.parseAtrulePrelude) {\n          prelude = this.parseWithFallback(this.AtrulePrelude.bind(this, name), consumeRaw);\n\n          if (prelude.type === 'AtrulePrelude' && prelude.children.head === null) {\n            prelude = null;\n          }\n        } else {\n          prelude = consumeRaw.call(this, this.scanner.tokenIndex);\n        }\n\n        this.scanner.skipSC();\n      }\n\n      switch (this.scanner.tokenType) {\n        case SEMICOLON:\n          this.scanner.next();\n          break;\n\n        case LEFTCURLYBRACKET:\n          if (this.atrule.hasOwnProperty(nameLowerCase) && typeof this.atrule[nameLowerCase].block === 'function') {\n            block = this.atrule[nameLowerCase].block.call(this);\n          } else {\n            block = this.Block(isDeclarationBlockAtrule.call(this));\n          }\n\n          break;\n      }\n\n      return {\n        type: 'Atrule',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        name: name,\n        prelude: prelude,\n        block: block\n      };\n    },\n    generate: function generate(node) {\n      this.chunk('@');\n      this.chunk(node.name);\n\n      if (node.prelude !== null) {\n        this.chunk(' ');\n        this.node(node.prelude);\n      }\n\n      if (node.block) {\n        this.node(node.block);\n      } else {\n        this.chunk(';');\n      }\n    },\n    walkContext: 'atrule'\n  };\n});","lineCount":100,"map":[[2,0,4,0],[2,6,4,4,"ATKEYWORD"],[2,15,4,13],[2,18,4,16],[2,73,4,21,"AtKeyword"],[2,82,4,0],[4,0,5,0],[4,6,5,4,"SEMICOLON"],[4,15,5,13],[4,18,5,16],[4,73,5,21,"Semicolon"],[4,82,5,0],[6,0,6,0],[6,6,6,4,"LEFTCURLYBRACKET"],[6,22,6,20],[6,25,6,23],[6,80,6,28,"LeftCurlyBracket"],[6,96,6,0],[8,0,7,0],[8,6,7,4,"RIGHTCURLYBRACKET"],[8,23,7,21],[8,26,7,24],[8,81,7,29,"RightCurlyBracket"],[8,98,7,0],[10,0,9,0],[10,11,9,9,"consumeRaw"],[10,21,9,0],[10,22,9,20,"startToken"],[10,32,9,0],[10,34,9,32],[11,0,10,4],[11,11,10,11],[11,16,10,16,"Raw"],[11,19,10,11],[11,20,10,20,"startToken"],[11,30,10,11],[11,32,10,32],[11,77,10,40,"leftCurlyBracketOrSemicolon"],[11,104,10,11],[11,106,10,69],[11,110,10,11],[11,111,10,4],[12,0,11,1],[14,0,13,0],[14,11,13,9,"isDeclarationBlockAtrule"],[14,35,13,0],[14,38,13,36],[15,0,14,4],[15,9,14,9],[15,13,14,13,"offset"],[15,19,14,19],[15,22,14,22],[15,23,14,9],[15,25,14,25,"type"],[15,29,14,4],[15,31,14,31,"type"],[15,35,14,35],[15,38,14,38],[15,43,14,43,"scanner"],[15,50,14,38],[15,51,14,51,"lookupType"],[15,61,14,38],[15,62,14,62,"offset"],[15,68,14,38],[15,69,14,4],[15,71,14,71,"offset"],[15,77,14,77],[15,79,14,4],[15,81,14,81],[16,0,15,8],[16,10,15,12,"type"],[16,14,15,16],[16,19,15,21,"RIGHTCURLYBRACKET"],[16,36,15,8],[16,38,15,40],[17,0,16,12],[17,15,16,19],[17,19,16,12],[18,0,17,9],[20,0,19,8],[20,10,19,12,"type"],[20,14,19,16],[20,19,19,21,"LEFTCURLYBRACKET"],[20,35,19,12],[20,39,20,12,"type"],[20,43,20,16],[20,48,20,21,"ATKEYWORD"],[20,57,19,8],[20,59,20,32],[21,0,21,12],[21,15,21,19],[21,20,21,12],[22,0,22,9],[23,0,23,5],[25,0,25,4],[25,11,25,11],[25,16,25,4],[26,0,26,1],[28,0,28,0,"module"],[28,2,28,0,"module"],[28,8,28,6],[28,9,28,7,"exports"],[28,16,28,0],[28,19,28,17],[29,0,29,4,"name"],[29,4,29,4,"name"],[29,8,29,8],[29,10,29,10],[29,18,28,17],[30,0,30,4,"structure"],[30,4,30,4,"structure"],[30,13,30,13],[30,15,30,15],[31,0,31,8,"name"],[31,6,31,8,"name"],[31,10,31,12],[31,12,31,14,"String"],[31,18,30,15],[32,0,32,8,"prelude"],[32,6,32,8,"prelude"],[32,13,32,15],[32,15,32,17],[32,16,32,18],[32,31,32,17],[32,33,32,35],[32,38,32,17],[32,40,32,42],[32,44,32,17],[32,45,30,15],[33,0,33,8,"block"],[33,6,33,8,"block"],[33,11,33,13],[33,13,33,15],[33,14,33,16],[33,21,33,15],[33,23,33,25],[33,27,33,15],[34,0,30,15],[34,5,28,17],[35,0,35,4,"parse"],[35,4,35,4,"parse"],[35,9,35,9],[35,11,35,11],[35,28,35,22],[36,0,36,8],[36,10,36,12,"start"],[36,15,36,17],[36,18,36,20],[36,23,36,25,"scanner"],[36,30,36,20],[36,31,36,33,"tokenStart"],[36,41,36,8],[37,0,37,8],[37,10,37,12,"name"],[37,14,37,8],[38,0,38,8],[38,10,38,12,"nameLowerCase"],[38,23,38,8],[39,0,39,8],[39,10,39,12,"prelude"],[39,17,39,19],[39,20,39,22],[39,24,39,8],[40,0,40,8],[40,10,40,12,"block"],[40,15,40,17],[40,18,40,20],[40,22,40,8],[41,0,42,8],[41,11,42,13,"eat"],[41,14,42,8],[41,15,42,17,"ATKEYWORD"],[41,24,42,8],[42,0,44,8,"name"],[42,6,44,8,"name"],[42,10,44,12],[42,13,44,15],[42,18,44,20,"scanner"],[42,25,44,15],[42,26,44,28,"substrToCursor"],[42,40,44,15],[42,41,44,43,"start"],[42,46,44,48],[42,49,44,51],[42,50,44,15],[42,51,44,8],[43,0,45,8,"nameLowerCase"],[43,6,45,8,"nameLowerCase"],[43,19,45,21],[43,22,45,24,"name"],[43,26,45,28],[43,27,45,29,"toLowerCase"],[43,38,45,24],[43,40,45,8],[44,0,46,8],[44,11,46,13,"scanner"],[44,18,46,8],[44,19,46,21,"skipSC"],[44,25,46,8],[46,0,49,8],[46,10,49,12],[46,15,49,17,"scanner"],[46,22,49,12],[46,23,49,25,"eof"],[46,26,49,12],[46,31,49,33],[46,36,49,12],[46,40,50,12],[46,45,50,17,"scanner"],[46,52,50,12],[46,53,50,25,"tokenType"],[46,62,50,12],[46,67,50,39,"LEFTCURLYBRACKET"],[46,83,49,12],[46,87,51,12],[46,92,51,17,"scanner"],[46,99,51,12],[46,100,51,25,"tokenType"],[46,109,51,12],[46,114,51,39,"SEMICOLON"],[46,123,49,8],[46,125,51,50],[47,0,52,12],[47,12,52,16],[47,17,52,21,"parseAtrulePrelude"],[47,35,52,12],[47,37,52,41],[48,0,53,16,"prelude"],[48,10,53,16,"prelude"],[48,17,53,23],[48,20,53,26],[48,25,53,31,"parseWithFallback"],[48,42,53,26],[48,43,53,49],[48,48,53,54,"AtrulePrelude"],[48,61,53,49],[48,62,53,68,"bind"],[48,66,53,49],[48,67,53,73],[48,71,53,49],[48,73,53,79,"name"],[48,77,53,49],[48,78,53,26],[48,80,53,86,"consumeRaw"],[48,90,53,26],[48,91,53,16],[50,0,56,16],[50,14,56,20,"prelude"],[50,21,56,27],[50,22,56,28,"type"],[50,26,56,20],[50,31,56,37],[50,46,56,20],[50,50,56,56,"prelude"],[50,57,56,63],[50,58,56,64,"children"],[50,66,56,56],[50,67,56,73,"head"],[50,71,56,56],[50,76,56,82],[50,80,56,16],[50,82,56,88],[51,0,57,20,"prelude"],[51,12,57,20,"prelude"],[51,19,57,27],[51,22,57,30],[51,26,57,20],[52,0,58,17],[53,0,59,13],[53,9,52,12],[53,15,59,19],[54,0,60,16,"prelude"],[54,10,60,16,"prelude"],[54,17,60,23],[54,20,60,26,"consumeRaw"],[54,30,60,36],[54,31,60,37,"call"],[54,35,60,26],[54,36,60,42],[54,40,60,26],[54,42,60,48],[54,47,60,53,"scanner"],[54,54,60,48],[54,55,60,61,"tokenIndex"],[54,65,60,26],[54,66,60,16],[55,0,61,13],[57,0,63,12],[57,13,63,17,"scanner"],[57,20,63,12],[57,21,63,25,"skipSC"],[57,27,63,12],[58,0,64,9],[60,0,66,8],[60,14,66,16],[60,19,66,21,"scanner"],[60,26,66,16],[60,27,66,29,"tokenType"],[60,36,66,8],[61,0,67,12],[61,13,67,17,"SEMICOLON"],[61,22,67,12],[62,0,68,16],[62,15,68,21,"scanner"],[62,22,68,16],[62,23,68,29,"next"],[62,27,68,16],[63,0,69,16],[65,0,71,12],[65,13,71,17,"LEFTCURLYBRACKET"],[65,29,71,12],[66,0,72,16],[66,14,72,20],[66,19,72,25,"atrule"],[66,25,72,20],[66,26,72,32,"hasOwnProperty"],[66,40,72,20],[66,41,72,47,"nameLowerCase"],[66,54,72,20],[66,59,73,20],[66,66,73,27],[66,71,73,32,"atrule"],[66,77,73,27],[66,78,73,39,"nameLowerCase"],[66,91,73,27],[66,93,73,54,"block"],[66,98,73,20],[66,103,73,64],[66,113,72,16],[66,115,73,76],[67,0,74,20,"block"],[67,12,74,20,"block"],[67,17,74,25],[67,20,74,28],[67,25,74,33,"atrule"],[67,31,74,28],[67,32,74,40,"nameLowerCase"],[67,45,74,28],[67,47,74,55,"block"],[67,52,74,28],[67,53,74,61,"call"],[67,57,74,28],[67,58,74,66],[67,62,74,28],[67,63,74,20],[68,0,75,17],[68,11,72,16],[68,17,75,23],[69,0,77,20,"block"],[69,12,77,20,"block"],[69,17,77,25],[69,20,77,28],[69,25,77,33,"Block"],[69,30,77,28],[69,31,77,39,"isDeclarationBlockAtrule"],[69,55,77,63],[69,56,77,64,"call"],[69,60,77,39],[69,61,77,69],[69,65,77,39],[69,66,77,28],[69,67,77,20],[70,0,78,17],[72,0,80,16],[73,0,66,8],[75,0,83,8],[75,13,83,15],[76,0,84,12,"type"],[76,8,84,12,"type"],[76,12,84,16],[76,14,84,18],[76,22,83,15],[77,0,85,12,"loc"],[77,8,85,12,"loc"],[77,11,85,15],[77,13,85,17],[77,18,85,22,"getLocation"],[77,29,85,17],[77,30,85,34,"start"],[77,35,85,17],[77,37,85,41],[77,42,85,46,"scanner"],[77,49,85,41],[77,50,85,54,"tokenStart"],[77,60,85,17],[77,61,83,15],[78,0,86,12,"name"],[78,8,86,12,"name"],[78,12,86,16],[78,14,86,18,"name"],[78,18,83,15],[79,0,87,12,"prelude"],[79,8,87,12,"prelude"],[79,15,87,19],[79,17,87,21,"prelude"],[79,24,83,15],[80,0,88,12,"block"],[80,8,88,12,"block"],[80,13,88,17],[80,15,88,19,"block"],[81,0,83,15],[81,7,83,8],[82,0,90,5],[82,5,28,17],[83,0,91,4,"generate"],[83,4,91,4,"generate"],[83,12,91,12],[83,14,91,14],[83,32,91,23,"node"],[83,36,91,14],[83,38,91,29],[84,0,92,8],[84,11,92,13,"chunk"],[84,16,92,8],[84,17,92,19],[84,20,92,8],[85,0,93,8],[85,11,93,13,"chunk"],[85,16,93,8],[85,17,93,19,"node"],[85,21,93,23],[85,22,93,24,"name"],[85,26,93,8],[87,0,95,8],[87,10,95,12,"node"],[87,14,95,16],[87,15,95,17,"prelude"],[87,22,95,12],[87,27,95,29],[87,31,95,8],[87,33,95,35],[88,0,96,12],[88,13,96,17,"chunk"],[88,18,96,12],[88,19,96,23],[88,22,96,12],[89,0,97,12],[89,13,97,17,"node"],[89,17,97,12],[89,18,97,22,"node"],[89,22,97,26],[89,23,97,27,"prelude"],[89,30,97,12],[90,0,98,9],[92,0,100,8],[92,10,100,12,"node"],[92,14,100,16],[92,15,100,17,"block"],[92,20,100,8],[92,22,100,24],[93,0,101,12],[93,13,101,17,"node"],[93,17,101,12],[93,18,101,22,"node"],[93,22,101,26],[93,23,101,27,"block"],[93,28,101,12],[94,0,102,9],[94,7,100,8],[94,13,102,15],[95,0,103,12],[95,13,103,17,"chunk"],[95,18,103,12],[95,19,103,23],[95,22,103,12],[96,0,104,9],[97,0,105,5],[97,5,28,17],[98,0,106,4,"walkContext"],[98,4,106,4,"walkContext"],[98,15,106,15],[98,17,106,17],[99,0,28,17],[99,3,28,0]],"functionMap":{"names":["<global>","consumeRaw","isDeclarationBlockAtrule","module.exports.parse","module.exports.generate"],"mappings":"AAA;ACQ;CDE;AEE;CFa;WGS;KHuD;cIC;KJc"}},"type":"js/module"}]}