{"dependencies":[{"name":"mdn-data/css/syntaxes.json","data":{"asyncType":null,"locs":[{"start":{"line":100,"column":11},"end":{"line":100,"column":55}}]}},{"name":"./patch.json","data":{"asyncType":null,"locs":[{"start":{"line":100,"column":40},"end":{"line":100,"column":54}},{"start":{"line":101,"column":57},"end":{"line":101,"column":70}},{"start":{"line":102,"column":47},"end":{"line":102,"column":63}}]}},{"name":"mdn-data/css/at-rules.json","data":{"asyncType":null,"locs":[{"start":{"line":101,"column":26},"end":{"line":101,"column":55}}]}},{"name":"mdn-data/css/properties.json","data":{"asyncType":null,"locs":[{"start":{"line":102,"column":16},"end":{"line":102,"column":64}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var extendSyntax = /^\\s*\\|\\s*/;\n\n  function preprocessAtrules(dict) {\n    var result = Object.create(null);\n\n    for (var atruleName in dict) {\n      var atrule = dict[atruleName];\n      var descriptors = null;\n\n      if (atrule.descriptors) {\n        descriptors = Object.create(null);\n\n        for (var descriptor in atrule.descriptors) {\n          descriptors[descriptor] = atrule.descriptors[descriptor].syntax;\n        }\n      }\n\n      result[atruleName.substr(1)] = {\n        prelude: atrule.syntax.trim().match(/^@\\S+\\s+([^;\\{]*)/)[1].trim() || null,\n        descriptors: descriptors\n      };\n    }\n\n    return result;\n  }\n\n  function patchDictionary(dict, patchDict) {\n    var result = {};\n\n    for (var key in dict) {\n      result[key] = dict[key].syntax || dict[key];\n    }\n\n    for (var _key in patchDict) {\n      if (_key in dict) {\n        if (patchDict[_key].syntax) {\n          result[_key] = extendSyntax.test(patchDict[_key].syntax) ? result[_key] + ' ' + patchDict[_key].syntax.trim() : patchDict[_key].syntax;\n        } else {\n          delete result[_key];\n        }\n      } else {\n        if (patchDict[_key].syntax) {\n          result[_key] = patchDict[_key].syntax.replace(extendSyntax, '');\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function unpackSyntaxes(dict) {\n    var result = {};\n\n    for (var key in dict) {\n      result[key] = dict[key].syntax;\n    }\n\n    return result;\n  }\n\n  function patchAtrules(dict, patchDict) {\n    var result = {};\n\n    for (var key in dict) {\n      var patchDescriptors = patchDict[key] && patchDict[key].descriptors || null;\n      result[key] = {\n        prelude: key in patchDict && 'prelude' in patchDict[key] ? patchDict[key].prelude : dict[key].prelude || null,\n        descriptors: dict[key].descriptors ? patchDictionary(dict[key].descriptors, patchDescriptors || {}) : patchDescriptors && unpackSyntaxes(patchDescriptors)\n      };\n    }\n\n    for (var _key2 in patchDict) {\n      if (!hasOwnProperty.call(dict, _key2)) {\n        result[_key2] = {\n          prelude: patchDict[_key2].prelude || null,\n          descriptors: patchDict[_key2].descriptors && unpackSyntaxes(patchDict[_key2].descriptors)\n        };\n      }\n    }\n\n    return result;\n  }\n\n  module.exports = {\n    types: patchDictionary(_$$_REQUIRE(_dependencyMap[0], \"mdn-data/css/syntaxes.json\"), _$$_REQUIRE(_dependencyMap[1], \"./patch.json\").syntaxes),\n    atrules: patchAtrules(preprocessAtrules(_$$_REQUIRE(_dependencyMap[2], \"mdn-data/css/at-rules.json\")), _$$_REQUIRE(_dependencyMap[1], \"./patch.json\").atrules),\n    properties: patchDictionary(_$$_REQUIRE(_dependencyMap[3], \"mdn-data/css/properties.json\"), _$$_REQUIRE(_dependencyMap[1], \"./patch.json\").properties)\n  };\n});","lineCount":90,"map":[[2,0,5,0],[2,6,5,6,"extendSyntax"],[2,18,5,18],[2,21,5,21],[2,32,5,0],[4,0,7,0],[4,11,7,9,"preprocessAtrules"],[4,28,7,0],[4,29,7,27,"dict"],[4,33,7,0],[4,35,7,33],[5,0,8,4],[5,8,8,10,"result"],[5,14,8,16],[5,17,8,19,"Object"],[5,23,8,25],[5,24,8,26,"create"],[5,30,8,19],[5,31,8,33],[5,35,8,19],[5,36,8,4],[7,0,10,4],[7,9,10,9],[7,13,10,15,"atruleName"],[7,23,10,4],[7,27,10,29,"dict"],[7,31,10,4],[7,33,10,35],[8,0,11,8],[8,10,11,14,"atrule"],[8,16,11,20],[8,19,11,23,"dict"],[8,23,11,27],[8,24,11,28,"atruleName"],[8,34,11,27],[8,35,11,8],[9,0,12,8],[9,10,12,12,"descriptors"],[9,21,12,23],[9,24,12,26],[9,28,12,8],[11,0,14,8],[11,10,14,12,"atrule"],[11,16,14,18],[11,17,14,19,"descriptors"],[11,28,14,8],[11,30,14,32],[12,0,15,12,"descriptors"],[12,8,15,12,"descriptors"],[12,19,15,23],[12,22,15,26,"Object"],[12,28,15,32],[12,29,15,33,"create"],[12,35,15,26],[12,36,15,40],[12,40,15,26],[12,41,15,12],[14,0,17,12],[14,13,17,17],[14,17,17,23,"descriptor"],[14,27,17,12],[14,31,17,37,"atrule"],[14,37,17,43],[14,38,17,44,"descriptors"],[14,49,17,12],[14,51,17,57],[15,0,18,16,"descriptors"],[15,10,18,16,"descriptors"],[15,21,18,27],[15,22,18,28,"descriptor"],[15,32,18,27],[15,33,18,16],[15,36,18,42,"atrule"],[15,42,18,48],[15,43,18,49,"descriptors"],[15,54,18,42],[15,55,18,61,"descriptor"],[15,65,18,42],[15,67,18,73,"syntax"],[15,73,18,16],[16,0,19,13],[17,0,20,9],[19,0,22,8,"result"],[19,6,22,8,"result"],[19,12,22,14],[19,13,22,15,"atruleName"],[19,23,22,25],[19,24,22,26,"substr"],[19,30,22,15],[19,31,22,33],[19,32,22,15],[19,33,22,14],[19,34,22,8],[19,37,22,39],[20,0,23,12,"prelude"],[20,8,23,12,"prelude"],[20,15,23,19],[20,17,23,21,"atrule"],[20,23,23,27],[20,24,23,28,"syntax"],[20,30,23,21],[20,31,23,35,"trim"],[20,35,23,21],[20,38,23,42,"match"],[20,43,23,21],[20,44,23,48],[20,63,23,21],[20,65,23,69],[20,66,23,21],[20,68,23,72,"trim"],[20,72,23,21],[20,78,23,82],[20,82,22,39],[21,0,24,12,"descriptors"],[21,8,24,12,"descriptors"],[21,19,24,23],[21,21,24,12,"descriptors"],[22,0,22,39],[22,7,22,8],[23,0,26,5],[25,0,28,4],[25,11,28,11,"result"],[25,17,28,4],[26,0,29,1],[28,0,31,0],[28,11,31,9,"patchDictionary"],[28,26,31,0],[28,27,31,25,"dict"],[28,31,31,0],[28,33,31,31,"patchDict"],[28,42,31,0],[28,44,31,42],[29,0,32,4],[29,8,32,10,"result"],[29,14,32,16],[29,17,32,19],[29,19,32,4],[31,0,35,4],[31,9,35,9],[31,13,35,15,"key"],[31,16,35,4],[31,20,35,22,"dict"],[31,24,35,4],[31,26,35,28],[32,0,36,8,"result"],[32,6,36,8,"result"],[32,12,36,14],[32,13,36,15,"key"],[32,16,36,14],[32,17,36,8],[32,20,36,22,"dict"],[32,24,36,26],[32,25,36,27,"key"],[32,28,36,26],[32,29,36,22],[32,30,36,32,"syntax"],[32,36,36,22],[32,40,36,42,"dict"],[32,44,36,46],[32,45,36,47,"key"],[32,48,36,46],[32,49,36,8],[33,0,37,5],[35,0,40,4],[35,9,40,9],[35,13,40,15,"key"],[35,17,40,4],[35,21,40,22,"patchDict"],[35,30,40,4],[35,32,40,33],[36,0,41,8],[36,10,41,12,"key"],[36,14,41,15],[36,18,41,19,"dict"],[36,22,41,8],[36,24,41,25],[37,0,42,12],[37,12,42,16,"patchDict"],[37,21,42,25],[37,22,42,26,"key"],[37,26,42,25],[37,27,42,16],[37,28,42,31,"syntax"],[37,34,42,12],[37,36,42,39],[38,0,43,16,"result"],[38,10,43,16,"result"],[38,16,43,22],[38,17,43,23,"key"],[38,21,43,22],[38,22,43,16],[38,25,43,30,"extendSyntax"],[38,37,43,42],[38,38,43,43,"test"],[38,42,43,30],[38,43,43,48,"patchDict"],[38,52,43,57],[38,53,43,58,"key"],[38,57,43,57],[38,58,43,48],[38,59,43,63,"syntax"],[38,65,43,30],[38,69,44,22,"result"],[38,75,44,28],[38,76,44,29,"key"],[38,80,44,28],[38,81,44,22],[38,84,44,36],[38,87,44,22],[38,90,44,42,"patchDict"],[38,99,44,51],[38,100,44,52,"key"],[38,104,44,51],[38,105,44,42],[38,106,44,57,"syntax"],[38,112,44,42],[38,113,44,64,"trim"],[38,117,44,42],[38,119,43,30],[38,122,45,22,"patchDict"],[38,131,45,31],[38,132,45,32,"key"],[38,136,45,31],[38,137,45,22],[38,138,45,37,"syntax"],[38,144,43,16],[39,0,46,13],[39,9,42,12],[39,15,46,19],[40,0,47,16],[40,17,47,23,"result"],[40,23,47,29],[40,24,47,30,"key"],[40,28,47,29],[40,29,47,16],[41,0,48,13],[42,0,49,9],[42,7,41,8],[42,13,49,15],[43,0,50,12],[43,12,50,16,"patchDict"],[43,21,50,25],[43,22,50,26,"key"],[43,26,50,25],[43,27,50,16],[43,28,50,31,"syntax"],[43,34,50,12],[43,36,50,39],[44,0,51,16,"result"],[44,10,51,16,"result"],[44,16,51,22],[44,17,51,23,"key"],[44,21,51,22],[44,22,51,16],[44,25,51,30,"patchDict"],[44,34,51,39],[44,35,51,40,"key"],[44,39,51,39],[44,40,51,30],[44,41,51,45,"syntax"],[44,47,51,30],[44,48,51,52,"replace"],[44,55,51,30],[44,56,51,60,"extendSyntax"],[44,68,51,30],[44,70,51,74],[44,72,51,30],[44,73,51,16],[45,0,52,13],[46,0,53,9],[47,0,54,5],[49,0,56,4],[49,11,56,11,"result"],[49,17,56,4],[50,0,57,1],[52,0,59,0],[52,11,59,9,"unpackSyntaxes"],[52,25,59,0],[52,26,59,24,"dict"],[52,30,59,0],[52,32,59,30],[53,0,60,4],[53,8,60,10,"result"],[53,14,60,16],[53,17,60,19],[53,19,60,4],[55,0,62,4],[55,9,62,9],[55,13,62,15,"key"],[55,16,62,4],[55,20,62,22,"dict"],[55,24,62,4],[55,26,62,28],[56,0,63,8,"result"],[56,6,63,8,"result"],[56,12,63,14],[56,13,63,15,"key"],[56,16,63,14],[56,17,63,8],[56,20,63,22,"dict"],[56,24,63,26],[56,25,63,27,"key"],[56,28,63,26],[56,29,63,22],[56,30,63,32,"syntax"],[56,36,63,8],[57,0,64,5],[59,0,66,4],[59,11,66,11,"result"],[59,17,66,4],[60,0,67,1],[62,0,69,0],[62,11,69,9,"patchAtrules"],[62,23,69,0],[62,24,69,22,"dict"],[62,28,69,0],[62,30,69,28,"patchDict"],[62,39,69,0],[62,41,69,39],[63,0,70,4],[63,8,70,10,"result"],[63,14,70,16],[63,17,70,19],[63,19,70,4],[65,0,73,4],[65,9,73,9],[65,13,73,15,"key"],[65,16,73,4],[65,20,73,22,"dict"],[65,24,73,4],[65,26,73,28],[66,0,74,8],[66,10,74,14,"patchDescriptors"],[66,26,74,30],[66,29,74,34,"patchDict"],[66,38,74,43],[66,39,74,44,"key"],[66,42,74,43],[66,43,74,34],[66,47,74,52,"patchDict"],[66,56,74,61],[66,57,74,62,"key"],[66,60,74,61],[66,61,74,52],[66,62,74,67,"descriptors"],[66,73,74,33],[66,77,74,83],[66,81,74,8],[67,0,76,8,"result"],[67,6,76,8,"result"],[67,12,76,14],[67,13,76,15,"key"],[67,16,76,14],[67,17,76,8],[67,20,76,22],[68,0,77,12,"prelude"],[68,8,77,12,"prelude"],[68,15,77,19],[68,17,77,21,"key"],[68,20,77,24],[68,24,77,28,"patchDict"],[68,33,77,21],[68,37,77,41],[68,50,77,54,"patchDict"],[68,59,77,63],[68,60,77,64,"key"],[68,63,77,63],[68,64,77,21],[68,67,78,18,"patchDict"],[68,76,78,27],[68,77,78,28,"key"],[68,80,78,27],[68,81,78,18],[68,82,78,33,"prelude"],[68,89,77,21],[68,92,79,18,"dict"],[68,96,79,22],[68,97,79,23,"key"],[68,100,79,22],[68,101,79,18],[68,102,79,28,"prelude"],[68,109,79,18],[68,113,79,39],[68,117,76,22],[69,0,80,12,"descriptors"],[69,8,80,12,"descriptors"],[69,19,80,23],[69,21,80,25,"dict"],[69,25,80,29],[69,26,80,30,"key"],[69,29,80,29],[69,30,80,25],[69,31,80,35,"descriptors"],[69,42,80,25],[69,45,81,18,"patchDictionary"],[69,60,81,33],[69,61,81,34,"dict"],[69,65,81,38],[69,66,81,39,"key"],[69,69,81,38],[69,70,81,34],[69,71,81,44,"descriptors"],[69,82,81,33],[69,84,81,57,"patchDescriptors"],[69,100,81,73],[69,104,81,77],[69,106,81,33],[69,107,80,25],[69,110,82,18,"patchDescriptors"],[69,126,82,34],[69,130,82,38,"unpackSyntaxes"],[69,144,82,52],[69,145,82,53,"patchDescriptors"],[69,161,82,52],[70,0,76,22],[70,7,76,8],[71,0,84,5],[73,0,87,4],[73,9,87,9],[73,13,87,15,"key"],[73,18,87,4],[73,22,87,22,"patchDict"],[73,31,87,4],[73,33,87,33],[74,0,88,8],[74,10,88,12],[74,11,88,13,"hasOwnProperty"],[74,25,88,27],[74,26,88,28,"call"],[74,30,88,13],[74,31,88,33,"dict"],[74,35,88,13],[74,37,88,39,"key"],[74,42,88,13],[74,43,88,8],[74,45,88,45],[75,0,89,12,"result"],[75,8,89,12,"result"],[75,14,89,18],[75,15,89,19,"key"],[75,20,89,18],[75,21,89,12],[75,24,89,26],[76,0,90,16,"prelude"],[76,10,90,16,"prelude"],[76,17,90,23],[76,19,90,25,"patchDict"],[76,28,90,34],[76,29,90,35,"key"],[76,34,90,34],[76,35,90,25],[76,36,90,40,"prelude"],[76,43,90,25],[76,47,90,51],[76,51,89,26],[77,0,91,16,"descriptors"],[77,10,91,16,"descriptors"],[77,21,91,27],[77,23,91,29,"patchDict"],[77,32,91,38],[77,33,91,39,"key"],[77,38,91,38],[77,39,91,29],[77,40,91,44,"descriptors"],[77,51,91,29],[77,55,91,59,"unpackSyntaxes"],[77,69,91,73],[77,70,91,74,"patchDict"],[77,79,91,83],[77,80,91,84,"key"],[77,85,91,83],[77,86,91,74],[77,87,91,89,"descriptors"],[77,98,91,73],[78,0,89,26],[78,9,89,12],[79,0,93,9],[80,0,94,5],[82,0,96,4],[82,11,96,11,"result"],[82,17,96,4],[83,0,97,1],[85,0,99,0,"module"],[85,2,99,0,"module"],[85,8,99,6],[85,9,99,7,"exports"],[85,16,99,0],[85,19,99,17],[86,0,100,4,"types"],[86,4,100,4,"types"],[86,9,100,9],[86,11,100,11,"patchDictionary"],[86,26,100,26],[86,89,100,40],[86,136,100,46,"syntaxes"],[86,144,100,26],[86,145,99,17],[87,0,101,4,"atrules"],[87,4,101,4,"atrules"],[87,11,101,11],[87,13,101,13,"patchAtrules"],[87,25,101,25],[87,26,101,26,"preprocessAtrules"],[87,43,101,43],[87,105,101,25],[87,107,101,57],[87,154,101,63,"atrules"],[87,161,101,25],[87,162,99,17],[88,0,102,4,"properties"],[88,4,102,4,"properties"],[88,14,102,14],[88,16,102,16,"patchDictionary"],[88,31,102,31],[88,96,102,47],[88,143,102,53,"properties"],[88,153,102,31],[89,0,99,17],[89,3,99,0]],"functionMap":{"names":["<global>","preprocessAtrules","patchDictionary","unpackSyntaxes","patchAtrules"],"mappings":"AAA;ACM;CDsB;AEE;CF0B;AGE;CHQ;AIE;CJ4B"}},"type":"js/module"}]}