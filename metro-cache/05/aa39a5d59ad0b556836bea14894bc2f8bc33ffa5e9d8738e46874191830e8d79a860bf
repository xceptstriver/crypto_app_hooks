{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":41,"column":2},"end":{"line":41,"column":79}}]}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":42,"column":2},"end":{"line":47,"column":3}},{"start":{"line":61,"column":6},"end":{"line":64,"column":7}},{"start":{"line":90,"column":2},"end":{"line":93,"column":3}},{"start":{"line":128,"column":8},"end":{"line":131,"column":9}},{"start":{"line":177,"column":2},"end":{"line":180,"column":3}}]}},{"name":"./BatchedBridge","data":{"asyncType":null,"locs":[{"start":{"line":80,"column":4},"end":{"line":80,"column":35}},{"start":{"line":106,"column":8},"end":{"line":106,"column":39}},{"start":{"line":139,"column":15},"end":{"line":139,"column":47}},{"start":{"line":147,"column":8},"end":{"line":147,"column":39}}]}},{"name":"../Utilities/defineLazyObjectProperty","data":{"asyncType":null,"locs":[{"start":{"line":182,"column":35},"end":{"line":182,"column":83}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function genModule(config, moduleID) {\n    if (!config) {\n      return null;\n    }\n\n    var _config = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\")(config, 5),\n        moduleName = _config[0],\n        constants = _config[1],\n        methods = _config[2],\n        promiseMethods = _config[3],\n        syncMethods = _config[4];\n\n    _$$_REQUIRE(_dependencyMap[1], \"invariant\")(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), \"Module name prefixes should've been stripped by the native side \" + \"but wasn't for \" + moduleName);\n\n    if (!constants && !methods) {\n      return {\n        name: moduleName\n      };\n    }\n\n    var module = {};\n    methods && methods.forEach(function (methodName, methodID) {\n      var isPromise = promiseMethods && arrayContains(promiseMethods, methodID) || false;\n      var isSync = syncMethods && arrayContains(syncMethods, methodID) || false;\n\n      _$$_REQUIRE(_dependencyMap[1], \"invariant\")(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');\n\n      var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';\n      module[methodName] = genMethod(moduleID, methodID, methodType);\n    });\n    Object.assign(module, constants);\n\n    if (module.getConstants == null) {\n      module.getConstants = function () {\n        return constants || Object.freeze({});\n      };\n    } else {\n      console.warn(\"Unable to define method 'getConstants()' on NativeModule '\" + moduleName + \"'. NativeModule '\" + moduleName + \"' already has a constant or method called 'getConstants'. Please remove it.\");\n    }\n\n    if (__DEV__) {\n      _$$_REQUIRE(_dependencyMap[2], \"./BatchedBridge\").createDebugLookup(moduleID, moduleName, methods);\n    }\n\n    return {\n      name: moduleName,\n      module: module\n    };\n  }\n\n  global.__fbGenNativeModule = genModule;\n\n  function loadModule(name, moduleID) {\n    _$$_REQUIRE(_dependencyMap[1], \"invariant\")(global.nativeRequireModuleConfig, \"Can't lazily create module without nativeRequireModuleConfig\");\n\n    var config = global.nativeRequireModuleConfig(name);\n    var info = genModule(config, moduleID);\n    return info && info.module;\n  }\n\n  function genMethod(moduleID, methodID, type) {\n    var fn = null;\n\n    if (type === 'promise') {\n      fn = function promiseMethodWrapper() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var enqueueingFrameError = new Error();\n        return new Promise(function (resolve, reject) {\n          _$$_REQUIRE(_dependencyMap[2], \"./BatchedBridge\").enqueueNativeCall(moduleID, methodID, args, function (data) {\n            return resolve(data);\n          }, function (errorData) {\n            return reject(updateErrorWithErrorData(errorData, enqueueingFrameError));\n          });\n        });\n      };\n    } else {\n      fn = function nonPromiseMethodWrapper() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        var lastArg = args.length > 0 ? args[args.length - 1] : null;\n        var secondLastArg = args.length > 1 ? args[args.length - 2] : null;\n        var hasSuccessCallback = typeof lastArg === 'function';\n        var hasErrorCallback = typeof secondLastArg === 'function';\n        hasErrorCallback && _$$_REQUIRE(_dependencyMap[1], \"invariant\")(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');\n        var onSuccess = hasSuccessCallback ? lastArg : null;\n        var onFail = hasErrorCallback ? secondLastArg : null;\n        var callbackCount = hasSuccessCallback + hasErrorCallback;\n        var newArgs = args.slice(0, args.length - callbackCount);\n\n        if (type === 'sync') {\n          return _$$_REQUIRE(_dependencyMap[2], \"./BatchedBridge\").callNativeSyncHook(moduleID, methodID, newArgs, onFail, onSuccess);\n        } else {\n          _$$_REQUIRE(_dependencyMap[2], \"./BatchedBridge\").enqueueNativeCall(moduleID, methodID, newArgs, onFail, onSuccess);\n        }\n      };\n    }\n\n    fn.type = type;\n    return fn;\n  }\n\n  function arrayContains(array, value) {\n    return array.indexOf(value) !== -1;\n  }\n\n  function updateErrorWithErrorData(errorData, error) {\n    return Object.assign(error, errorData || {});\n  }\n\n  var NativeModules = {};\n\n  if (global.nativeModuleProxy) {\n    NativeModules = global.nativeModuleProxy;\n  } else if (!global.nativeExtensions) {\n    var bridgeConfig = global.__fbBatchedBridgeConfig;\n\n    _$$_REQUIRE(_dependencyMap[1], \"invariant\")(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');\n\n    var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[3], \"../Utilities/defineLazyObjectProperty\");\n\n    (bridgeConfig.remoteModuleConfig || []).forEach(function (config, moduleID) {\n      var info = genModule(config, moduleID);\n\n      if (!info) {\n        return;\n      }\n\n      if (info.module) {\n        NativeModules[info.name] = info.module;\n      } else {\n        defineLazyObjectProperty(NativeModules, info.name, {\n          get: function get() {\n            return loadModule(info.name, moduleID);\n          }\n        });\n      }\n    });\n  }\n\n  module.exports = NativeModules;\n});","lineCount":149,"map":[[2,0,11,0],[4,0,29,0],[4,11,29,9,"genModule"],[4,20,29,0],[4,21,30,2,"config"],[4,27,29,0],[4,29,31,2,"moduleID"],[4,37,29,0],[4,39,36,2],[5,0,37,2],[5,8,37,6],[5,9,37,7,"config"],[5,15,37,2],[5,17,37,15],[6,0,38,4],[6,13,38,11],[6,17,38,4],[7,0,39,3],[9,0,41,2],[9,89,41,72,"config"],[9,95,41,2],[10,0,41,2],[10,8,41,9,"moduleName"],[10,18,41,2],[11,0,41,2],[11,8,41,21,"constants"],[11,17,41,2],[12,0,41,2],[12,8,41,32,"methods"],[12,15,41,2],[13,0,41,2],[13,8,41,41,"promiseMethods"],[13,22,41,2],[14,0,41,2],[14,8,41,57,"syncMethods"],[14,19,41,2],[16,0,42,2],[16,48,43,4],[16,49,43,5,"moduleName"],[16,59,43,15],[16,60,43,16,"startsWith"],[16,70,43,5],[16,71,43,27],[16,76,43,5],[16,77,43,4],[16,81,43,37],[16,82,43,38,"moduleName"],[16,92,43,48],[16,93,43,49,"startsWith"],[16,103,43,38],[16,104,43,60],[16,108,43,38],[16,109,42,2],[16,111,44,4],[16,180,45,6],[16,197,44,4],[16,200,46,6,"moduleName"],[16,210,42,2],[18,0,49,2],[18,8,49,6],[18,9,49,7,"constants"],[18,18,49,6],[18,22,49,20],[18,23,49,21,"methods"],[18,30,49,2],[18,32,49,30],[19,0,51,4],[19,13,51,11],[20,0,51,12,"name"],[20,8,51,12,"name"],[20,12,51,16],[20,14,51,18,"moduleName"],[21,0,51,11],[21,7,51,4],[22,0,52,3],[24,0,54,2],[24,8,54,8,"module"],[24,14,54,14],[24,17,54,17],[24,19,54,2],[25,0,55,2,"methods"],[25,4,55,2,"methods"],[25,11,55,9],[25,15,56,4,"methods"],[25,22,56,11],[25,23,56,12,"forEach"],[25,30,56,4],[25,31,56,20],[25,41,56,21,"methodName"],[25,51,56,20],[25,53,56,33,"methodID"],[25,61,56,20],[25,63,56,46],[26,0,57,6],[26,10,57,12,"isPromise"],[26,19,57,21],[26,22,58,9,"promiseMethods"],[26,36,58,23],[26,40,58,27,"arrayContains"],[26,53,58,40],[26,54,58,41,"promiseMethods"],[26,68,58,40],[26,70,58,57,"methodID"],[26,78,58,40],[26,79,58,8],[26,83,58,71],[26,88,57,6],[27,0,59,6],[27,10,59,12,"isSync"],[27,16,59,18],[27,19,60,9,"syncMethods"],[27,30,60,20],[27,34,60,24,"arrayContains"],[27,47,60,37],[27,48,60,38,"syncMethods"],[27,59,60,37],[27,61,60,51,"methodID"],[27,69,60,37],[27,70,60,8],[27,74,60,65],[27,79,59,6],[29,0,61,6],[29,50,62,8],[29,51,62,9,"isPromise"],[29,60,62,8],[29,64,62,22],[29,65,62,23,"isSync"],[29,71,61,6],[29,73,63,8],[29,130,61,6],[31,0,65,6],[31,10,65,12,"methodType"],[31,20,65,22],[31,23,65,25,"isPromise"],[31,32,65,34],[31,35,65,37],[31,44,65,34],[31,47,65,49,"isSync"],[31,53,65,55],[31,56,65,58],[31,62,65,55],[31,65,65,67],[31,72,65,6],[32,0,66,6,"module"],[32,6,66,6,"module"],[32,12,66,12],[32,13,66,13,"methodName"],[32,23,66,12],[32,24,66,6],[32,27,66,27,"genMethod"],[32,36,66,36],[32,37,66,37,"moduleID"],[32,45,66,36],[32,47,66,47,"methodID"],[32,55,66,36],[32,57,66,57,"methodType"],[32,67,66,36],[32,68,66,6],[33,0,67,5],[33,5,56,4],[33,6,55,2],[34,0,69,2,"Object"],[34,4,69,2,"Object"],[34,10,69,8],[34,11,69,9,"assign"],[34,17,69,2],[34,18,69,16,"module"],[34,24,69,2],[34,26,69,24,"constants"],[34,35,69,2],[36,0,71,2],[36,8,71,6,"module"],[36,14,71,12],[36,15,71,13,"getConstants"],[36,27,71,6],[36,31,71,29],[36,35,71,2],[36,37,71,35],[37,0,72,4,"module"],[37,6,72,4,"module"],[37,12,72,10],[37,13,72,11,"getConstants"],[37,25,72,4],[37,28,72,26],[38,0,72,26],[38,15,72,32,"constants"],[38,24,72,41],[38,28,72,45,"Object"],[38,34,72,51],[38,35,72,52,"freeze"],[38,41,72,45],[38,42,72,59],[38,44,72,45],[38,45,72,26],[39,0,72,26],[39,7,72,4],[40,0,73,3],[40,5,71,2],[40,11,73,9],[41,0,74,4,"console"],[41,6,74,4,"console"],[41,13,74,11],[41,14,74,12,"warn"],[41,18,74,4],[41,82,75,67,"moduleName"],[41,92,74,4],[41,117,75,97,"moduleName"],[41,127,74,4],[42,0,77,3],[44,0,79,2],[44,8,79,6,"__DEV__"],[44,15,79,2],[44,17,79,15],[45,0,80,4],[45,56,80,18,"createDebugLookup"],[45,73,80,4],[45,74,80,36,"moduleID"],[45,82,80,4],[45,84,80,46,"moduleName"],[45,94,80,4],[45,96,80,58,"methods"],[45,103,80,4],[46,0,81,3],[48,0,83,2],[48,11,83,9],[49,0,83,10,"name"],[49,6,83,10,"name"],[49,10,83,14],[49,12,83,16,"moduleName"],[49,22,83,9],[50,0,83,28,"module"],[50,6,83,28,"module"],[50,12,83,34],[50,14,83,28,"module"],[51,0,83,9],[51,5,83,2],[52,0,84,1],[54,0,87,0,"global"],[54,2,87,0,"global"],[54,8,87,6],[54,9,87,7,"__fbGenNativeModule"],[54,28,87,0],[54,31,87,29,"genModule"],[54,40,87,0],[56,0,89,0],[56,11,89,9,"loadModule"],[56,21,89,0],[56,22,89,20,"name"],[56,26,89,0],[56,28,89,34,"moduleID"],[56,36,89,0],[56,38,89,60],[57,0,90,2],[57,48,91,4,"global"],[57,54,91,10],[57,55,91,11,"nativeRequireModuleConfig"],[57,80,90,2],[57,82,92,4],[57,144,90,2],[59,0,94,2],[59,8,94,8,"config"],[59,14,94,14],[59,17,94,17,"global"],[59,23,94,23],[59,24,94,24,"nativeRequireModuleConfig"],[59,49,94,17],[59,50,94,50,"name"],[59,54,94,17],[59,55,94,2],[60,0,95,2],[60,8,95,8,"info"],[60,12,95,12],[60,15,95,15,"genModule"],[60,24,95,24],[60,25,95,25,"config"],[60,31,95,24],[60,33,95,33,"moduleID"],[60,41,95,24],[60,42,95,2],[61,0,96,2],[61,11,96,9,"info"],[61,15,96,13],[61,19,96,17,"info"],[61,23,96,21],[61,24,96,22,"module"],[61,30,96,2],[62,0,97,1],[64,0,99,0],[64,11,99,9,"genMethod"],[64,20,99,0],[64,21,99,19,"moduleID"],[64,29,99,0],[64,31,99,37,"methodID"],[64,39,99,0],[64,41,99,55,"type"],[64,45,99,0],[64,47,99,73],[65,0,100,2],[65,8,100,6,"fn"],[65,10,100,8],[65,13,100,11],[65,17,100,2],[67,0,101,2],[67,8,101,6,"type"],[67,12,101,10],[67,17,101,15],[67,26,101,2],[67,28,101,26],[68,0,102,4,"fn"],[68,6,102,4,"fn"],[68,8,102,6],[68,11,102,9],[68,20,102,18,"promiseMethodWrapper"],[68,40,102,9],[68,43,102,62],[69,0,102,62],[69,42,102,42,"args"],[69,46,102,62],[70,0,102,42,"args"],[70,10,102,42,"args"],[70,14,102,62],[71,0,102,62],[73,0,104,6],[73,12,104,12,"enqueueingFrameError"],[73,32,104,47],[73,35,104,50],[73,39,104,54,"Error"],[73,44,104,50],[73,46,104,6],[74,0,105,6],[74,15,105,13],[74,19,105,17,"Promise"],[74,26,105,13],[74,27,105,25],[74,37,105,26,"resolve"],[74,44,105,25],[74,46,105,35,"reject"],[74,52,105,25],[74,54,105,46],[75,0,106,8],[75,60,106,22,"enqueueNativeCall"],[75,77,106,8],[75,78,107,10,"moduleID"],[75,86,106,8],[75,88,108,10,"methodID"],[75,96,106,8],[75,98,109,10,"args"],[75,102,106,8],[75,104,110,10],[75,114,110,10,"data"],[75,118,110,14],[76,0,110,14],[76,19,110,18,"resolve"],[76,26,110,25],[76,27,110,26,"data"],[76,31,110,25],[76,32,110,14],[77,0,110,14],[77,11,106,8],[77,13,111,10],[77,23,111,10,"errorData"],[77,32,111,19],[78,0,111,19],[78,19,112,12,"reject"],[78,25,112,18],[78,26,113,14,"updateErrorWithErrorData"],[78,50,113,38],[78,51,114,17,"errorData"],[78,60,113,38],[78,62,115,16,"enqueueingFrameError"],[78,82,113,38],[78,83,112,18],[78,84,111,19],[79,0,111,19],[79,11,106,8],[80,0,119,7],[80,9,105,13],[80,10,105,6],[81,0,120,5],[81,7,102,4],[82,0,121,3],[82,5,101,2],[82,11,121,9],[83,0,122,4,"fn"],[83,6,122,4,"fn"],[83,8,122,6],[83,11,122,9],[83,20,122,18,"nonPromiseMethodWrapper"],[83,43,122,9],[83,46,122,65],[84,0,122,65],[84,43,122,45,"args"],[84,47,122,65],[85,0,122,45,"args"],[85,10,122,45,"args"],[85,14,122,65],[86,0,122,65],[88,0,123,6],[88,12,123,12,"lastArg"],[88,19,123,19],[88,22,123,22,"args"],[88,26,123,26],[88,27,123,27,"length"],[88,33,123,22],[88,36,123,36],[88,37,123,22],[88,40,123,40,"args"],[88,44,123,44],[88,45,123,45,"args"],[88,49,123,49],[88,50,123,50,"length"],[88,56,123,45],[88,59,123,59],[88,60,123,44],[88,61,123,22],[88,64,123,64],[88,68,123,6],[89,0,124,6],[89,12,124,12,"secondLastArg"],[89,25,124,25],[89,28,124,28,"args"],[89,32,124,32],[89,33,124,33,"length"],[89,39,124,28],[89,42,124,42],[89,43,124,28],[89,46,124,46,"args"],[89,50,124,50],[89,51,124,51,"args"],[89,55,124,55],[89,56,124,56,"length"],[89,62,124,51],[89,65,124,65],[89,66,124,50],[89,67,124,28],[89,70,124,70],[89,74,124,6],[90,0,125,6],[90,12,125,12,"hasSuccessCallback"],[90,30,125,30],[90,33,125,33],[90,40,125,40,"lastArg"],[90,47,125,33],[90,52,125,52],[90,62,125,6],[91,0,126,6],[91,12,126,12,"hasErrorCallback"],[91,28,126,28],[91,31,126,31],[91,38,126,38,"secondLastArg"],[91,51,126,31],[91,56,126,56],[91,66,126,6],[92,0,127,6,"hasErrorCallback"],[92,8,127,6,"hasErrorCallback"],[92,24,127,22],[92,28,128,8],[92,72,129,10,"hasSuccessCallback"],[92,90,128,8],[92,92,130,10],[92,146,128,8],[92,147,127,6],[93,0,133,6],[93,12,133,12,"onSuccess"],[93,21,133,39],[93,24,133,42,"hasSuccessCallback"],[93,42,133,60],[93,45,133,63,"lastArg"],[93,52,133,60],[93,55,133,73],[93,59,133,6],[94,0,135,6],[94,12,135,12,"onFail"],[94,18,135,36],[94,21,135,39,"hasErrorCallback"],[94,37,135,55],[94,40,135,58,"secondLastArg"],[94,53,135,55],[94,56,135,74],[94,60,135,6],[95,0,136,6],[95,12,136,12,"callbackCount"],[95,25,136,25],[95,28,136,28,"hasSuccessCallback"],[95,46,136,46],[95,49,136,49,"hasErrorCallback"],[95,65,136,6],[96,0,137,6],[96,12,137,12,"newArgs"],[96,19,137,19],[96,22,137,22,"args"],[96,26,137,26],[96,27,137,27,"slice"],[96,32,137,22],[96,33,137,33],[96,34,137,22],[96,36,137,36,"args"],[96,40,137,40],[96,41,137,41,"length"],[96,47,137,36],[96,50,137,50,"callbackCount"],[96,63,137,22],[96,64,137,6],[98,0,138,6],[98,12,138,10,"type"],[98,16,138,14],[98,21,138,19],[98,27,138,6],[98,29,138,27],[99,0,139,8],[99,17,139,15],[99,67,139,29,"callNativeSyncHook"],[99,85,139,15],[99,86,140,10,"moduleID"],[99,94,139,15],[99,96,141,10,"methodID"],[99,104,139,15],[99,106,142,10,"newArgs"],[99,113,139,15],[99,115,143,10,"onFail"],[99,121,139,15],[99,123,144,10,"onSuccess"],[99,132,139,15],[99,133,139,8],[100,0,146,7],[100,9,138,6],[100,15,146,13],[101,0,147,8],[101,60,147,22,"enqueueNativeCall"],[101,77,147,8],[101,78,148,10,"moduleID"],[101,86,147,8],[101,88,149,10,"methodID"],[101,96,147,8],[101,98,150,10,"newArgs"],[101,105,147,8],[101,107,151,10,"onFail"],[101,113,147,8],[101,115,152,10,"onSuccess"],[101,124,147,8],[102,0,154,7],[103,0,155,5],[103,7,122,4],[104,0,156,3],[106,0,157,2,"fn"],[106,4,157,2,"fn"],[106,6,157,4],[106,7,157,5,"type"],[106,11,157,2],[106,14,157,12,"type"],[106,18,157,2],[107,0,158,2],[107,11,158,9,"fn"],[107,13,158,2],[108,0,159,1],[110,0,161,0],[110,11,161,9,"arrayContains"],[110,24,161,0],[110,25,161,26,"array"],[110,30,161,0],[110,32,161,52,"value"],[110,37,161,0],[110,39,161,71],[111,0,162,2],[111,11,162,9,"array"],[111,16,162,14],[111,17,162,15,"indexOf"],[111,24,162,9],[111,25,162,23,"value"],[111,30,162,9],[111,36,162,34],[111,37,162,35],[111,38,162,2],[112,0,163,1],[114,0,165,0],[114,11,165,9,"updateErrorWithErrorData"],[114,35,165,0],[114,36,166,2,"errorData"],[114,45,165,0],[114,47,167,2,"error"],[114,52,165,0],[114,54,168,17],[115,0,169,2],[115,11,169,9,"Object"],[115,17,169,15],[115,18,169,16,"assign"],[115,24,169,9],[115,25,169,23,"error"],[115,30,169,9],[115,32,169,30,"errorData"],[115,41,169,39],[115,45,169,43],[115,47,169,9],[115,48,169,2],[116,0,170,1],[118,0,172,0],[118,6,172,4,"NativeModules"],[118,19,172,58],[118,22,172,61],[118,24,172,0],[120,0,173,0],[120,6,173,4,"global"],[120,12,173,10],[120,13,173,11,"nativeModuleProxy"],[120,30,173,0],[120,32,173,30],[121,0,174,2,"NativeModules"],[121,4,174,2,"NativeModules"],[121,17,174,15],[121,20,174,18,"global"],[121,26,174,24],[121,27,174,25,"nativeModuleProxy"],[121,44,174,2],[122,0,175,1],[122,3,173,0],[122,9,175,7],[122,13,175,11],[122,14,175,12,"global"],[122,20,175,18],[122,21,175,19,"nativeExtensions"],[122,37,175,7],[122,39,175,37],[123,0,176,2],[123,8,176,8,"bridgeConfig"],[123,20,176,20],[123,23,176,23,"global"],[123,29,176,29],[123,30,176,30,"__fbBatchedBridgeConfig"],[123,53,176,2],[125,0,177,2],[125,48,178,4,"bridgeConfig"],[125,60,177,2],[125,62,179,4],[125,128,177,2],[127,0,182,2],[127,8,182,8,"defineLazyObjectProperty"],[127,32,182,32],[127,35,182,35,"require"],[127,46,182,42],[127,106,182,2],[129,0,183,2],[129,5,183,3,"bridgeConfig"],[129,17,183,15],[129,18,183,16,"remoteModuleConfig"],[129,36,183,3],[129,40,183,38],[129,42,183,2],[129,44,183,42,"forEach"],[129,51,183,2],[129,52,184,4],[129,62,184,5,"config"],[129,68,184,4],[129,70,184,27,"moduleID"],[129,78,184,4],[129,80,184,48],[130,0,187,6],[130,10,187,12,"info"],[130,14,187,16],[130,17,187,19,"genModule"],[130,26,187,28],[130,27,187,29,"config"],[130,33,187,28],[130,35,187,37,"moduleID"],[130,43,187,28],[130,44,187,6],[132,0,188,6],[132,10,188,10],[132,11,188,11,"info"],[132,15,188,6],[132,17,188,17],[133,0,189,8],[134,0,190,7],[136,0,192,6],[136,10,192,10,"info"],[136,14,192,14],[136,15,192,15,"module"],[136,21,192,6],[136,23,192,23],[137,0,193,8,"NativeModules"],[137,8,193,8,"NativeModules"],[137,21,193,21],[137,22,193,22,"info"],[137,26,193,26],[137,27,193,27,"name"],[137,31,193,21],[137,32,193,8],[137,35,193,35,"info"],[137,39,193,39],[137,40,193,40,"module"],[137,46,193,8],[138,0,194,7],[138,7,192,6],[138,13,196,11],[139,0,197,8,"defineLazyObjectProperty"],[139,8,197,8,"defineLazyObjectProperty"],[139,32,197,32],[139,33,197,33,"NativeModules"],[139,46,197,32],[139,48,197,48,"info"],[139,52,197,52],[139,53,197,53,"name"],[139,57,197,32],[139,59,197,59],[140,0,198,10,"get"],[140,10,198,10,"get"],[140,13,198,13],[140,15,198,15],[141,0,198,15],[141,19,198,21,"loadModule"],[141,29,198,31],[141,30,198,32,"info"],[141,34,198,36],[141,35,198,37,"name"],[141,39,198,31],[141,41,198,43,"moduleID"],[141,49,198,31],[141,50,198,15],[142,0,198,15],[143,0,197,59],[143,9,197,32],[143,10,197,8],[144,0,200,7],[145,0,201,5],[145,5,183,2],[146,0,203,1],[148,0,205,0,"module"],[148,2,205,0,"module"],[148,8,205,6],[148,9,205,7,"exports"],[148,16,205,0],[148,19,205,17,"NativeModules"],[148,32,205,0]],"functionMap":{"names":["<global>","genModule","methods.forEach$argument_0","module.getConstants","loadModule","genMethod","promiseMethodWrapper","Promise$argument_0","BatchedBridge.enqueueNativeCall$argument_3","BatchedBridge.enqueueNativeCall$argument_4","nonPromiseMethodWrapper","arrayContains","updateErrorWithErrorData","forEach$argument_0","defineLazyObjectProperty$argument_2.get"],"mappings":"AAA;AC4B;oBC2B;KDW;0BEK,oCF;CDY;AIK;CJQ;AKE;SCG;yBCG;UCK,qBD;UEC;aFM;ODE;KDC;SKE;KLiC;CLI;AWE;CXE;AYE;CZK;Iac;eCc,qCD;KbG"}},"type":"js/module"}]}