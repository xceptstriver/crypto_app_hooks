{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":17},"end":{"line":4,"column":32}},{"start":{"line":5,"column":14},"end":{"line":5,"column":26}},{"start":{"line":6,"column":16},"end":{"line":6,"column":30}},{"start":{"line":7,"column":16},"end":{"line":7,"column":30}},{"start":{"line":8,"column":23},"end":{"line":8,"column":44}},{"start":{"line":9,"column":24},"end":{"line":9,"column":46}}]}},{"name":"./Raw","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":32},"end":{"line":18,"column":57}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var WHITESPACE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.WhiteSpace;\n\n  var COMMENT = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Comment;\n\n  var SEMICOLON = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Semicolon;\n\n  var ATKEYWORD = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.AtKeyword;\n\n  var LEFTCURLYBRACKET = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.LeftCurlyBracket;\n\n  var RIGHTCURLYBRACKET = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.RightCurlyBracket;\n\n  function consumeRaw(startToken) {\n    return this.Raw(startToken, null, true);\n  }\n\n  function consumeRule() {\n    return this.parseWithFallback(this.Rule, consumeRaw);\n  }\n\n  function consumeRawDeclaration(startToken) {\n    return this.Raw(startToken, _$$_REQUIRE(_dependencyMap[1], \"./Raw\").mode.semicolonIncluded, true);\n  }\n\n  function consumeDeclaration() {\n    if (this.scanner.tokenType === SEMICOLON) {\n      return consumeRawDeclaration.call(this, this.scanner.tokenIndex);\n    }\n\n    var node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);\n\n    if (this.scanner.tokenType === SEMICOLON) {\n      this.scanner.next();\n    }\n\n    return node;\n  }\n\n  module.exports = {\n    name: 'Block',\n    structure: {\n      children: [['Atrule', 'Rule', 'Declaration']]\n    },\n    parse: function parse(isDeclaration) {\n      var consumer = isDeclaration ? consumeDeclaration : consumeRule;\n      var start = this.scanner.tokenStart;\n      var children = this.createList();\n      this.eat(LEFTCURLYBRACKET);\n\n      scan: while (!this.scanner.eof) {\n        switch (this.scanner.tokenType) {\n          case RIGHTCURLYBRACKET:\n            break scan;\n\n          case WHITESPACE:\n          case COMMENT:\n            this.scanner.next();\n            break;\n\n          case ATKEYWORD:\n            children.push(this.parseWithFallback(this.Atrule, consumeRaw));\n            break;\n\n          default:\n            children.push(consumer.call(this));\n        }\n      }\n\n      if (!this.scanner.eof) {\n        this.eat(RIGHTCURLYBRACKET);\n      }\n\n      return {\n        type: 'Block',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        children: children\n      };\n    },\n    generate: function generate(node) {\n      this.chunk('{');\n      this.children(node, function (prev) {\n        if (prev.type === 'Declaration') {\n          this.chunk(';');\n        }\n      });\n      this.chunk('}');\n    },\n    walkContext: 'block'\n  };\n});","lineCount":91,"map":[[2,0,4,0],[2,6,4,4,"WHITESPACE"],[2,16,4,14],[2,19,4,17],[2,74,4,22,"WhiteSpace"],[2,84,4,0],[4,0,5,0],[4,6,5,4,"COMMENT"],[4,13,5,11],[4,16,5,14],[4,71,5,19,"Comment"],[4,78,5,0],[6,0,6,0],[6,6,6,4,"SEMICOLON"],[6,15,6,13],[6,18,6,16],[6,73,6,21,"Semicolon"],[6,82,6,0],[8,0,7,0],[8,6,7,4,"ATKEYWORD"],[8,15,7,13],[8,18,7,16],[8,73,7,21,"AtKeyword"],[8,82,7,0],[10,0,8,0],[10,6,8,4,"LEFTCURLYBRACKET"],[10,22,8,20],[10,25,8,23],[10,80,8,28,"LeftCurlyBracket"],[10,96,8,0],[12,0,9,0],[12,6,9,4,"RIGHTCURLYBRACKET"],[12,23,9,21],[12,26,9,24],[12,81,9,29,"RightCurlyBracket"],[12,98,9,0],[14,0,11,0],[14,11,11,9,"consumeRaw"],[14,21,11,0],[14,22,11,20,"startToken"],[14,32,11,0],[14,34,11,32],[15,0,12,4],[15,11,12,11],[15,16,12,16,"Raw"],[15,19,12,11],[15,20,12,20,"startToken"],[15,30,12,11],[15,32,12,32],[15,36,12,11],[15,38,12,38],[15,42,12,11],[15,43,12,4],[16,0,13,1],[18,0,14,0],[18,11,14,9,"consumeRule"],[18,22,14,0],[18,25,14,23],[19,0,15,4],[19,11,15,11],[19,16,15,16,"parseWithFallback"],[19,33,15,11],[19,34,15,34],[19,39,15,39,"Rule"],[19,43,15,11],[19,45,15,45,"consumeRaw"],[19,55,15,11],[19,56,15,4],[20,0,16,1],[22,0,17,0],[22,11,17,9,"consumeRawDeclaration"],[22,32,17,0],[22,33,17,31,"startToken"],[22,43,17,0],[22,45,17,43],[23,0,18,4],[23,11,18,11],[23,16,18,16,"Raw"],[23,19,18,11],[23,20,18,20,"startToken"],[23,30,18,11],[23,32,18,32],[23,77,18,40,"semicolonIncluded"],[23,94,18,11],[23,96,18,59],[23,100,18,11],[23,101,18,4],[24,0,19,1],[26,0,20,0],[26,11,20,9,"consumeDeclaration"],[26,29,20,0],[26,32,20,30],[27,0,21,4],[27,8,21,8],[27,13,21,13,"scanner"],[27,20,21,8],[27,21,21,21,"tokenType"],[27,30,21,8],[27,35,21,35,"SEMICOLON"],[27,44,21,4],[27,46,21,46],[28,0,22,8],[28,13,22,15,"consumeRawDeclaration"],[28,34,22,36],[28,35,22,37,"call"],[28,39,22,15],[28,40,22,42],[28,44,22,15],[28,46,22,48],[28,51,22,53,"scanner"],[28,58,22,48],[28,59,22,61,"tokenIndex"],[28,69,22,15],[28,70,22,8],[29,0,23,5],[31,0,25,4],[31,8,25,8,"node"],[31,12,25,12],[31,15,25,15],[31,20,25,20,"parseWithFallback"],[31,37,25,15],[31,38,25,38],[31,43,25,43,"Declaration"],[31,54,25,15],[31,56,25,56,"consumeRawDeclaration"],[31,77,25,15],[31,78,25,4],[33,0,27,4],[33,8,27,8],[33,13,27,13,"scanner"],[33,20,27,8],[33,21,27,21,"tokenType"],[33,30,27,8],[33,35,27,35,"SEMICOLON"],[33,44,27,4],[33,46,27,46],[34,0,28,8],[34,11,28,13,"scanner"],[34,18,28,8],[34,19,28,21,"next"],[34,23,28,8],[35,0,29,5],[37,0,31,4],[37,11,31,11,"node"],[37,15,31,4],[38,0,32,1],[40,0,34,0,"module"],[40,2,34,0,"module"],[40,8,34,6],[40,9,34,7,"exports"],[40,16,34,0],[40,19,34,17],[41,0,35,4,"name"],[41,4,35,4,"name"],[41,8,35,8],[41,10,35,10],[41,17,34,17],[42,0,36,4,"structure"],[42,4,36,4,"structure"],[42,13,36,13],[42,15,36,15],[43,0,37,8,"children"],[43,6,37,8,"children"],[43,14,37,16],[43,16,37,18],[43,17,37,19],[43,18,38,12],[43,26,37,19],[43,28,39,12],[43,34,37,19],[43,36,40,12],[43,49,37,19],[43,50,37,18],[44,0,36,15],[44,5,34,17],[45,0,43,4,"parse"],[45,4,43,4,"parse"],[45,9,43,9],[45,11,43,11],[45,26,43,20,"isDeclaration"],[45,39,43,11],[45,41,43,35],[46,0,44,8],[46,10,44,12,"consumer"],[46,18,44,20],[46,21,44,23,"isDeclaration"],[46,34,44,36],[46,37,44,39,"consumeDeclaration"],[46,55,44,36],[46,58,44,60,"consumeRule"],[46,69,44,8],[47,0,46,8],[47,10,46,12,"start"],[47,15,46,17],[47,18,46,20],[47,23,46,25,"scanner"],[47,30,46,20],[47,31,46,33,"tokenStart"],[47,41,46,8],[48,0,47,8],[48,10,47,12,"children"],[48,18,47,20],[48,21,47,23],[48,26,47,28,"createList"],[48,36,47,23],[48,38,47,8],[49,0,49,8],[49,11,49,13,"eat"],[49,14,49,8],[49,15,49,17,"LEFTCURLYBRACKET"],[49,31,49,8],[51,0,51,8,"scan"],[51,6,51,8,"scan"],[51,10,51,12],[51,12,52,8],[51,19,52,15],[51,20,52,16],[51,25,52,21,"scanner"],[51,32,52,16],[51,33,52,29,"eof"],[51,36,52,8],[51,38,52,34],[52,0,53,12],[52,16,53,20],[52,21,53,25,"scanner"],[52,28,53,20],[52,29,53,33,"tokenType"],[52,38,53,12],[53,0,54,16],[53,15,54,21,"RIGHTCURLYBRACKET"],[53,32,54,16],[54,0,55,20],[54,18,55,26,"scan"],[54,22,55,20],[56,0,57,16],[56,15,57,21,"WHITESPACE"],[56,25,57,16],[57,0,58,16],[57,15,58,21,"COMMENT"],[57,22,58,16],[58,0,59,20],[58,17,59,25,"scanner"],[58,24,59,20],[58,25,59,33,"next"],[58,29,59,20],[59,0,60,20],[61,0,62,16],[61,15,62,21,"ATKEYWORD"],[61,24,62,16],[62,0,63,20,"children"],[62,12,63,20,"children"],[62,20,63,28],[62,21,63,29,"push"],[62,25,63,20],[62,26,63,34],[62,31,63,39,"parseWithFallback"],[62,48,63,34],[62,49,63,57],[62,54,63,62,"Atrule"],[62,60,63,34],[62,62,63,70,"consumeRaw"],[62,72,63,34],[62,73,63,20],[63,0,64,20],[65,0,66,16],[66,0,67,20,"children"],[66,12,67,20,"children"],[66,20,67,28],[66,21,67,29,"push"],[66,25,67,20],[66,26,67,34,"consumer"],[66,34,67,42],[66,35,67,43,"call"],[66,39,67,34],[66,40,67,48],[66,44,67,34],[66,45,67,20],[67,0,53,12],[68,0,69,9],[70,0,71,8],[70,10,71,12],[70,11,71,13],[70,16,71,18,"scanner"],[70,23,71,13],[70,24,71,26,"eof"],[70,27,71,8],[70,29,71,31],[71,0,72,12],[71,13,72,17,"eat"],[71,16,72,12],[71,17,72,21,"RIGHTCURLYBRACKET"],[71,34,72,12],[72,0,73,9],[74,0,75,8],[74,13,75,15],[75,0,76,12,"type"],[75,8,76,12,"type"],[75,12,76,16],[75,14,76,18],[75,21,75,15],[76,0,77,12,"loc"],[76,8,77,12,"loc"],[76,11,77,15],[76,13,77,17],[76,18,77,22,"getLocation"],[76,29,77,17],[76,30,77,34,"start"],[76,35,77,17],[76,37,77,41],[76,42,77,46,"scanner"],[76,49,77,41],[76,50,77,54,"tokenStart"],[76,60,77,17],[76,61,75,15],[77,0,78,12,"children"],[77,8,78,12,"children"],[77,16,78,20],[77,18,78,22,"children"],[78,0,75,15],[78,7,75,8],[79,0,80,5],[79,5,34,17],[80,0,81,4,"generate"],[80,4,81,4,"generate"],[80,12,81,12],[80,14,81,14],[80,32,81,23,"node"],[80,36,81,14],[80,38,81,29],[81,0,82,8],[81,11,82,13,"chunk"],[81,16,82,8],[81,17,82,19],[81,20,82,8],[82,0,83,8],[82,11,83,13,"children"],[82,19,83,8],[82,20,83,22,"node"],[82,24,83,8],[82,26,83,28],[82,36,83,37,"prev"],[82,40,83,28],[82,42,83,43],[83,0,84,12],[83,12,84,16,"prev"],[83,16,84,20],[83,17,84,21,"type"],[83,21,84,16],[83,26,84,30],[83,39,84,12],[83,41,84,45],[84,0,85,16],[84,15,85,21,"chunk"],[84,20,85,16],[84,21,85,27],[84,24,85,16],[85,0,86,13],[86,0,87,9],[86,7,83,8],[87,0,88,8],[87,11,88,13,"chunk"],[87,16,88,8],[87,17,88,19],[87,20,88,8],[88,0,89,5],[88,5,34,17],[89,0,90,4,"walkContext"],[89,4,90,4,"walkContext"],[89,15,90,15],[89,17,90,17],[90,0,34,17],[90,3,34,0]],"functionMap":{"names":["<global>","consumeRaw","consumeRule","consumeRawDeclaration","consumeDeclaration","module.exports.parse","module.exports.generate","children$argument_1"],"mappings":"AAA;ACU;CDE;AEC;CFE;AGC;CHE;AIC;CJY;WKW;KLqC;cMC;4BCE;SDI;KNE"}},"type":"js/module"}]}