{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":17},"end":{"line":4,"column":32}},{"start":{"line":5,"column":16},"end":{"line":5,"column":30}},{"start":{"line":6,"column":23},"end":{"line":6,"column":44}},{"start":{"line":7,"column":12},"end":{"line":7,"column":22}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var WhiteSpace = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.WhiteSpace;\n\n  var Semicolon = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Semicolon;\n\n  var LeftCurlyBracket = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.LeftCurlyBracket;\n\n  var Delim = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Delim;\n\n  var EXCLAMATIONMARK = 0x0021;\n\n  function getOffsetExcludeWS() {\n    if (this.scanner.tokenIndex > 0) {\n      if (this.scanner.lookupType(-1) === WhiteSpace) {\n        return this.scanner.tokenIndex > 1 ? this.scanner.getTokenStart(this.scanner.tokenIndex - 1) : this.scanner.firstCharOffset;\n      }\n    }\n\n    return this.scanner.tokenStart;\n  }\n\n  function balanceEnd() {\n    return 0;\n  }\n\n  function leftCurlyBracket(tokenType) {\n    return tokenType === LeftCurlyBracket ? 1 : 0;\n  }\n\n  function leftCurlyBracketOrSemicolon(tokenType) {\n    return tokenType === LeftCurlyBracket || tokenType === Semicolon ? 1 : 0;\n  }\n\n  function exclamationMarkOrSemicolon(tokenType, source, offset) {\n    if (tokenType === Delim && source.charCodeAt(offset) === EXCLAMATIONMARK) {\n      return 1;\n    }\n\n    return tokenType === Semicolon ? 1 : 0;\n  }\n\n  function semicolonIncluded(tokenType) {\n    return tokenType === Semicolon ? 2 : 0;\n  }\n\n  module.exports = {\n    name: 'Raw',\n    structure: {\n      value: String\n    },\n    parse: function parse(startToken, mode, excludeWhiteSpace) {\n      var startOffset = this.scanner.getTokenStart(startToken);\n      var endOffset;\n      this.scanner.skip(this.scanner.getRawLength(startToken, mode || balanceEnd));\n\n      if (excludeWhiteSpace && this.scanner.tokenStart > startOffset) {\n        endOffset = getOffsetExcludeWS.call(this);\n      } else {\n        endOffset = this.scanner.tokenStart;\n      }\n\n      return {\n        type: 'Raw',\n        loc: this.getLocation(startOffset, endOffset),\n        value: this.scanner.source.substring(startOffset, endOffset)\n      };\n    },\n    generate: function generate(node) {\n      this.chunk(node.value);\n    },\n    mode: {\n      default: balanceEnd,\n      leftCurlyBracket: leftCurlyBracket,\n      leftCurlyBracketOrSemicolon: leftCurlyBracketOrSemicolon,\n      exclamationMarkOrSemicolon: exclamationMarkOrSemicolon,\n      semicolonIncluded: semicolonIncluded\n    }\n  };\n});","lineCount":79,"map":[[2,0,4,0],[2,6,4,4,"WhiteSpace"],[2,16,4,14],[2,19,4,17],[2,74,4,22,"WhiteSpace"],[2,84,4,0],[4,0,5,0],[4,6,5,4,"Semicolon"],[4,15,5,13],[4,18,5,16],[4,73,5,21,"Semicolon"],[4,82,5,0],[6,0,6,0],[6,6,6,4,"LeftCurlyBracket"],[6,22,6,20],[6,25,6,23],[6,80,6,28,"LeftCurlyBracket"],[6,96,6,0],[8,0,7,0],[8,6,7,4,"Delim"],[8,11,7,9],[8,14,7,12],[8,69,7,17,"Delim"],[8,74,7,0],[10,0,8,0],[10,6,8,4,"EXCLAMATIONMARK"],[10,21,8,19],[10,24,8,22],[10,30,8,0],[12,0,10,0],[12,11,10,9,"getOffsetExcludeWS"],[12,29,10,0],[12,32,10,30],[13,0,11,4],[13,8,11,8],[13,13,11,13,"scanner"],[13,20,11,8],[13,21,11,21,"tokenIndex"],[13,31,11,8],[13,34,11,34],[13,35,11,4],[13,37,11,37],[14,0,12,8],[14,10,12,12],[14,15,12,17,"scanner"],[14,22,12,12],[14,23,12,25,"lookupType"],[14,33,12,12],[14,34,12,36],[14,35,12,37],[14,36,12,12],[14,42,12,44,"WhiteSpace"],[14,52,12,8],[14,54,12,56],[15,0,13,12],[15,15,13,19],[15,20,13,24,"scanner"],[15,27,13,19],[15,28,13,32,"tokenIndex"],[15,38,13,19],[15,41,13,45],[15,42,13,19],[15,45,14,18],[15,50,14,23,"scanner"],[15,57,14,18],[15,58,14,31,"getTokenStart"],[15,71,14,18],[15,72,14,45],[15,77,14,50,"scanner"],[15,84,14,45],[15,85,14,58,"tokenIndex"],[15,95,14,45],[15,98,14,71],[15,99,14,18],[15,100,13,19],[15,103,15,18],[15,108,15,23,"scanner"],[15,115,15,18],[15,116,15,31,"firstCharOffset"],[15,131,13,12],[16,0,16,9],[17,0,17,5],[19,0,19,4],[19,11,19,11],[19,16,19,16,"scanner"],[19,23,19,11],[19,24,19,24,"tokenStart"],[19,34,19,4],[20,0,20,1],[22,0,23,0],[22,11,23,9,"balanceEnd"],[22,21,23,0],[22,24,23,22],[23,0,24,4],[23,11,24,11],[23,12,24,4],[24,0,25,1],[26,0,28,0],[26,11,28,9,"leftCurlyBracket"],[26,27,28,0],[26,28,28,26,"tokenType"],[26,37,28,0],[26,39,28,37],[27,0,29,4],[27,11,29,11,"tokenType"],[27,20,29,20],[27,25,29,25,"LeftCurlyBracket"],[27,41,29,11],[27,44,29,44],[27,45,29,11],[27,48,29,48],[27,49,29,4],[28,0,30,1],[30,0,33,0],[30,11,33,9,"leftCurlyBracketOrSemicolon"],[30,38,33,0],[30,39,33,37,"tokenType"],[30,48,33,0],[30,50,33,48],[31,0,34,4],[31,11,34,11,"tokenType"],[31,20,34,20],[31,25,34,25,"LeftCurlyBracket"],[31,41,34,11],[31,45,34,45,"tokenType"],[31,54,34,54],[31,59,34,59,"Semicolon"],[31,68,34,11],[31,71,34,71],[31,72,34,11],[31,75,34,75],[31,76,34,4],[32,0,35,1],[34,0,38,0],[34,11,38,9,"exclamationMarkOrSemicolon"],[34,37,38,0],[34,38,38,36,"tokenType"],[34,47,38,0],[34,49,38,47,"source"],[34,55,38,0],[34,57,38,55,"offset"],[34,63,38,0],[34,65,38,63],[35,0,39,4],[35,8,39,8,"tokenType"],[35,17,39,17],[35,22,39,22,"Delim"],[35,27,39,8],[35,31,39,31,"source"],[35,37,39,37],[35,38,39,38,"charCodeAt"],[35,48,39,31],[35,49,39,49,"offset"],[35,55,39,31],[35,61,39,61,"EXCLAMATIONMARK"],[35,76,39,4],[35,78,39,78],[36,0,40,8],[36,13,40,15],[36,14,40,8],[37,0,41,5],[39,0,43,4],[39,11,43,11,"tokenType"],[39,20,43,20],[39,25,43,25,"Semicolon"],[39,34,43,11],[39,37,43,37],[39,38,43,11],[39,41,43,41],[39,42,43,4],[40,0,44,1],[42,0,47,0],[42,11,47,9,"semicolonIncluded"],[42,28,47,0],[42,29,47,27,"tokenType"],[42,38,47,0],[42,40,47,38],[43,0,48,4],[43,11,48,11,"tokenType"],[43,20,48,20],[43,25,48,25,"Semicolon"],[43,34,48,11],[43,37,48,37],[43,38,48,11],[43,41,48,41],[43,42,48,4],[44,0,49,1],[46,0,51,0,"module"],[46,2,51,0,"module"],[46,8,51,6],[46,9,51,7,"exports"],[46,16,51,0],[46,19,51,17],[47,0,52,4,"name"],[47,4,52,4,"name"],[47,8,52,8],[47,10,52,10],[47,15,51,17],[48,0,53,4,"structure"],[48,4,53,4,"structure"],[48,13,53,13],[48,15,53,15],[49,0,54,8,"value"],[49,6,54,8,"value"],[49,11,54,13],[49,13,54,15,"String"],[50,0,53,15],[50,5,51,17],[51,0,56,4,"parse"],[51,4,56,4,"parse"],[51,9,56,9],[51,11,56,11],[51,26,56,20,"startToken"],[51,36,56,11],[51,38,56,32,"mode"],[51,42,56,11],[51,44,56,38,"excludeWhiteSpace"],[51,61,56,11],[51,63,56,57],[52,0,57,8],[52,10,57,12,"startOffset"],[52,21,57,23],[52,24,57,26],[52,29,57,31,"scanner"],[52,36,57,26],[52,37,57,39,"getTokenStart"],[52,50,57,26],[52,51,57,53,"startToken"],[52,61,57,26],[52,62,57,8],[53,0,58,8],[53,10,58,12,"endOffset"],[53,19,58,8],[54,0,60,8],[54,11,60,13,"scanner"],[54,18,60,8],[54,19,60,21,"skip"],[54,23,60,8],[54,24,61,12],[54,29,61,17,"scanner"],[54,36,61,12],[54,37,61,25,"getRawLength"],[54,49,61,12],[54,50,61,38,"startToken"],[54,60,61,12],[54,62,61,50,"mode"],[54,66,61,54],[54,70,61,58,"balanceEnd"],[54,80,61,12],[54,81,60,8],[56,0,64,8],[56,10,64,12,"excludeWhiteSpace"],[56,27,64,29],[56,31,64,33],[56,36,64,38,"scanner"],[56,43,64,33],[56,44,64,46,"tokenStart"],[56,54,64,33],[56,57,64,59,"startOffset"],[56,68,64,8],[56,70,64,72],[57,0,65,12,"endOffset"],[57,8,65,12,"endOffset"],[57,17,65,21],[57,20,65,24,"getOffsetExcludeWS"],[57,38,65,42],[57,39,65,43,"call"],[57,43,65,24],[57,44,65,48],[57,48,65,24],[57,49,65,12],[58,0,66,9],[58,7,64,8],[58,13,66,15],[59,0,67,12,"endOffset"],[59,8,67,12,"endOffset"],[59,17,67,21],[59,20,67,24],[59,25,67,29,"scanner"],[59,32,67,24],[59,33,67,37,"tokenStart"],[59,43,67,12],[60,0,68,9],[62,0,70,8],[62,13,70,15],[63,0,71,12,"type"],[63,8,71,12,"type"],[63,12,71,16],[63,14,71,18],[63,19,70,15],[64,0,72,12,"loc"],[64,8,72,12,"loc"],[64,11,72,15],[64,13,72,17],[64,18,72,22,"getLocation"],[64,29,72,17],[64,30,72,34,"startOffset"],[64,41,72,17],[64,43,72,47,"endOffset"],[64,52,72,17],[64,53,70,15],[65,0,73,12,"value"],[65,8,73,12,"value"],[65,13,73,17],[65,15,73,19],[65,20,73,24,"scanner"],[65,27,73,19],[65,28,73,32,"source"],[65,34,73,19],[65,35,73,39,"substring"],[65,44,73,19],[65,45,73,49,"startOffset"],[65,56,73,19],[65,58,73,62,"endOffset"],[65,67,73,19],[66,0,70,15],[66,7,70,8],[67,0,75,5],[67,5,51,17],[68,0,76,4,"generate"],[68,4,76,4,"generate"],[68,12,76,12],[68,14,76,14],[68,32,76,23,"node"],[68,36,76,14],[68,38,76,29],[69,0,77,8],[69,11,77,13,"chunk"],[69,16,77,8],[69,17,77,19,"node"],[69,21,77,23],[69,22,77,24,"value"],[69,27,77,8],[70,0,78,5],[70,5,51,17],[71,0,80,4,"mode"],[71,4,80,4,"mode"],[71,8,80,8],[71,10,80,10],[72,0,81,8,"default"],[72,6,81,8,"default"],[72,13,81,15],[72,15,81,17,"balanceEnd"],[72,25,80,10],[73,0,82,8,"leftCurlyBracket"],[73,6,82,8,"leftCurlyBracket"],[73,22,82,24],[73,24,82,26,"leftCurlyBracket"],[73,40,80,10],[74,0,83,8,"leftCurlyBracketOrSemicolon"],[74,6,83,8,"leftCurlyBracketOrSemicolon"],[74,33,83,35],[74,35,83,37,"leftCurlyBracketOrSemicolon"],[74,62,80,10],[75,0,84,8,"exclamationMarkOrSemicolon"],[75,6,84,8,"exclamationMarkOrSemicolon"],[75,32,84,34],[75,34,84,36,"exclamationMarkOrSemicolon"],[75,60,80,10],[76,0,85,8,"semicolonIncluded"],[76,6,85,8,"semicolonIncluded"],[76,23,85,25],[76,25,85,27,"semicolonIncluded"],[77,0,80,10],[78,0,51,17],[78,3,51,0]],"functionMap":{"names":["<global>","getOffsetExcludeWS","balanceEnd","leftCurlyBracket","leftCurlyBracketOrSemicolon","exclamationMarkOrSemicolon","semicolonIncluded","module.exports.parse","module.exports.generate"],"mappings":"AAA;ACS;CDU;AEG;CFE;AGG;CHE;AIG;CJE;AKG;CLM;AMG;CNE;WOO;KPmB;cQC;KRE"}},"type":"js/module"}]}