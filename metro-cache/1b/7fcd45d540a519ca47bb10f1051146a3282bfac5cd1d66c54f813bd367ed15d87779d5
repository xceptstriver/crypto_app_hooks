{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":17},"end":{"line":4,"column":32}},{"start":{"line":5,"column":14},"end":{"line":5,"column":26}},{"start":{"line":6,"column":16},"end":{"line":6,"column":30}}]}},{"name":"./Raw","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":32},"end":{"line":9,"column":57}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var WHITESPACE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.WhiteSpace;\n\n  var COMMENT = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Comment;\n\n  var SEMICOLON = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Semicolon;\n\n  function consumeRaw(startToken) {\n    return this.Raw(startToken, _$$_REQUIRE(_dependencyMap[1], \"./Raw\").mode.semicolonIncluded, true);\n  }\n\n  module.exports = {\n    name: 'DeclarationList',\n    structure: {\n      children: [['Declaration']]\n    },\n    parse: function parse() {\n      var children = this.createList();\n\n      scan: while (!this.scanner.eof) {\n        switch (this.scanner.tokenType) {\n          case WHITESPACE:\n          case COMMENT:\n          case SEMICOLON:\n            this.scanner.next();\n            break;\n\n          default:\n            children.push(this.parseWithFallback(this.Declaration, consumeRaw));\n        }\n      }\n\n      return {\n        type: 'DeclarationList',\n        loc: this.getLocationFromList(children),\n        children: children\n      };\n    },\n    generate: function generate(node) {\n      this.children(node, function (prev) {\n        if (prev.type === 'Declaration') {\n          this.chunk(';');\n        }\n      });\n    }\n  };\n});","lineCount":47,"map":[[2,0,4,0],[2,6,4,4,"WHITESPACE"],[2,16,4,14],[2,19,4,17],[2,74,4,22,"WhiteSpace"],[2,84,4,0],[4,0,5,0],[4,6,5,4,"COMMENT"],[4,13,5,11],[4,16,5,14],[4,71,5,19,"Comment"],[4,78,5,0],[6,0,6,0],[6,6,6,4,"SEMICOLON"],[6,15,6,13],[6,18,6,16],[6,73,6,21,"Semicolon"],[6,82,6,0],[8,0,8,0],[8,11,8,9,"consumeRaw"],[8,21,8,0],[8,22,8,20,"startToken"],[8,32,8,0],[8,34,8,32],[9,0,9,4],[9,11,9,11],[9,16,9,16,"Raw"],[9,19,9,11],[9,20,9,20,"startToken"],[9,30,9,11],[9,32,9,32],[9,77,9,40,"semicolonIncluded"],[9,94,9,11],[9,96,9,59],[9,100,9,11],[9,101,9,4],[10,0,10,1],[12,0,12,0,"module"],[12,2,12,0,"module"],[12,8,12,6],[12,9,12,7,"exports"],[12,16,12,0],[12,19,12,17],[13,0,13,4,"name"],[13,4,13,4,"name"],[13,8,13,8],[13,10,13,10],[13,27,12,17],[14,0,14,4,"structure"],[14,4,14,4,"structure"],[14,13,14,13],[14,15,14,15],[15,0,15,8,"children"],[15,6,15,8,"children"],[15,14,15,16],[15,16,15,18],[15,17,15,19],[15,18,16,12],[15,31,15,19],[15,32,15,18],[16,0,14,15],[16,5,12,17],[17,0,19,4,"parse"],[17,4,19,4,"parse"],[17,9,19,9],[17,11,19,11],[17,28,19,22],[18,0,20,8],[18,10,20,12,"children"],[18,18,20,20],[18,21,20,23],[18,26,20,28,"createList"],[18,36,20,23],[18,38,20,8],[20,0,22,8,"scan"],[20,6,22,8,"scan"],[20,10,22,12],[20,12,23,8],[20,19,23,15],[20,20,23,16],[20,25,23,21,"scanner"],[20,32,23,16],[20,33,23,29,"eof"],[20,36,23,8],[20,38,23,34],[21,0,24,12],[21,16,24,20],[21,21,24,25,"scanner"],[21,28,24,20],[21,29,24,33,"tokenType"],[21,38,24,12],[22,0,25,16],[22,15,25,21,"WHITESPACE"],[22,25,25,16],[23,0,26,16],[23,15,26,21,"COMMENT"],[23,22,26,16],[24,0,27,16],[24,15,27,21,"SEMICOLON"],[24,24,27,16],[25,0,28,20],[25,17,28,25,"scanner"],[25,24,28,20],[25,25,28,33,"next"],[25,29,28,20],[26,0,29,20],[28,0,31,16],[29,0,32,20,"children"],[29,12,32,20,"children"],[29,20,32,28],[29,21,32,29,"push"],[29,25,32,20],[29,26,32,34],[29,31,32,39,"parseWithFallback"],[29,48,32,34],[29,49,32,57],[29,54,32,62,"Declaration"],[29,65,32,34],[29,67,32,75,"consumeRaw"],[29,77,32,34],[29,78,32,20],[30,0,24,12],[31,0,34,9],[33,0,36,8],[33,13,36,15],[34,0,37,12,"type"],[34,8,37,12,"type"],[34,12,37,16],[34,14,37,18],[34,31,36,15],[35,0,38,12,"loc"],[35,8,38,12,"loc"],[35,11,38,15],[35,13,38,17],[35,18,38,22,"getLocationFromList"],[35,37,38,17],[35,38,38,42,"children"],[35,46,38,17],[35,47,36,15],[36,0,39,12,"children"],[36,8,39,12,"children"],[36,16,39,20],[36,18,39,22,"children"],[37,0,36,15],[37,7,36,8],[38,0,41,5],[38,5,12,17],[39,0,42,4,"generate"],[39,4,42,4,"generate"],[39,12,42,12],[39,14,42,14],[39,32,42,23,"node"],[39,36,42,14],[39,38,42,29],[40,0,43,8],[40,11,43,13,"children"],[40,19,43,8],[40,20,43,22,"node"],[40,24,43,8],[40,26,43,28],[40,36,43,37,"prev"],[40,40,43,28],[40,42,43,43],[41,0,44,12],[41,12,44,16,"prev"],[41,16,44,20],[41,17,44,21,"type"],[41,21,44,16],[41,26,44,30],[41,39,44,12],[41,41,44,45],[42,0,45,16],[42,15,45,21,"chunk"],[42,20,45,16],[42,21,45,27],[42,24,45,16],[43,0,46,13],[44,0,47,9],[44,7,43,8],[45,0,48,5],[46,0,12,17],[46,3,12,0]],"functionMap":{"names":["<global>","consumeRaw","module.exports.parse","module.exports.generate","children$argument_1"],"mappings":"AAA;ACO;CDE;WES;KFsB;cGC;4BCC;SDI;KHC"}},"type":"js/module"}]}