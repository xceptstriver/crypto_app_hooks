{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":17},"end":{"line":5,"column":32}},{"start":{"line":6,"column":14},"end":{"line":6,"column":26}},{"start":{"line":7,"column":12},"end":{"line":7,"column":22}},{"start":{"line":8,"column":13},"end":{"line":8,"column":24}},{"start":{"line":9,"column":16},"end":{"line":9,"column":30}},{"start":{"line":28,"column":13},"end":{"line":28,"column":57}},{"start":{"line":39,"column":9},"end":{"line":39,"column":77}},{"start":{"line":123,"column":53},"end":{"line":123,"column":119}},{"start":{"line":217,"column":21},"end":{"line":217,"column":63}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var WHITESPACE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.WhiteSpace;\n\n  var COMMENT = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Comment;\n\n  var IDENT = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Ident;\n\n  var NUMBER = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Number;\n\n  var DIMENSION = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Dimension;\n\n  var PLUSSIGN = 0x002B;\n  var HYPHENMINUS = 0x002D;\n  var N = 0x006E;\n  var DISALLOW_SIGN = true;\n  var ALLOW_SIGN = false;\n\n  function checkInteger(offset, disallowSign) {\n    var pos = this.scanner.tokenStart + offset;\n    var code = this.scanner.source.charCodeAt(pos);\n\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\n      if (disallowSign) {\n        this.error('Number sign is not allowed');\n      }\n\n      pos++;\n    }\n\n    for (; pos < this.scanner.tokenEnd; pos++) {\n      if (!_$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").isDigit(this.scanner.source.charCodeAt(pos))) {\n        this.error('Integer is expected', pos);\n      }\n    }\n  }\n\n  function checkTokenIsInteger(disallowSign) {\n    return checkInteger.call(this, 0, disallowSign);\n  }\n\n  function expectCharCode(offset, code) {\n    if (!_$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").cmpChar(this.scanner.source, this.scanner.tokenStart + offset, code)) {\n      var msg = '';\n\n      switch (code) {\n        case N:\n          msg = 'N is expected';\n          break;\n\n        case HYPHENMINUS:\n          msg = 'HyphenMinus is expected';\n          break;\n      }\n\n      this.error(msg, this.scanner.tokenStart + offset);\n    }\n  }\n\n  function consumeB() {\n    var offset = 0;\n    var sign = 0;\n    var type = this.scanner.tokenType;\n\n    while (type === WHITESPACE || type === COMMENT) {\n      type = this.scanner.lookupType(++offset);\n    }\n\n    if (type !== NUMBER) {\n      if (this.scanner.isDelim(PLUSSIGN, offset) || this.scanner.isDelim(HYPHENMINUS, offset)) {\n        sign = this.scanner.isDelim(PLUSSIGN, offset) ? PLUSSIGN : HYPHENMINUS;\n\n        do {\n          type = this.scanner.lookupType(++offset);\n        } while (type === WHITESPACE || type === COMMENT);\n\n        if (type !== NUMBER) {\n          this.scanner.skip(offset);\n          checkTokenIsInteger.call(this, DISALLOW_SIGN);\n        }\n      } else {\n        return null;\n      }\n    }\n\n    if (offset > 0) {\n      this.scanner.skip(offset);\n    }\n\n    if (sign === 0) {\n      type = this.scanner.source.charCodeAt(this.scanner.tokenStart);\n\n      if (type !== PLUSSIGN && type !== HYPHENMINUS) {\n        this.error('Number sign is expected');\n      }\n    }\n\n    checkTokenIsInteger.call(this, sign !== 0);\n    return sign === HYPHENMINUS ? '-' + this.consume(NUMBER) : this.consume(NUMBER);\n  }\n\n  module.exports = {\n    name: 'AnPlusB',\n    structure: {\n      a: [String, null],\n      b: [String, null]\n    },\n    parse: function parse() {\n      var start = this.scanner.tokenStart;\n      var a = null;\n      var b = null;\n\n      if (this.scanner.tokenType === NUMBER) {\n        checkTokenIsInteger.call(this, ALLOW_SIGN);\n        b = this.consume(NUMBER);\n      } else if (this.scanner.tokenType === IDENT && _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").cmpChar(this.scanner.source, this.scanner.tokenStart, HYPHENMINUS)) {\n        a = '-1';\n        expectCharCode.call(this, 1, N);\n\n        switch (this.scanner.getTokenLength()) {\n          case 2:\n            this.scanner.next();\n            b = consumeB.call(this);\n            break;\n\n          case 3:\n            expectCharCode.call(this, 2, HYPHENMINUS);\n            this.scanner.next();\n            this.scanner.skipSC();\n            checkTokenIsInteger.call(this, DISALLOW_SIGN);\n            b = '-' + this.consume(NUMBER);\n            break;\n\n          default:\n            expectCharCode.call(this, 2, HYPHENMINUS);\n            checkInteger.call(this, 3, DISALLOW_SIGN);\n            this.scanner.next();\n            b = this.scanner.substrToCursor(start + 2);\n        }\n      } else if (this.scanner.tokenType === IDENT || this.scanner.isDelim(PLUSSIGN) && this.scanner.lookupType(1) === IDENT) {\n        var sign = 0;\n        a = '1';\n\n        if (this.scanner.isDelim(PLUSSIGN)) {\n          sign = 1;\n          this.scanner.next();\n        }\n\n        expectCharCode.call(this, 0, N);\n\n        switch (this.scanner.getTokenLength()) {\n          case 1:\n            this.scanner.next();\n            b = consumeB.call(this);\n            break;\n\n          case 2:\n            expectCharCode.call(this, 1, HYPHENMINUS);\n            this.scanner.next();\n            this.scanner.skipSC();\n            checkTokenIsInteger.call(this, DISALLOW_SIGN);\n            b = '-' + this.consume(NUMBER);\n            break;\n\n          default:\n            expectCharCode.call(this, 1, HYPHENMINUS);\n            checkInteger.call(this, 2, DISALLOW_SIGN);\n            this.scanner.next();\n            b = this.scanner.substrToCursor(start + sign + 1);\n        }\n      } else if (this.scanner.tokenType === DIMENSION) {\n        var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\n        var sign = code === PLUSSIGN || code === HYPHENMINUS;\n\n        for (var i = this.scanner.tokenStart + sign; i < this.scanner.tokenEnd; i++) {\n          if (!_$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").isDigit(this.scanner.source.charCodeAt(i))) {\n            break;\n          }\n        }\n\n        if (i === this.scanner.tokenStart + sign) {\n          this.error('Integer is expected', this.scanner.tokenStart + sign);\n        }\n\n        expectCharCode.call(this, i - this.scanner.tokenStart, N);\n        a = this.scanner.source.substring(start, i);\n\n        if (i + 1 === this.scanner.tokenEnd) {\n          this.scanner.next();\n          b = consumeB.call(this);\n        } else {\n          expectCharCode.call(this, i - this.scanner.tokenStart + 1, HYPHENMINUS);\n\n          if (i + 2 === this.scanner.tokenEnd) {\n            this.scanner.next();\n            this.scanner.skipSC();\n            checkTokenIsInteger.call(this, DISALLOW_SIGN);\n            b = '-' + this.consume(NUMBER);\n          } else {\n            checkInteger.call(this, i - this.scanner.tokenStart + 2, DISALLOW_SIGN);\n            this.scanner.next();\n            b = this.scanner.substrToCursor(i + 1);\n          }\n        }\n      } else {\n        this.error();\n      }\n\n      if (a !== null && a.charCodeAt(0) === PLUSSIGN) {\n        a = a.substr(1);\n      }\n\n      if (b !== null && b.charCodeAt(0) === PLUSSIGN) {\n        b = b.substr(1);\n      }\n\n      return {\n        type: 'AnPlusB',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        a: a,\n        b: b\n      };\n    },\n    generate: function generate(node) {\n      var a = node.a !== null && node.a !== undefined;\n      var b = node.b !== null && node.b !== undefined;\n\n      if (a) {\n        this.chunk(node.a === '+1' ? '+n' : node.a === '1' ? 'n' : node.a === '-1' ? '-n' : node.a + 'n');\n\n        if (b) {\n          b = String(node.b);\n\n          if (b.charAt(0) === '-' || b.charAt(0) === '+') {\n            this.chunk(b.charAt(0));\n            this.chunk(b.substr(1));\n          } else {\n            this.chunk('+');\n            this.chunk(b);\n          }\n        }\n      } else {\n        this.chunk(String(node.b));\n      }\n    }\n  };\n});","lineCount":246,"map":[[2,0,5,0],[2,6,5,4,"WHITESPACE"],[2,16,5,14],[2,19,5,17],[2,74,5,22,"WhiteSpace"],[2,84,5,0],[4,0,6,0],[4,6,6,4,"COMMENT"],[4,13,6,11],[4,16,6,14],[4,71,6,19,"Comment"],[4,78,6,0],[6,0,7,0],[6,6,7,4,"IDENT"],[6,11,7,9],[6,14,7,12],[6,69,7,17,"Ident"],[6,74,7,0],[8,0,8,0],[8,6,8,4,"NUMBER"],[8,12,8,10],[8,15,8,13],[8,70,8,18,"Number"],[8,76,8,0],[10,0,9,0],[10,6,9,4,"DIMENSION"],[10,15,9,13],[10,18,9,16],[10,73,9,21,"Dimension"],[10,82,9,0],[12,0,10,0],[12,6,10,4,"PLUSSIGN"],[12,14,10,12],[12,17,10,15],[12,23,10,0],[13,0,11,0],[13,6,11,4,"HYPHENMINUS"],[13,17,11,15],[13,20,11,18],[13,26,11,0],[14,0,12,0],[14,6,12,4,"N"],[14,7,12,5],[14,10,12,8],[14,16,12,0],[15,0,13,0],[15,6,13,4,"DISALLOW_SIGN"],[15,19,13,17],[15,22,13,20],[15,26,13,0],[16,0,14,0],[16,6,14,4,"ALLOW_SIGN"],[16,16,14,14],[16,19,14,17],[16,24,14,0],[18,0,16,0],[18,11,16,9,"checkInteger"],[18,23,16,0],[18,24,16,22,"offset"],[18,30,16,0],[18,32,16,30,"disallowSign"],[18,44,16,0],[18,46,16,44],[19,0,17,4],[19,8,17,8,"pos"],[19,11,17,11],[19,14,17,14],[19,19,17,19,"scanner"],[19,26,17,14],[19,27,17,27,"tokenStart"],[19,37,17,14],[19,40,17,40,"offset"],[19,46,17,4],[20,0,18,4],[20,8,18,8,"code"],[20,12,18,12],[20,15,18,15],[20,20,18,20,"scanner"],[20,27,18,15],[20,28,18,28,"source"],[20,34,18,15],[20,35,18,35,"charCodeAt"],[20,45,18,15],[20,46,18,46,"pos"],[20,49,18,15],[20,50,18,4],[22,0,20,4],[22,8,20,8,"code"],[22,12,20,12],[22,17,20,17,"PLUSSIGN"],[22,25,20,8],[22,29,20,29,"code"],[22,33,20,33],[22,38,20,38,"HYPHENMINUS"],[22,49,20,4],[22,51,20,51],[23,0,21,8],[23,10,21,12,"disallowSign"],[23,22,21,8],[23,24,21,26],[24,0,22,12],[24,13,22,17,"error"],[24,18,22,12],[24,19,22,23],[24,47,22,12],[25,0,23,9],[27,0,24,8,"pos"],[27,6,24,8,"pos"],[27,9,24,11],[28,0,25,5],[30,0,27,4],[30,11,27,11,"pos"],[30,14,27,14],[30,17,27,17],[30,22,27,22,"scanner"],[30,29,27,17],[30,30,27,30,"tokenEnd"],[30,38,27,4],[30,40,27,40,"pos"],[30,43,27,43],[30,45,27,4],[30,47,27,47],[31,0,28,8],[31,10,28,12],[31,11,28,13],[31,69,28,21],[31,74,28,26,"scanner"],[31,81,28,21],[31,82,28,34,"source"],[31,88,28,21],[31,89,28,41,"charCodeAt"],[31,99,28,21],[31,100,28,52,"pos"],[31,103,28,21],[31,104,28,13],[31,105,28,8],[31,107,28,59],[32,0,29,12],[32,13,29,17,"error"],[32,18,29,12],[32,19,29,23],[32,40,29,12],[32,42,29,46,"pos"],[32,45,29,12],[33,0,30,9],[34,0,31,5],[35,0,32,1],[37,0,34,0],[37,11,34,9,"checkTokenIsInteger"],[37,30,34,0],[37,31,34,29,"disallowSign"],[37,43,34,0],[37,45,34,43],[38,0,35,4],[38,11,35,11,"checkInteger"],[38,23,35,23],[38,24,35,24,"call"],[38,28,35,11],[38,29,35,29],[38,33,35,11],[38,35,35,35],[38,36,35,11],[38,38,35,38,"disallowSign"],[38,50,35,11],[38,51,35,4],[39,0,36,1],[41,0,38,0],[41,11,38,9,"expectCharCode"],[41,25,38,0],[41,26,38,24,"offset"],[41,32,38,0],[41,34,38,32,"code"],[41,38,38,0],[41,40,38,38],[42,0,39,4],[42,8,39,8],[42,9,39,9],[42,67,39,17],[42,72,39,22,"scanner"],[42,79,39,17],[42,80,39,30,"source"],[42,86,39,9],[42,88,39,38],[42,93,39,43,"scanner"],[42,100,39,38],[42,101,39,51,"tokenStart"],[42,111,39,38],[42,114,39,64,"offset"],[42,120,39,9],[42,122,39,72,"code"],[42,126,39,9],[42,127,39,4],[42,129,39,79],[43,0,40,8],[43,10,40,12,"msg"],[43,13,40,15],[43,16,40,18],[43,18,40,8],[45,0,42,8],[45,14,42,16,"code"],[45,18,42,8],[46,0,43,12],[46,13,43,17,"N"],[46,14,43,12],[47,0,44,16,"msg"],[47,10,44,16,"msg"],[47,13,44,19],[47,16,44,22],[47,31,44,16],[48,0,45,16],[50,0,46,12],[50,13,46,17,"HYPHENMINUS"],[50,24,46,12],[51,0,47,16,"msg"],[51,10,47,16,"msg"],[51,13,47,19],[51,16,47,22],[51,41,47,16],[52,0,48,16],[53,0,42,8],[55,0,51,8],[55,11,51,13,"error"],[55,16,51,8],[55,17,51,19,"msg"],[55,20,51,8],[55,22,51,24],[55,27,51,29,"scanner"],[55,34,51,24],[55,35,51,37,"tokenStart"],[55,45,51,24],[55,48,51,50,"offset"],[55,54,51,8],[56,0,52,5],[57,0,53,1],[59,0,57,0],[59,11,57,9,"consumeB"],[59,19,57,0],[59,22,57,20],[60,0,58,4],[60,8,58,8,"offset"],[60,14,58,14],[60,17,58,17],[60,18,58,4],[61,0,59,4],[61,8,59,8,"sign"],[61,12,59,12],[61,15,59,15],[61,16,59,4],[62,0,60,4],[62,8,60,8,"type"],[62,12,60,12],[62,15,60,15],[62,20,60,20,"scanner"],[62,27,60,15],[62,28,60,28,"tokenType"],[62,37,60,4],[64,0,62,4],[64,11,62,11,"type"],[64,15,62,15],[64,20,62,20,"WHITESPACE"],[64,30,62,11],[64,34,62,34,"type"],[64,38,62,38],[64,43,62,43,"COMMENT"],[64,50,62,4],[64,52,62,52],[65,0,63,8,"type"],[65,6,63,8,"type"],[65,10,63,12],[65,13,63,15],[65,18,63,20,"scanner"],[65,25,63,15],[65,26,63,28,"lookupType"],[65,36,63,15],[65,37,63,39],[65,39,63,41,"offset"],[65,45,63,15],[65,46,63,8],[66,0,64,5],[68,0,66,4],[68,8,66,8,"type"],[68,12,66,12],[68,17,66,17,"NUMBER"],[68,23,66,4],[68,25,66,25],[69,0,67,8],[69,10,67,12],[69,15,67,17,"scanner"],[69,22,67,12],[69,23,67,25,"isDelim"],[69,30,67,12],[69,31,67,33,"PLUSSIGN"],[69,39,67,12],[69,41,67,43,"offset"],[69,47,67,12],[69,52,68,12],[69,57,68,17,"scanner"],[69,64,68,12],[69,65,68,25,"isDelim"],[69,72,68,12],[69,73,68,33,"HYPHENMINUS"],[69,84,68,12],[69,86,68,46,"offset"],[69,92,68,12],[69,93,67,8],[69,95,68,55],[70,0,69,12,"sign"],[70,8,69,12,"sign"],[70,12,69,16],[70,15,69,19],[70,20,69,24,"scanner"],[70,27,69,19],[70,28,69,32,"isDelim"],[70,35,69,19],[70,36,69,40,"PLUSSIGN"],[70,44,69,19],[70,46,69,50,"offset"],[70,52,69,19],[70,56,69,60,"PLUSSIGN"],[70,64,69,19],[70,67,69,71,"HYPHENMINUS"],[70,78,69,12],[72,0,71,12],[72,11,71,15],[73,0,72,16,"type"],[73,10,72,16,"type"],[73,14,72,20],[73,17,72,23],[73,22,72,28,"scanner"],[73,29,72,23],[73,30,72,36,"lookupType"],[73,40,72,23],[73,41,72,47],[73,43,72,49,"offset"],[73,49,72,23],[73,50,72,16],[74,0,73,13],[74,9,71,12],[74,17,73,21,"type"],[74,21,73,25],[74,26,73,30,"WHITESPACE"],[74,36,73,21],[74,40,73,44,"type"],[74,44,73,48],[74,49,73,53,"COMMENT"],[74,56,71,12],[76,0,75,12],[76,12,75,16,"type"],[76,16,75,20],[76,21,75,25,"NUMBER"],[76,27,75,12],[76,29,75,33],[77,0,76,16],[77,15,76,21,"scanner"],[77,22,76,16],[77,23,76,29,"skip"],[77,27,76,16],[77,28,76,34,"offset"],[77,34,76,16],[78,0,77,16,"checkTokenIsInteger"],[78,10,77,16,"checkTokenIsInteger"],[78,29,77,35],[78,30,77,36,"call"],[78,34,77,16],[78,35,77,41],[78,39,77,16],[78,41,77,47,"DISALLOW_SIGN"],[78,54,77,16],[79,0,78,13],[80,0,79,9],[80,7,67,8],[80,13,79,15],[81,0,80,12],[81,15,80,19],[81,19,80,12],[82,0,81,9],[83,0,82,5],[85,0,84,4],[85,8,84,8,"offset"],[85,14,84,14],[85,17,84,17],[85,18,84,4],[85,20,84,20],[86,0,85,8],[86,11,85,13,"scanner"],[86,18,85,8],[86,19,85,21,"skip"],[86,23,85,8],[86,24,85,26,"offset"],[86,30,85,8],[87,0,86,5],[89,0,88,4],[89,8,88,8,"sign"],[89,12,88,12],[89,17,88,17],[89,18,88,4],[89,20,88,20],[90,0,89,8,"type"],[90,6,89,8,"type"],[90,10,89,12],[90,13,89,15],[90,18,89,20,"scanner"],[90,25,89,15],[90,26,89,28,"source"],[90,32,89,15],[90,33,89,35,"charCodeAt"],[90,43,89,15],[90,44,89,46],[90,49,89,51,"scanner"],[90,56,89,46],[90,57,89,59,"tokenStart"],[90,67,89,15],[90,68,89,8],[92,0,90,8],[92,10,90,12,"type"],[92,14,90,16],[92,19,90,21,"PLUSSIGN"],[92,27,90,12],[92,31,90,33,"type"],[92,35,90,37],[92,40,90,42,"HYPHENMINUS"],[92,51,90,8],[92,53,90,55],[93,0,91,12],[93,13,91,17,"error"],[93,18,91,12],[93,19,91,23],[93,44,91,12],[94,0,92,9],[95,0,93,5],[97,0,95,4,"checkTokenIsInteger"],[97,4,95,4,"checkTokenIsInteger"],[97,23,95,23],[97,24,95,24,"call"],[97,28,95,4],[97,29,95,29],[97,33,95,4],[97,35,95,35,"sign"],[97,39,95,39],[97,44,95,44],[97,45,95,4],[98,0,96,4],[98,11,96,11,"sign"],[98,15,96,15],[98,20,96,20,"HYPHENMINUS"],[98,31,96,11],[98,34,96,34],[98,40,96,40],[98,45,96,45,"consume"],[98,52,96,40],[98,53,96,53,"NUMBER"],[98,59,96,40],[98,60,96,11],[98,63,96,63],[98,68,96,68,"consume"],[98,75,96,63],[98,76,96,76,"NUMBER"],[98,82,96,63],[98,83,96,4],[99,0,97,1],[101,0,100,0,"module"],[101,2,100,0,"module"],[101,8,100,6],[101,9,100,7,"exports"],[101,16,100,0],[101,19,100,17],[102,0,101,4,"name"],[102,4,101,4,"name"],[102,8,101,8],[102,10,101,10],[102,19,100,17],[103,0,102,4,"structure"],[103,4,102,4,"structure"],[103,13,102,13],[103,15,102,15],[104,0,103,8,"a"],[104,6,103,8,"a"],[104,7,103,9],[104,9,103,11],[104,10,103,12,"String"],[104,16,103,11],[104,18,103,20],[104,22,103,11],[104,23,102,15],[105,0,104,8,"b"],[105,6,104,8,"b"],[105,7,104,9],[105,9,104,11],[105,10,104,12,"String"],[105,16,104,11],[105,18,104,20],[105,22,104,11],[106,0,102,15],[106,5,100,17],[107,0,106,4,"parse"],[107,4,106,4,"parse"],[107,9,106,9],[107,11,106,11],[107,28,106,22],[108,0,108,8],[108,10,108,12,"start"],[108,15,108,17],[108,18,108,20],[108,23,108,25,"scanner"],[108,30,108,20],[108,31,108,33,"tokenStart"],[108,41,108,8],[109,0,109,8],[109,10,109,12,"a"],[109,11,109,13],[109,14,109,16],[109,18,109,8],[110,0,110,8],[110,10,110,12,"b"],[110,11,110,13],[110,14,110,16],[110,18,110,8],[112,0,113,8],[112,10,113,12],[112,15,113,17,"scanner"],[112,22,113,12],[112,23,113,25,"tokenType"],[112,32,113,12],[112,37,113,39,"NUMBER"],[112,43,113,8],[112,45,113,47],[113,0,114,12,"checkTokenIsInteger"],[113,8,114,12,"checkTokenIsInteger"],[113,27,114,31],[113,28,114,32,"call"],[113,32,114,12],[113,33,114,37],[113,37,114,12],[113,39,114,43,"ALLOW_SIGN"],[113,49,114,12],[114,0,115,12,"b"],[114,8,115,12,"b"],[114,9,115,13],[114,12,115,16],[114,17,115,21,"consume"],[114,24,115,16],[114,25,115,29,"NUMBER"],[114,31,115,16],[114,32,115,12],[115,0,116,9],[115,7,113,8],[115,13,123,13],[115,17,123,17],[115,22,123,22,"scanner"],[115,29,123,17],[115,30,123,30,"tokenType"],[115,39,123,17],[115,44,123,44,"IDENT"],[115,49,123,17],[115,53,123,53],[115,111,123,61],[115,116,123,66,"scanner"],[115,123,123,61],[115,124,123,74,"source"],[115,130,123,53],[115,132,123,82],[115,137,123,87,"scanner"],[115,144,123,82],[115,145,123,95,"tokenStart"],[115,155,123,53],[115,157,123,107,"HYPHENMINUS"],[115,168,123,53],[115,169,123,13],[115,171,123,121],[116,0,124,12,"a"],[116,8,124,12,"a"],[116,9,124,13],[116,12,124,16],[116,16,124,12],[117,0,126,12,"expectCharCode"],[117,8,126,12,"expectCharCode"],[117,22,126,26],[117,23,126,27,"call"],[117,27,126,12],[117,28,126,32],[117,32,126,12],[117,34,126,38],[117,35,126,12],[117,37,126,41,"N"],[117,38,126,12],[119,0,128,12],[119,16,128,20],[119,21,128,25,"scanner"],[119,28,128,20],[119,29,128,33,"getTokenLength"],[119,43,128,20],[119,45,128,12],[120,0,132,16],[120,15,132,21],[120,16,132,16],[121,0,133,20],[121,17,133,25,"scanner"],[121,24,133,20],[121,25,133,33,"next"],[121,29,133,20],[122,0,134,20,"b"],[122,12,134,20,"b"],[122,13,134,21],[122,16,134,24,"consumeB"],[122,24,134,32],[122,25,134,33,"call"],[122,29,134,24],[122,30,134,38],[122,34,134,24],[122,35,134,20],[123,0,135,20],[125,0,138,16],[125,15,138,21],[125,16,138,16],[126,0,139,20,"expectCharCode"],[126,12,139,20,"expectCharCode"],[126,26,139,34],[126,27,139,35,"call"],[126,31,139,20],[126,32,139,40],[126,36,139,20],[126,38,139,46],[126,39,139,20],[126,41,139,49,"HYPHENMINUS"],[126,52,139,20],[127,0,141,20],[127,17,141,25,"scanner"],[127,24,141,20],[127,25,141,33,"next"],[127,29,141,20],[128,0,142,20],[128,17,142,25,"scanner"],[128,24,142,20],[128,25,142,33,"skipSC"],[128,31,142,20],[129,0,144,20,"checkTokenIsInteger"],[129,12,144,20,"checkTokenIsInteger"],[129,31,144,39],[129,32,144,40,"call"],[129,36,144,20],[129,37,144,45],[129,41,144,20],[129,43,144,51,"DISALLOW_SIGN"],[129,56,144,20],[130,0,146,20,"b"],[130,12,146,20,"b"],[130,13,146,21],[130,16,146,24],[130,22,146,30],[130,27,146,35,"consume"],[130,34,146,30],[130,35,146,43,"NUMBER"],[130,41,146,30],[130,42,146,20],[131,0,147,20],[133,0,150,16],[134,0,151,20,"expectCharCode"],[134,12,151,20,"expectCharCode"],[134,26,151,34],[134,27,151,35,"call"],[134,31,151,20],[134,32,151,40],[134,36,151,20],[134,38,151,46],[134,39,151,20],[134,41,151,49,"HYPHENMINUS"],[134,52,151,20],[135,0,152,20,"checkInteger"],[135,12,152,20,"checkInteger"],[135,24,152,32],[135,25,152,33,"call"],[135,29,152,20],[135,30,152,38],[135,34,152,20],[135,36,152,44],[135,37,152,20],[135,39,152,47,"DISALLOW_SIGN"],[135,52,152,20],[136,0,153,20],[136,17,153,25,"scanner"],[136,24,153,20],[136,25,153,33,"next"],[136,29,153,20],[137,0,155,20,"b"],[137,12,155,20,"b"],[137,13,155,21],[137,16,155,24],[137,21,155,29,"scanner"],[137,28,155,24],[137,29,155,37,"substrToCursor"],[137,43,155,24],[137,44,155,52,"start"],[137,49,155,57],[137,52,155,60],[137,53,155,24],[137,54,155,20],[138,0,128,12],[139,0,157,9],[139,7,123,13],[139,13,164,13],[139,17,164,17],[139,22,164,22,"scanner"],[139,29,164,17],[139,30,164,30,"tokenType"],[139,39,164,17],[139,44,164,44,"IDENT"],[139,49,164,17],[139,53,164,54],[139,58,164,59,"scanner"],[139,65,164,54],[139,66,164,67,"isDelim"],[139,73,164,54],[139,74,164,75,"PLUSSIGN"],[139,82,164,54],[139,87,164,88],[139,92,164,93,"scanner"],[139,99,164,88],[139,100,164,101,"lookupType"],[139,110,164,88],[139,111,164,112],[139,112,164,88],[139,118,164,119,"IDENT"],[139,123,164,13],[139,125,164,127],[140,0,165,12],[140,12,165,16,"sign"],[140,16,165,20],[140,19,165,23],[140,20,165,12],[141,0,166,12,"a"],[141,8,166,12,"a"],[141,9,166,13],[141,12,166,16],[141,15,166,12],[143,0,169,12],[143,12,169,16],[143,17,169,21,"scanner"],[143,24,169,16],[143,25,169,29,"isDelim"],[143,32,169,16],[143,33,169,37,"PLUSSIGN"],[143,41,169,16],[143,42,169,12],[143,44,169,48],[144,0,170,16,"sign"],[144,10,170,16,"sign"],[144,14,170,20],[144,17,170,23],[144,18,170,16],[145,0,171,16],[145,15,171,21,"scanner"],[145,22,171,16],[145,23,171,29,"next"],[145,27,171,16],[146,0,172,13],[148,0,174,12,"expectCharCode"],[148,8,174,12,"expectCharCode"],[148,22,174,26],[148,23,174,27,"call"],[148,27,174,12],[148,28,174,32],[148,32,174,12],[148,34,174,38],[148,35,174,12],[148,37,174,41,"N"],[148,38,174,12],[150,0,176,12],[150,16,176,20],[150,21,176,25,"scanner"],[150,28,176,20],[150,29,176,33,"getTokenLength"],[150,43,176,20],[150,45,176,12],[151,0,180,16],[151,15,180,21],[151,16,180,16],[152,0,181,20],[152,17,181,25,"scanner"],[152,24,181,20],[152,25,181,33,"next"],[152,29,181,20],[153,0,182,20,"b"],[153,12,182,20,"b"],[153,13,182,21],[153,16,182,24,"consumeB"],[153,24,182,32],[153,25,182,33,"call"],[153,29,182,24],[153,30,182,38],[153,34,182,24],[153,35,182,20],[154,0,183,20],[156,0,186,16],[156,15,186,21],[156,16,186,16],[157,0,187,20,"expectCharCode"],[157,12,187,20,"expectCharCode"],[157,26,187,34],[157,27,187,35,"call"],[157,31,187,20],[157,32,187,40],[157,36,187,20],[157,38,187,46],[157,39,187,20],[157,41,187,49,"HYPHENMINUS"],[157,52,187,20],[158,0,189,20],[158,17,189,25,"scanner"],[158,24,189,20],[158,25,189,33,"next"],[158,29,189,20],[159,0,190,20],[159,17,190,25,"scanner"],[159,24,190,20],[159,25,190,33,"skipSC"],[159,31,190,20],[160,0,192,20,"checkTokenIsInteger"],[160,12,192,20,"checkTokenIsInteger"],[160,31,192,39],[160,32,192,40,"call"],[160,36,192,20],[160,37,192,45],[160,41,192,20],[160,43,192,51,"DISALLOW_SIGN"],[160,56,192,20],[161,0,194,20,"b"],[161,12,194,20,"b"],[161,13,194,21],[161,16,194,24],[161,22,194,30],[161,27,194,35,"consume"],[161,34,194,30],[161,35,194,43,"NUMBER"],[161,41,194,30],[161,42,194,20],[162,0,195,20],[164,0,198,16],[165,0,199,20,"expectCharCode"],[165,12,199,20,"expectCharCode"],[165,26,199,34],[165,27,199,35,"call"],[165,31,199,20],[165,32,199,40],[165,36,199,20],[165,38,199,46],[165,39,199,20],[165,41,199,49,"HYPHENMINUS"],[165,52,199,20],[166,0,200,20,"checkInteger"],[166,12,200,20,"checkInteger"],[166,24,200,32],[166,25,200,33,"call"],[166,29,200,20],[166,30,200,38],[166,34,200,20],[166,36,200,44],[166,37,200,20],[166,39,200,47,"DISALLOW_SIGN"],[166,52,200,20],[167,0,201,20],[167,17,201,25,"scanner"],[167,24,201,20],[167,25,201,33,"next"],[167,29,201,20],[168,0,203,20,"b"],[168,12,203,20,"b"],[168,13,203,21],[168,16,203,24],[168,21,203,29,"scanner"],[168,28,203,24],[168,29,203,37,"substrToCursor"],[168,43,203,24],[168,44,203,52,"start"],[168,49,203,57],[168,52,203,60,"sign"],[168,56,203,52],[168,59,203,67],[168,60,203,24],[168,61,203,20],[169,0,176,12],[170,0,205,9],[170,7,164,13],[170,13,212,13],[170,17,212,17],[170,22,212,22,"scanner"],[170,29,212,17],[170,30,212,30,"tokenType"],[170,39,212,17],[170,44,212,44,"DIMENSION"],[170,53,212,13],[170,55,212,55],[171,0,213,12],[171,12,213,16,"code"],[171,16,213,20],[171,19,213,23],[171,24,213,28,"scanner"],[171,31,213,23],[171,32,213,36,"source"],[171,38,213,23],[171,39,213,43,"charCodeAt"],[171,49,213,23],[171,50,213,54],[171,55,213,59,"scanner"],[171,62,213,54],[171,63,213,67,"tokenStart"],[171,73,213,23],[171,74,213,12],[172,0,214,12],[172,12,214,16,"sign"],[172,16,214,20],[172,19,214,23,"code"],[172,23,214,27],[172,28,214,32,"PLUSSIGN"],[172,36,214,23],[172,40,214,44,"code"],[172,44,214,48],[172,49,214,53,"HYPHENMINUS"],[172,60,214,12],[174,0,216,12],[174,13,216,17],[174,17,216,21,"i"],[174,18,216,22],[174,21,216,25],[174,26,216,30,"scanner"],[174,33,216,25],[174,34,216,38,"tokenStart"],[174,44,216,25],[174,47,216,51,"sign"],[174,51,216,12],[174,53,216,57,"i"],[174,54,216,58],[174,57,216,61],[174,62,216,66,"scanner"],[174,69,216,61],[174,70,216,74,"tokenEnd"],[174,78,216,12],[174,80,216,84,"i"],[174,81,216,85],[174,83,216,12],[174,85,216,89],[175,0,217,16],[175,14,217,20],[175,15,217,21],[175,73,217,29],[175,78,217,34,"scanner"],[175,85,217,29],[175,86,217,42,"source"],[175,92,217,29],[175,93,217,49,"charCodeAt"],[175,103,217,29],[175,104,217,60,"i"],[175,105,217,29],[175,106,217,21],[175,107,217,16],[175,109,217,65],[176,0,218,20],[177,0,219,17],[178,0,220,13],[180,0,222,12],[180,12,222,16,"i"],[180,13,222,17],[180,18,222,22],[180,23,222,27,"scanner"],[180,30,222,22],[180,31,222,35,"tokenStart"],[180,41,222,22],[180,44,222,48,"sign"],[180,48,222,12],[180,50,222,54],[181,0,223,16],[181,15,223,21,"error"],[181,20,223,16],[181,21,223,27],[181,42,223,16],[181,44,223,50],[181,49,223,55,"scanner"],[181,56,223,50],[181,57,223,63,"tokenStart"],[181,67,223,50],[181,70,223,76,"sign"],[181,74,223,16],[182,0,224,13],[184,0,226,12,"expectCharCode"],[184,8,226,12,"expectCharCode"],[184,22,226,26],[184,23,226,27,"call"],[184,27,226,12],[184,28,226,32],[184,32,226,12],[184,34,226,38,"i"],[184,35,226,39],[184,38,226,42],[184,43,226,47,"scanner"],[184,50,226,42],[184,51,226,55,"tokenStart"],[184,61,226,12],[184,63,226,67,"N"],[184,64,226,12],[185,0,227,12,"a"],[185,8,227,12,"a"],[185,9,227,13],[185,12,227,16],[185,17,227,21,"scanner"],[185,24,227,16],[185,25,227,29,"source"],[185,31,227,16],[185,32,227,36,"substring"],[185,41,227,16],[185,42,227,46,"start"],[185,47,227,16],[185,49,227,53,"i"],[185,50,227,16],[185,51,227,12],[187,0,232,12],[187,12,232,16,"i"],[187,13,232,17],[187,16,232,20],[187,17,232,16],[187,22,232,26],[187,27,232,31,"scanner"],[187,34,232,26],[187,35,232,39,"tokenEnd"],[187,43,232,12],[187,45,232,49],[188,0,233,16],[188,15,233,21,"scanner"],[188,22,233,16],[188,23,233,29,"next"],[188,27,233,16],[189,0,234,16,"b"],[189,10,234,16,"b"],[189,11,234,17],[189,14,234,20,"consumeB"],[189,22,234,28],[189,23,234,29,"call"],[189,27,234,20],[189,28,234,34],[189,32,234,20],[189,33,234,16],[190,0,235,13],[190,9,232,12],[190,15,235,19],[191,0,236,16,"expectCharCode"],[191,10,236,16,"expectCharCode"],[191,24,236,30],[191,25,236,31,"call"],[191,29,236,16],[191,30,236,36],[191,34,236,16],[191,36,236,42,"i"],[191,37,236,43],[191,40,236,46],[191,45,236,51,"scanner"],[191,52,236,46],[191,53,236,59,"tokenStart"],[191,63,236,42],[191,66,236,72],[191,67,236,16],[191,69,236,75,"HYPHENMINUS"],[191,80,236,16],[193,0,239,16],[193,14,239,20,"i"],[193,15,239,21],[193,18,239,24],[193,19,239,20],[193,24,239,30],[193,29,239,35,"scanner"],[193,36,239,30],[193,37,239,43,"tokenEnd"],[193,45,239,16],[193,47,239,53],[194,0,240,20],[194,17,240,25,"scanner"],[194,24,240,20],[194,25,240,33,"next"],[194,29,240,20],[195,0,241,20],[195,17,241,25,"scanner"],[195,24,241,20],[195,25,241,33,"skipSC"],[195,31,241,20],[196,0,242,20,"checkTokenIsInteger"],[196,12,242,20,"checkTokenIsInteger"],[196,31,242,39],[196,32,242,40,"call"],[196,36,242,20],[196,37,242,45],[196,41,242,20],[196,43,242,51,"DISALLOW_SIGN"],[196,56,242,20],[197,0,243,20,"b"],[197,12,243,20,"b"],[197,13,243,21],[197,16,243,24],[197,22,243,30],[197,27,243,35,"consume"],[197,34,243,30],[197,35,243,43,"NUMBER"],[197,41,243,30],[197,42,243,20],[198,0,244,17],[198,11,239,16],[198,17,246,21],[199,0,247,20,"checkInteger"],[199,12,247,20,"checkInteger"],[199,24,247,32],[199,25,247,33,"call"],[199,29,247,20],[199,30,247,38],[199,34,247,20],[199,36,247,44,"i"],[199,37,247,45],[199,40,247,48],[199,45,247,53,"scanner"],[199,52,247,48],[199,53,247,61,"tokenStart"],[199,63,247,44],[199,66,247,74],[199,67,247,20],[199,69,247,77,"DISALLOW_SIGN"],[199,82,247,20],[200,0,248,20],[200,17,248,25,"scanner"],[200,24,248,20],[200,25,248,33,"next"],[200,29,248,20],[201,0,249,20,"b"],[201,12,249,20,"b"],[201,13,249,21],[201,16,249,24],[201,21,249,29,"scanner"],[201,28,249,24],[201,29,249,37,"substrToCursor"],[201,43,249,24],[201,44,249,52,"i"],[201,45,249,53],[201,48,249,56],[201,49,249,24],[201,50,249,20],[202,0,250,17],[203,0,251,13],[204,0,252,9],[204,7,212,13],[204,13,252,15],[205,0,253,12],[205,13,253,17,"error"],[205,18,253,12],[206,0,254,9],[208,0,256,8],[208,10,256,12,"a"],[208,11,256,13],[208,16,256,18],[208,20,256,12],[208,24,256,26,"a"],[208,25,256,27],[208,26,256,28,"charCodeAt"],[208,36,256,26],[208,37,256,39],[208,38,256,26],[208,44,256,46,"PLUSSIGN"],[208,52,256,8],[208,54,256,56],[209,0,257,12,"a"],[209,8,257,12,"a"],[209,9,257,13],[209,12,257,16,"a"],[209,13,257,17],[209,14,257,18,"substr"],[209,20,257,16],[209,21,257,25],[209,22,257,16],[209,23,257,12],[210,0,258,9],[212,0,260,8],[212,10,260,12,"b"],[212,11,260,13],[212,16,260,18],[212,20,260,12],[212,24,260,26,"b"],[212,25,260,27],[212,26,260,28,"charCodeAt"],[212,36,260,26],[212,37,260,39],[212,38,260,26],[212,44,260,46,"PLUSSIGN"],[212,52,260,8],[212,54,260,56],[213,0,261,12,"b"],[213,8,261,12,"b"],[213,9,261,13],[213,12,261,16,"b"],[213,13,261,17],[213,14,261,18,"substr"],[213,20,261,16],[213,21,261,25],[213,22,261,16],[213,23,261,12],[214,0,262,9],[216,0,264,8],[216,13,264,15],[217,0,265,12,"type"],[217,8,265,12,"type"],[217,12,265,16],[217,14,265,18],[217,23,264,15],[218,0,266,12,"loc"],[218,8,266,12,"loc"],[218,11,266,15],[218,13,266,17],[218,18,266,22,"getLocation"],[218,29,266,17],[218,30,266,34,"start"],[218,35,266,17],[218,37,266,41],[218,42,266,46,"scanner"],[218,49,266,41],[218,50,266,54,"tokenStart"],[218,60,266,17],[218,61,264,15],[219,0,267,12,"a"],[219,8,267,12,"a"],[219,9,267,13],[219,11,267,15,"a"],[219,12,264,15],[220,0,268,12,"b"],[220,8,268,12,"b"],[220,9,268,13],[220,11,268,15,"b"],[221,0,264,15],[221,7,264,8],[222,0,270,5],[222,5,100,17],[223,0,271,4,"generate"],[223,4,271,4,"generate"],[223,12,271,12],[223,14,271,14],[223,32,271,23,"node"],[223,36,271,14],[223,38,271,29],[224,0,272,8],[224,10,272,12,"a"],[224,11,272,13],[224,14,272,16,"node"],[224,18,272,20],[224,19,272,21,"a"],[224,20,272,16],[224,25,272,27],[224,29,272,16],[224,33,272,35,"node"],[224,37,272,39],[224,38,272,40,"a"],[224,39,272,35],[224,44,272,46,"undefined"],[224,53,272,8],[225,0,273,8],[225,10,273,12,"b"],[225,11,273,13],[225,14,273,16,"node"],[225,18,273,20],[225,19,273,21,"b"],[225,20,273,16],[225,25,273,27],[225,29,273,16],[225,33,273,35,"node"],[225,37,273,39],[225,38,273,40,"b"],[225,39,273,35],[225,44,273,46,"undefined"],[225,53,273,8],[227,0,275,8],[227,10,275,12,"a"],[227,11,275,8],[227,13,275,15],[228,0,276,12],[228,13,276,17,"chunk"],[228,18,276,12],[228,19,277,16,"node"],[228,23,277,20],[228,24,277,21,"a"],[228,25,277,16],[228,30,277,27],[228,34,277,16],[228,37,277,34],[228,41,277,16],[228,44,278,16,"node"],[228,48,278,20],[228,49,278,21,"a"],[228,50,278,16],[228,55,278,28],[228,58,278,16],[228,61,278,35],[228,64,278,16],[228,67,279,16,"node"],[228,71,279,20],[228,72,279,21,"a"],[228,73,279,16],[228,78,279,27],[228,82,279,16],[228,85,279,34],[228,89,279,16],[228,92,280,16,"node"],[228,96,280,20],[228,97,280,21,"a"],[228,98,280,16],[228,101,280,25],[228,104,276,12],[230,0,283,12],[230,12,283,16,"b"],[230,13,283,12],[230,15,283,19],[231,0,284,16,"b"],[231,10,284,16,"b"],[231,11,284,17],[231,14,284,20,"String"],[231,20,284,26],[231,21,284,27,"node"],[231,25,284,31],[231,26,284,32,"b"],[231,27,284,26],[231,28,284,16],[233,0,285,16],[233,14,285,20,"b"],[233,15,285,21],[233,16,285,22,"charAt"],[233,22,285,20],[233,23,285,29],[233,24,285,20],[233,30,285,36],[233,33,285,20],[233,37,285,43,"b"],[233,38,285,44],[233,39,285,45,"charAt"],[233,45,285,43],[233,46,285,52],[233,47,285,43],[233,53,285,59],[233,56,285,16],[233,58,285,64],[234,0,286,20],[234,17,286,25,"chunk"],[234,22,286,20],[234,23,286,31,"b"],[234,24,286,32],[234,25,286,33,"charAt"],[234,31,286,31],[234,32,286,40],[234,33,286,31],[234,34,286,20],[235,0,287,20],[235,17,287,25,"chunk"],[235,22,287,20],[235,23,287,31,"b"],[235,24,287,32],[235,25,287,33,"substr"],[235,31,287,31],[235,32,287,40],[235,33,287,31],[235,34,287,20],[236,0,288,17],[236,11,285,16],[236,17,288,23],[237,0,289,20],[237,17,289,25,"chunk"],[237,22,289,20],[237,23,289,31],[237,26,289,20],[238,0,290,20],[238,17,290,25,"chunk"],[238,22,290,20],[238,23,290,31,"b"],[238,24,290,20],[239,0,291,17],[240,0,292,13],[241,0,293,9],[241,7,275,8],[241,13,293,15],[242,0,294,12],[242,13,294,17,"chunk"],[242,18,294,12],[242,19,294,23,"String"],[242,25,294,29],[242,26,294,30,"node"],[242,30,294,34],[242,31,294,35,"b"],[242,32,294,29],[242,33,294,12],[243,0,295,9],[244,0,296,5],[245,0,100,17],[245,3,100,0]],"functionMap":{"names":["<global>","checkInteger","checkTokenIsInteger","expectCharCode","consumeB","module.exports.parse","module.exports.generate"],"mappings":"AAA;ACe;CDgB;AEE;CFE;AGE;CHe;AII;CJwC;WKS;KLoK;cMC;KNyB"}},"type":"js/module"}]}