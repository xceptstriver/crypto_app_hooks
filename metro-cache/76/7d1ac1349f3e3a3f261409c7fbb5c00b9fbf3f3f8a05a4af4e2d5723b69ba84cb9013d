{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":202,"column":0}},{"start":{"line":1,"column":0},"end":{"line":202,"column":0}},{"start":{"line":1,"column":0},"end":{"line":202,"column":0}}]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":202,"column":0}}]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":202,"column":0}}]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":202,"column":0}}]}},{"name":"../helpers/extremesHelpers","data":{"asyncType":null,"locs":[{"start":{"line":195,"column":9},"end":{"line":195,"column":28},"identifierName":"addExtremesIfNeeded"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = bSplineInterpolation;\n\n  var _slicedToArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var BSpline = function () {\n    function BSpline(points, degree, copy) {\n      (0, _classCallCheck2.default)(this, BSpline);\n\n      if (copy) {\n        this.points = [];\n\n        for (var i = 0; i < points.length; i++) {\n          this.points.push(points[i]);\n        }\n      } else {\n        this.points = points;\n      }\n\n      this.degree = degree;\n      this.dimension = points[0].length;\n\n      if (degree === 2) {\n        this.baseFunc = this.basisDeg2;\n        this.baseFuncRangeInt = 2;\n      } else if (degree === 3) {\n        this.baseFunc = this.basisDeg3;\n        this.baseFuncRangeInt = 2;\n      } else if (degree === 4) {\n        this.baseFunc = this.basisDeg4;\n        this.baseFuncRangeInt = 3;\n      } else if (degree === 5) {\n        this.baseFunc = this.basisDeg5;\n        this.baseFuncRangeInt = 3;\n      }\n    }\n\n    (0, _createClass2.default)(BSpline, [{\n      key: \"seqAt\",\n      value: function seqAt(dim) {\n        var points = this.points;\n        var margin = this.degree + 1;\n        return function (n) {\n          if (n < margin) {\n            return points[0][dim];\n          } else if (points.length + margin <= n) {\n            return points[points.length - 1][dim];\n          } else {\n            return points[n - margin][dim];\n          }\n        };\n      }\n    }, {\n      key: \"basisDeg2\",\n      value: function basisDeg2(x) {\n        if (-0.5 <= x && x < 0.5) {\n          return 0.75 - x * x;\n        } else if (0.5 <= x && x <= 1.5) {\n          return 1.125 + (-1.5 + x / 2.0) * x;\n        } else if (-1.5 <= x && x < -0.5) {\n          return 1.125 + (1.5 + x / 2.0) * x;\n        } else {\n          return 0;\n        }\n      }\n    }, {\n      key: \"basisDeg3\",\n      value: function basisDeg3(x) {\n        if (-1 <= x && x < 0) {\n          return 2.0 / 3.0 + (-1.0 - x / 2.0) * x * x;\n        } else if (1 <= x && x <= 2) {\n          return 4.0 / 3.0 + x * (-2.0 + (1.0 - x / 6.0) * x);\n        } else if (-2 <= x && x < -1) {\n          return 4.0 / 3.0 + x * (2.0 + (1.0 + x / 6.0) * x);\n        } else if (0 <= x && x < 1) {\n          return 2.0 / 3.0 + (-1.0 + x / 2.0) * x * x;\n        } else {\n          return 0;\n        }\n      }\n    }, {\n      key: \"basisDeg4\",\n      value: function basisDeg4(x) {\n        if (-1.5 <= x && x < -0.5) {\n          return 55.0 / 96.0 + x * (-(5.0 / 24.0) + x * (-(5.0 / 4.0) + (-(5.0 / 6.0) - x / 6.0) * x));\n        } else if (0.5 <= x && x < 1.5) {\n          return 55.0 / 96.0 + x * (5.0 / 24.0 + x * (-(5.0 / 4.0) + (5.0 / 6.0 - x / 6.0) * x));\n        } else if (1.5 <= x && x <= 2.5) {\n          return 625.0 / 384.0 + x * (-(125.0 / 48.0) + x * (25.0 / 16.0 + (-(5.0 / 12.0) + x / 24.0) * x));\n        } else if (-2.5 <= x && x <= -1.5) {\n          return 625.0 / 384.0 + x * (125.0 / 48.0 + x * (25.0 / 16.0 + (5.0 / 12.0 + x / 24.0) * x));\n        } else if (-1.5 <= x && x < 1.5) {\n          return 115.0 / 192.0 + x * x * (-(5.0 / 8.0) + x * x / 4.0);\n        } else {\n          return 0;\n        }\n      }\n    }, {\n      key: \"getInterpol\",\n      value: function getInterpol(seq, t) {\n        var f = this.baseFunc;\n        var rangeInt = this.baseFuncRangeInt;\n        var tInt = Math.floor(t);\n        var result = 0;\n\n        for (var i = tInt - rangeInt; i <= tInt + rangeInt; i++) {\n          result += seq(i) * f(t - i);\n        }\n\n        return result;\n      }\n    }, {\n      key: \"basisDeg5\",\n      value: function basisDeg5(x) {\n        if (-2 <= x && x < -1) {\n          return 17.0 / 40.0 + x * (-(5.0 / 8.0) + x * (-(7.0 / 4.0) + x * (-(5.0 / 4.0) + (-(3.0 / 8.0) - x / 24.0) * x)));\n        } else if (0 <= x && x < 1) {\n          return 11.0 / 20.0 + x * x * (-(1.0 / 2.0) + (1.0 / 4.0 - x / 12.0) * x * x);\n        } else if (2 <= x && x <= 3) {\n          return 81.0 / 40.0 + x * (-(27.0 / 8.0) + x * (9.0 / 4.0 + x * (-(3.0 / 4.0) + (1.0 / 8.0 - x / 120.0) * x)));\n        } else if (-3 <= x && x < -2) {\n          return 81.0 / 40.0 + x * (27.0 / 8.0 + x * (9.0 / 4.0 + x * (3.0 / 4.0 + (1.0 / 8.0 + x / 120.0) * x)));\n        } else if (1 <= x && x < 2) {\n          return 17.0 / 40.0 + x * (5.0 / 8.0 + x * (-(7.0 / 4.0) + x * (5.0 / 4.0 + (-(3.0 / 8.0) + x / 24.0) * x)));\n        } else if (-1 <= x && x < 0) {\n          return 11.0 / 20.0 + x * x * (-(1.0 / 2.0) + (1.0 / 4.0 + x / 12.0) * x * x);\n        } else {\n          return 0;\n        }\n      }\n    }, {\n      key: \"calcAt\",\n      value: function calcAt(t) {\n        t = t * ((this.degree + 1) * 2 + this.points.length);\n\n        if (this.dimension === 2) {\n          return [this.getInterpol(this.seqAt(0), t), this.getInterpol(this.seqAt(1), t)];\n        } else if (this.dimension === 3) {\n          return [this.getInterpol(this.seqAt(0), t), this.getInterpol(this.seqAt(1), t), this.getInterpol(this.seqAt(2), t)];\n        } else {\n          var res = [];\n\n          for (var i = 0; i < this.dimension; i++) {\n            res.push(this.getInterpol(this.seqAt(i), t));\n          }\n\n          return res;\n        }\n      }\n    }]);\n    return BSpline;\n  }();\n\n  function bSplineInterpolation(_ref) {\n    var data = _ref.data,\n        _ref$degree = _ref.degree,\n        degree = _ref$degree === void 0 ? 3 : _ref$degree,\n        range = _ref.range,\n        _ref$includeExtremes = _ref.includeExtremes,\n        includeExtremes = _ref$includeExtremes === void 0 ? false : _ref$includeExtremes,\n        _ref$removePointsSurr = _ref.removePointsSurroundingExtremes,\n        removePointsSurroundingExtremes = _ref$removePointsSurr === void 0 ? true : _ref$removePointsSurr;\n\n    if (!data || data.length === 0) {\n      return function () {\n        return [];\n      };\n    }\n\n    var parsed = data.map(function (_ref2) {\n      var x = _ref2.x,\n          y = _ref2.y;\n      return [x, y];\n    });\n    var spline = new BSpline(parsed, degree, true);\n    var res = [];\n\n    for (var i = 0; i < range; i++) {\n      res.push(spline.calcAt(i / (range - 1)));\n    }\n\n    return (0, _$$_REQUIRE(_dependencyMap[4], \"../helpers/extremesHelpers\").addExtremesIfNeeded)(res.map(function (_ref3) {\n      var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n          x = _ref4[0],\n          y = _ref4[1];\n\n      return {\n        x: x,\n        y: y\n      };\n    }), data, includeExtremes, removePointsSurroundingExtremes);\n  }\n});","lineCount":200,"map":[[13,6,3,6,"BSpline"],[13,13],[14,0,4,2],[14,21,4,14,"points"],[14,27,4,2],[14,29,4,22,"degree"],[14,35,4,2],[14,37,4,30,"copy"],[14,41,4,2],[14,43,4,36],[15,0,4,36],[17,0,5,4],[17,10,5,8,"copy"],[17,14,5,4],[17,16,5,14],[18,0,6,6],[18,13,6,11,"points"],[18,19,6,6],[18,22,6,20],[18,24,6,6],[20,0,7,6],[20,13,7,11],[20,17,7,15,"i"],[20,18,7,16],[20,21,7,19],[20,22,7,6],[20,24,7,22,"i"],[20,25,7,23],[20,28,7,26,"points"],[20,34,7,32],[20,35,7,33,"length"],[20,41,7,6],[20,43,7,41,"i"],[20,44,7,42],[20,46,7,6],[20,48,7,46],[21,0,8,8],[21,15,8,13,"points"],[21,21,8,8],[21,22,8,20,"push"],[21,26,8,8],[21,27,8,25,"points"],[21,33,8,31],[21,34,8,32,"i"],[21,35,8,31],[21,36,8,8],[22,0,9,7],[23,0,10,5],[23,7,5,4],[23,13,10,11],[24,0,11,6],[24,13,11,11,"points"],[24,19,11,6],[24,22,11,20,"points"],[24,28,11,6],[25,0,12,5],[27,0,13,4],[27,11,13,9,"degree"],[27,17,13,4],[27,20,13,18,"degree"],[27,26,13,4],[28,0,14,4],[28,11,14,9,"dimension"],[28,20,14,4],[28,23,14,21,"points"],[28,29,14,27],[28,30,14,28],[28,31,14,27],[28,32,14,21],[28,33,14,31,"length"],[28,39,14,4],[30,0,15,4],[30,10,15,8,"degree"],[30,16,15,14],[30,21,15,19],[30,22,15,4],[30,24,15,22],[31,0,16,6],[31,13,16,11,"baseFunc"],[31,21,16,6],[31,24,16,22],[31,29,16,27,"basisDeg2"],[31,38,16,6],[32,0,17,6],[32,13,17,11,"baseFuncRangeInt"],[32,29,17,6],[32,32,17,30],[32,33,17,6],[33,0,18,5],[33,7,15,4],[33,13,18,11],[33,17,18,15,"degree"],[33,23,18,21],[33,28,18,26],[33,29,18,11],[33,31,18,29],[34,0,19,6],[34,13,19,11,"baseFunc"],[34,21,19,6],[34,24,19,22],[34,29,19,27,"basisDeg3"],[34,38,19,6],[35,0,20,6],[35,13,20,11,"baseFuncRangeInt"],[35,29,20,6],[35,32,20,30],[35,33,20,6],[36,0,21,5],[36,7,18,11],[36,13,21,11],[36,17,21,15,"degree"],[36,23,21,21],[36,28,21,26],[36,29,21,11],[36,31,21,29],[37,0,22,6],[37,13,22,11,"baseFunc"],[37,21,22,6],[37,24,22,22],[37,29,22,27,"basisDeg4"],[37,38,22,6],[38,0,23,6],[38,13,23,11,"baseFuncRangeInt"],[38,29,23,6],[38,32,23,30],[38,33,23,6],[39,0,24,5],[39,7,21,11],[39,13,24,11],[39,17,24,15,"degree"],[39,23,24,21],[39,28,24,26],[39,29,24,11],[39,31,24,29],[40,0,25,6],[40,13,25,11,"baseFunc"],[40,21,25,6],[40,24,25,22],[40,29,25,27,"basisDeg5"],[40,38,25,6],[41,0,26,6],[41,13,26,11,"baseFuncRangeInt"],[41,29,26,6],[41,32,26,30],[41,33,26,6],[42,0,27,5],[43,0,28,3],[47,13,30,2],[47,28,30,8,"dim"],[47,31,30,2],[47,33,30,13],[48,0,31,4],[48,12,31,8,"points"],[48,18,31,14],[48,21,31,17],[48,26,31,22,"points"],[48,32,31,4],[49,0,32,4],[49,12,32,8,"margin"],[49,18,32,14],[49,21,32,17],[49,26,32,22,"degree"],[49,32,32,17],[49,35,32,31],[49,36,32,4],[50,0,33,4],[50,15,33,11],[50,25,33,21,"n"],[50,26,33,11],[50,28,33,24],[51,0,34,6],[51,14,34,10,"n"],[51,15,34,11],[51,18,34,14,"margin"],[51,24,34,6],[51,26,34,22],[52,0,35,8],[52,19,35,15,"points"],[52,25,35,21],[52,26,35,22],[52,27,35,21],[52,28,35,15],[52,29,35,25,"dim"],[52,32,35,15],[52,33,35,8],[53,0,36,7],[53,11,34,6],[53,17,36,13],[53,21,36,17,"points"],[53,27,36,23],[53,28,36,24,"length"],[53,34,36,17],[53,37,36,33,"margin"],[53,43,36,17],[53,47,36,43,"n"],[53,48,36,13],[53,50,36,46],[54,0,37,8],[54,19,37,15,"points"],[54,25,37,21],[54,26,37,22,"points"],[54,32,37,28],[54,33,37,29,"length"],[54,39,37,22],[54,42,37,38],[54,43,37,21],[54,44,37,15],[54,45,37,41,"dim"],[54,48,37,15],[54,49,37,8],[55,0,38,7],[55,11,36,13],[55,17,38,13],[56,0,39,8],[56,19,39,15,"points"],[56,25,39,21],[56,26,39,22,"n"],[56,27,39,23],[56,30,39,26,"margin"],[56,36,39,21],[56,37,39,15],[56,38,39,34,"dim"],[56,41,39,15],[56,42,39,8],[57,0,40,7],[58,0,41,5],[58,9,33,4],[59,0,42,3],[62,13,44,2],[62,32,44,12,"x"],[62,33,44,2],[62,35,44,15],[63,0,45,4],[63,12,45,8],[63,13,45,9],[63,16,45,8],[63,20,45,16,"x"],[63,21,45,8],[63,25,45,21,"x"],[63,26,45,22],[63,29,45,25],[63,32,45,4],[63,34,45,30],[64,0,46,6],[64,17,46,13],[64,24,46,20,"x"],[64,25,46,21],[64,28,46,24,"x"],[64,29,46,6],[65,0,47,5],[65,9,45,4],[65,15,47,11],[65,19,47,15],[65,26,47,22,"x"],[65,27,47,15],[65,31,47,27,"x"],[65,32,47,28],[65,36,47,32],[65,39,47,11],[65,41,47,37],[66,0,48,6],[66,17,48,13],[66,25,48,21],[66,26,48,22],[66,27,48,23],[66,30,48,22],[66,33,48,29,"x"],[66,34,48,30],[66,37,48,33],[66,40,48,21],[66,44,48,40,"x"],[66,45,48,6],[67,0,49,5],[67,9,47,11],[67,15,49,11],[67,19,49,15],[67,20,49,16],[67,23,49,15],[67,27,49,23,"x"],[67,28,49,15],[67,32,49,28,"x"],[67,33,49,29],[67,36,49,32],[67,37,49,33],[67,40,49,11],[67,42,49,38],[68,0,50,6],[68,17,50,13],[68,25,50,21],[68,26,50,22],[68,32,50,28,"x"],[68,33,50,29],[68,36,50,32],[68,39,50,21],[68,43,50,39,"x"],[68,44,50,6],[69,0,51,5],[69,9,49,11],[69,15,51,11],[70,0,52,6],[70,17,52,13],[70,18,52,6],[71,0,53,5],[72,0,54,3],[75,13,56,2],[75,32,56,12,"x"],[75,33,56,2],[75,35,56,15],[76,0,57,4],[76,12,57,8],[76,13,57,9],[76,14,57,8],[76,18,57,14,"x"],[76,19,57,8],[76,23,57,19,"x"],[76,24,57,20],[76,27,57,23],[76,28,57,4],[76,30,57,26],[77,0,58,6],[77,17,58,13],[77,23,58,19],[77,26,58,13],[77,29,58,25],[77,30,58,26],[77,31,58,27],[77,34,58,26],[77,37,58,33,"x"],[77,38,58,34],[77,41,58,37],[77,44,58,25],[77,48,58,44,"x"],[77,49,58,25],[77,52,58,48,"x"],[77,53,58,6],[78,0,59,5],[78,9,57,4],[78,15,59,11],[78,19,59,15],[78,24,59,20,"x"],[78,25,59,15],[78,29,59,25,"x"],[78,30,59,26],[78,34,59,30],[78,35,59,11],[78,37,59,33],[79,0,60,6],[79,17,60,13],[79,23,60,19],[79,26,60,13],[79,29,60,25,"x"],[79,30,60,26],[79,34,60,30],[79,35,60,31],[79,38,60,30],[79,41,60,37],[79,42,60,38],[79,48,60,44,"x"],[79,49,60,45],[79,52,60,48],[79,55,60,37],[79,59,60,55,"x"],[79,60,60,26],[79,61,60,6],[80,0,61,5],[80,9,59,11],[80,15,61,11],[80,19,61,15],[80,20,61,16],[80,21,61,15],[80,25,61,21,"x"],[80,26,61,15],[80,30,61,26,"x"],[80,31,61,27],[80,34,61,30],[80,35,61,31],[80,36,61,11],[80,38,61,34],[81,0,62,6],[81,17,62,13],[81,23,62,19],[81,26,62,13],[81,29,62,25,"x"],[81,30,62,26],[81,34,62,30],[81,40,62,36],[81,41,62,37],[81,47,62,43,"x"],[81,48,62,44],[81,51,62,47],[81,54,62,36],[81,58,62,54,"x"],[81,59,62,26],[81,60,62,6],[82,0,63,5],[82,9,61,11],[82,15,63,11],[82,19,63,15],[82,24,63,20,"x"],[82,25,63,15],[82,29,63,25,"x"],[82,30,63,26],[82,33,63,29],[82,34,63,11],[82,36,63,32],[83,0,64,6],[83,17,64,13],[83,23,64,19],[83,26,64,13],[83,29,64,25],[83,30,64,26],[83,31,64,27],[83,34,64,26],[83,37,64,33,"x"],[83,38,64,34],[83,41,64,37],[83,44,64,25],[83,48,64,44,"x"],[83,49,64,25],[83,52,64,48,"x"],[83,53,64,6],[84,0,65,5],[84,9,63,11],[84,15,65,11],[85,0,66,6],[85,17,66,13],[85,18,66,6],[86,0,67,5],[87,0,68,3],[90,13,70,2],[90,32,70,12,"x"],[90,33,70,2],[90,35,70,15],[91,0,71,4],[91,12,71,8],[91,13,71,9],[91,16,71,8],[91,20,71,16,"x"],[91,21,71,8],[91,25,71,21,"x"],[91,26,71,22],[91,29,71,25],[91,30,71,26],[91,33,71,4],[91,35,71,31],[92,0,72,6],[92,17,73,8],[92,24,73,15],[92,28,73,8],[92,31,74,8,"x"],[92,32,74,9],[92,36,74,13],[92,38,74,15],[92,44,74,21],[92,48,74,13],[92,52,74,29,"x"],[92,53,74,30],[92,57,74,34],[92,59,74,36],[92,65,74,42],[92,68,74,34],[92,72,74,49],[92,73,74,50],[92,75,74,52],[92,81,74,58],[92,84,74,50],[92,88,74,65,"x"],[92,89,74,66],[92,92,74,69],[92,95,74,49],[92,99,74,76,"x"],[92,100,74,30],[92,101,74,9],[92,102,72,6],[93,0,76,5],[93,9,71,4],[93,15,76,11],[93,19,76,15],[93,26,76,22,"x"],[93,27,76,15],[93,31,76,27,"x"],[93,32,76,28],[93,35,76,31],[93,38,76,11],[93,40,76,36],[94,0,77,6],[94,17,78,8],[94,24,78,15],[94,28,78,8],[94,31,79,8,"x"],[94,32,79,9],[94,36,79,13],[94,42,79,19],[94,46,79,13],[94,49,79,26,"x"],[94,50,79,27],[94,54,79,31],[94,56,79,33],[94,62,79,39],[94,65,79,31],[94,69,79,46],[94,70,79,47],[94,76,79,53],[94,79,79,47],[94,82,79,59,"x"],[94,83,79,60],[94,86,79,63],[94,89,79,46],[94,93,79,70,"x"],[94,94,79,27],[94,95,79,9],[94,96,77,6],[95,0,81,5],[95,9,76,11],[95,15,81,11],[95,19,81,15],[95,26,81,22,"x"],[95,27,81,15],[95,31,81,27,"x"],[95,32,81,28],[95,36,81,32],[95,39,81,11],[95,41,81,37],[96,0,82,6],[96,17,83,8],[96,25,83,16],[96,30,83,8],[96,33,84,8,"x"],[96,34,84,9],[96,38,85,11],[96,40,85,13],[96,48,85,21],[96,52,85,11],[96,56,85,29,"x"],[96,57,85,30],[96,61,85,34],[96,68,85,41],[96,72,85,34],[96,75,85,48],[96,76,85,49],[96,78,85,51],[96,84,85,57],[96,88,85,49],[96,92,85,65,"x"],[96,93,85,66],[96,96,85,69],[96,100,85,48],[96,104,85,77,"x"],[96,105,85,30],[96,106,84,9],[96,107,82,6],[97,0,87,5],[97,9,81,11],[97,15,87,11],[97,19,87,15],[97,20,87,16],[97,23,87,15],[97,27,87,23,"x"],[97,28,87,15],[97,32,87,28,"x"],[97,33,87,29],[97,37,87,33],[97,38,87,34],[97,41,87,11],[97,43,87,39],[98,0,88,6],[98,17,89,8],[98,25,89,16],[98,30,89,8],[98,33,90,8,"x"],[98,34,90,9],[98,38,90,13],[98,46,90,21],[98,50,90,13],[98,53,90,28,"x"],[98,54,90,29],[98,58,90,33],[98,65,90,40],[98,69,90,33],[98,72,90,47],[98,73,90,48],[98,79,90,54],[98,83,90,48],[98,86,90,61,"x"],[98,87,90,62],[98,90,90,65],[98,94,90,47],[98,98,90,73,"x"],[98,99,90,29],[98,100,90,9],[98,101,88,6],[99,0,92,5],[99,9,87,11],[99,15,92,11],[99,19,92,15],[99,20,92,16],[99,23,92,15],[99,27,92,23,"x"],[99,28,92,15],[99,32,92,28,"x"],[99,33,92,29],[99,36,92,32],[99,39,92,11],[99,41,92,37],[100,0,93,6],[100,17,93,13],[100,25,93,21],[100,30,93,13],[100,33,93,29,"x"],[100,34,93,30],[100,37,93,33,"x"],[100,38,93,29],[100,42,93,38],[100,44,93,40],[100,50,93,46],[100,53,93,38],[100,57,93,54,"x"],[100,58,93,55],[100,61,93,58,"x"],[100,62,93,53],[100,65,93,63],[100,68,93,29],[100,69,93,6],[101,0,94,5],[101,9,92,11],[101,15,94,11],[102,0,95,6],[102,17,95,13],[102,18,95,6],[103,0,96,5],[104,0,97,3],[107,13,99,2],[107,34,99,14,"seq"],[107,37,99,2],[107,39,99,19,"t"],[107,40,99,2],[107,42,99,22],[108,0,100,4],[108,12,100,8,"f"],[108,13,100,9],[108,16,100,12],[108,21,100,17,"baseFunc"],[108,29,100,4],[109,0,101,4],[109,12,101,8,"rangeInt"],[109,20,101,16],[109,23,101,19],[109,28,101,24,"baseFuncRangeInt"],[109,44,101,4],[110,0,102,4],[110,12,102,8,"tInt"],[110,16,102,12],[110,19,102,15,"Math"],[110,23,102,19],[110,24,102,20,"floor"],[110,29,102,15],[110,30,102,26,"t"],[110,31,102,15],[110,32,102,4],[111,0,103,4],[111,12,103,8,"result"],[111,18,103,14],[111,21,103,17],[111,22,103,4],[113,0,104,4],[113,13,104,9],[113,17,104,13,"i"],[113,18,104,14],[113,21,104,17,"tInt"],[113,25,104,21],[113,28,104,24,"rangeInt"],[113,36,104,4],[113,38,104,34,"i"],[113,39,104,35],[113,43,104,39,"tInt"],[113,47,104,43],[113,50,104,46,"rangeInt"],[113,58,104,4],[113,60,104,56,"i"],[113,61,104,57],[113,63,104,4],[113,65,104,61],[114,0,105,6,"result"],[114,10,105,6,"result"],[114,16,105,12],[114,20,105,16,"seq"],[114,23,105,19],[114,24,105,20,"i"],[114,25,105,19],[114,26,105,16],[114,29,105,25,"f"],[114,30,105,26],[114,31,105,27,"t"],[114,32,105,28],[114,35,105,31,"i"],[114,36,105,26],[114,37,105,6],[115,0,106,5],[117,0,107,4],[117,15,107,11,"result"],[117,21,107,4],[118,0,108,3],[121,13,110,2],[121,32,110,12,"x"],[121,33,110,2],[121,35,110,15],[122,0,111,4],[122,12,111,8],[122,13,111,9],[122,14,111,8],[122,18,111,14,"x"],[122,19,111,8],[122,23,111,19,"x"],[122,24,111,20],[122,27,111,23],[122,28,111,24],[122,29,111,4],[122,31,111,27],[123,0,112,6],[123,17,113,8],[123,24,113,15],[123,28,113,8],[123,31,114,8,"x"],[123,32,114,9],[123,36,115,11],[123,38,115,13],[123,44,115,19],[123,47,115,11],[123,51,116,12,"x"],[123,52,116,13],[123,56,117,15],[123,58,117,17],[123,64,117,23],[123,67,117,15],[123,71,118,16,"x"],[123,72,118,17],[123,76,118,21],[123,78,118,23],[123,84,118,29],[123,87,118,21],[123,91,118,36],[123,92,118,37],[123,94,118,39],[123,100,118,45],[123,103,118,37],[123,107,118,52,"x"],[123,108,118,53],[123,111,118,56],[123,115,118,36],[123,119,118,64,"x"],[123,120,118,17],[123,121,116,13],[123,122,114,9],[123,123,112,6],[124,0,120,5],[124,9,111,4],[124,15,120,11],[124,19,120,15],[124,24,120,20,"x"],[124,25,120,15],[124,29,120,25,"x"],[124,30,120,26],[124,33,120,29],[124,34,120,11],[124,36,120,32],[125,0,121,6],[125,17,122,8],[125,24,122,15],[125,28,122,8],[125,31,122,22,"x"],[125,32,122,23],[125,35,122,26,"x"],[125,36,122,22],[125,40,122,31],[125,42,122,33],[125,48,122,39],[125,51,122,31],[125,55,122,46],[125,56,122,47],[125,62,122,53],[125,65,122,47],[125,68,122,59,"x"],[125,69,122,60],[125,72,122,63],[125,76,122,46],[125,80,122,71,"x"],[125,81,122,46],[125,84,122,75,"x"],[125,85,122,22],[125,86,121,6],[126,0,124,5],[126,9,120,11],[126,15,124,11],[126,19,124,15],[126,24,124,20,"x"],[126,25,124,15],[126,29,124,25,"x"],[126,30,124,26],[126,34,124,30],[126,35,124,11],[126,37,124,33],[127,0,125,6],[127,17,126,8],[127,24,126,15],[127,28,126,8],[127,31,127,8,"x"],[127,32,127,9],[127,36,128,11],[127,38,128,13],[127,45,128,20],[127,48,128,11],[127,52,129,12,"x"],[127,53,129,13],[127,57,129,17],[127,63,129,23],[127,66,129,17],[127,69,129,29,"x"],[127,70,129,30],[127,74,129,34],[127,76,129,36],[127,82,129,42],[127,85,129,34],[127,89,129,49],[127,90,129,50],[127,96,129,56],[127,99,129,50],[127,102,129,62,"x"],[127,103,129,63],[127,106,129,66],[127,111,129,49],[127,115,129,75,"x"],[127,116,129,30],[127,117,129,13],[127,118,127,9],[127,119,125,6],[128,0,131,5],[128,9,124,11],[128,15,131,11],[128,19,131,15],[128,20,131,16],[128,21,131,15],[128,25,131,21,"x"],[128,26,131,15],[128,30,131,26,"x"],[128,31,131,27],[128,34,131,30],[128,35,131,31],[128,36,131,11],[128,38,131,34],[129,0,132,6],[129,17,133,8],[129,24,133,15],[129,28,133,8],[129,31,134,8,"x"],[129,32,134,9],[129,36,135,11],[129,43,135,18],[129,46,135,11],[129,49,136,12,"x"],[129,50,136,13],[129,54,136,17],[129,60,136,23],[129,63,136,17],[129,66,136,29,"x"],[129,67,136,30],[129,71,136,34],[129,77,136,40],[129,80,136,34],[129,83,136,46],[129,84,136,47],[129,90,136,53],[129,93,136,47],[129,96,136,59,"x"],[129,97,136,60],[129,100,136,63],[129,105,136,46],[129,109,136,72,"x"],[129,110,136,30],[129,111,136,13],[129,112,134,9],[129,113,132,6],[130,0,138,5],[130,9,131,11],[130,15,138,11],[130,19,138,15],[130,24,138,20,"x"],[130,25,138,15],[130,29,138,25,"x"],[130,30,138,26],[130,33,138,29],[130,34,138,11],[130,36,138,32],[131,0,139,6],[131,17,140,8],[131,24,140,15],[131,28,140,8],[131,31,141,8,"x"],[131,32,141,9],[131,36,142,11],[131,42,142,17],[131,45,142,11],[131,48,143,12,"x"],[131,49,143,13],[131,53,144,15],[131,55,144,17],[131,61,144,23],[131,64,144,15],[131,68,144,30,"x"],[131,69,144,31],[131,73,144,35],[131,79,144,41],[131,82,144,35],[131,85,144,47],[131,86,144,48],[131,88,144,50],[131,94,144,56],[131,97,144,48],[131,101,144,63,"x"],[131,102,144,64],[131,105,144,67],[131,109,144,47],[131,113,144,75,"x"],[131,114,144,31],[131,115,143,13],[131,116,141,9],[131,117,139,6],[132,0,146,5],[132,9,138,11],[132,15,146,11],[132,19,146,15],[132,20,146,16],[132,21,146,15],[132,25,146,21,"x"],[132,26,146,15],[132,30,146,26,"x"],[132,31,146,27],[132,34,146,30],[132,35,146,11],[132,37,146,33],[133,0,147,6],[133,17,148,8],[133,24,148,15],[133,28,148,8],[133,31,148,22,"x"],[133,32,148,23],[133,35,148,26,"x"],[133,36,148,22],[133,40,148,31],[133,42,148,33],[133,48,148,39],[133,51,148,31],[133,55,148,46],[133,56,148,47],[133,62,148,53],[133,65,148,47],[133,68,148,59,"x"],[133,69,148,60],[133,72,148,63],[133,76,148,46],[133,80,148,71,"x"],[133,81,148,46],[133,84,148,75,"x"],[133,85,148,22],[133,86,147,6],[134,0,150,5],[134,9,146,11],[134,15,150,11],[135,0,151,6],[135,17,151,13],[135,18,151,6],[136,0,152,5],[137,0,153,3],[140,13,155,2],[140,29,155,9,"t"],[140,30,155,2],[140,32,155,12],[141,0,156,4,"t"],[141,8,156,4,"t"],[141,9,156,5],[141,12,156,8,"t"],[141,13,156,9],[141,17,156,13],[141,18,156,14],[141,23,156,19,"degree"],[141,29,156,14],[141,32,156,28],[141,33,156,13],[141,37,156,33],[141,38,156,13],[141,41,156,37],[141,46,156,42,"points"],[141,52,156,37],[141,53,156,49,"length"],[141,59,156,9],[141,60,156,4],[143,0,157,4],[143,12,157,8],[143,17,157,13,"dimension"],[143,26,157,8],[143,31,157,27],[143,32,157,4],[143,34,157,30],[144,0,158,6],[144,17,158,13],[144,18,159,8],[144,23,159,13,"getInterpol"],[144,34,159,8],[144,35,159,25],[144,40,159,30,"seqAt"],[144,45,159,25],[144,46,159,36],[144,47,159,25],[144,48,159,8],[144,50,159,40,"t"],[144,51,159,8],[144,52,158,13],[144,54,160,8],[144,59,160,13,"getInterpol"],[144,70,160,8],[144,71,160,25],[144,76,160,30,"seqAt"],[144,81,160,25],[144,82,160,36],[144,83,160,25],[144,84,160,8],[144,86,160,40,"t"],[144,87,160,8],[144,88,158,13],[144,89,158,6],[145,0,162,5],[145,9,157,4],[145,15,162,11],[145,19,162,15],[145,24,162,20,"dimension"],[145,33,162,15],[145,38,162,34],[145,39,162,11],[145,41,162,37],[146,0,163,6],[146,17,163,13],[146,18,164,8],[146,23,164,13,"getInterpol"],[146,34,164,8],[146,35,164,25],[146,40,164,30,"seqAt"],[146,45,164,25],[146,46,164,36],[146,47,164,25],[146,48,164,8],[146,50,164,40,"t"],[146,51,164,8],[146,52,163,13],[146,54,165,8],[146,59,165,13,"getInterpol"],[146,70,165,8],[146,71,165,25],[146,76,165,30,"seqAt"],[146,81,165,25],[146,82,165,36],[146,83,165,25],[146,84,165,8],[146,86,165,40,"t"],[146,87,165,8],[146,88,163,13],[146,90,166,8],[146,95,166,13,"getInterpol"],[146,106,166,8],[146,107,166,25],[146,112,166,30,"seqAt"],[146,117,166,25],[146,118,166,36],[146,119,166,25],[146,120,166,8],[146,122,166,40,"t"],[146,123,166,8],[146,124,163,13],[146,125,163,6],[147,0,168,5],[147,9,162,11],[147,15,168,11],[148,0,169,6],[148,14,169,10,"res"],[148,17,169,13],[148,20,169,16],[148,22,169,6],[150,0,170,6],[150,15,170,11],[150,19,170,15,"i"],[150,20,170,16],[150,23,170,19],[150,24,170,6],[150,26,170,22,"i"],[150,27,170,23],[150,30,170,26],[150,35,170,31,"dimension"],[150,44,170,6],[150,46,170,42,"i"],[150,47,170,43],[150,49,170,6],[150,51,170,47],[151,0,171,8,"res"],[151,12,171,8,"res"],[151,15,171,11],[151,16,171,12,"push"],[151,20,171,8],[151,21,171,17],[151,26,171,22,"getInterpol"],[151,37,171,17],[151,38,171,34],[151,43,171,39,"seqAt"],[151,48,171,34],[151,49,171,45,"i"],[151,50,171,34],[151,51,171,17],[151,53,171,49,"t"],[151,54,171,17],[151,55,171,8],[152,0,172,7],[154,0,173,6],[154,17,173,13,"res"],[154,20,173,6],[155,0,174,5],[156,0,175,3],[161,0,178,15],[161,11,178,24,"bSplineInterpolation"],[161,31,178,15],[161,38,184,3],[162,0,184,3],[162,8,179,2,"data"],[162,12,184,3],[162,20,179,2,"data"],[162,24,184,3],[163,0,184,3],[163,27,180,2,"degree"],[163,33,184,3],[164,0,184,3],[164,8,180,2,"degree"],[164,14,184,3],[164,42,180,11],[164,43,184,3],[165,0,184,3],[165,8,181,2,"range"],[165,13,184,3],[165,21,181,2,"range"],[165,26,184,3],[166,0,184,3],[166,36,182,2,"includeExtremes"],[166,51,184,3],[167,0,184,3],[167,8,182,2,"includeExtremes"],[167,23,184,3],[167,60,182,20],[167,65,184,3],[168,0,184,3],[168,37,183,2,"removePointsSurroundingExtremes"],[168,68,184,3],[169,0,184,3],[169,8,183,2,"removePointsSurroundingExtremes"],[169,39,184,3],[169,77,183,36],[169,81,184,3],[171,0,185,2],[171,8,185,6],[171,9,185,7,"data"],[171,13,185,6],[171,17,185,15,"data"],[171,21,185,19],[171,22,185,20,"length"],[171,28,185,15],[171,33,185,31],[171,34,185,2],[171,36,185,34],[172,0,186,4],[172,13,186,11],[173,0,186,11],[173,15,186,17],[173,17,186,11],[174,0,186,11],[174,7,186,4],[175,0,187,3],[177,0,188,2],[177,8,188,8,"parsed"],[177,14,188,14],[177,17,188,17,"data"],[177,21,188,21],[177,22,188,22,"map"],[177,25,188,17],[177,26,188,26],[178,0,188,26],[178,10,188,29,"x"],[178,11,188,26],[178,20,188,29,"x"],[178,21,188,26],[179,0,188,26],[179,10,188,32,"y"],[179,11,188,26],[179,20,188,32,"y"],[179,21,188,26],[180,0,188,26],[180,13,188,40],[180,14,188,41,"x"],[180,15,188,40],[180,17,188,44,"y"],[180,18,188,40],[180,19,188,26],[181,0,188,26],[181,5,188,17],[181,6,188,2],[182,0,189,2],[182,8,189,8,"spline"],[182,14,189,14],[182,17,189,17],[182,21,189,21,"BSpline"],[182,28,189,17],[182,29,189,29,"parsed"],[182,35,189,17],[182,37,189,37,"degree"],[182,43,189,17],[182,45,189,45],[182,49,189,17],[182,50,189,2],[183,0,191,2],[183,8,191,8,"res"],[183,11,191,11],[183,14,191,14],[183,16,191,2],[185,0,192,2],[185,9,192,7],[185,13,192,11,"i"],[185,14,192,12],[185,17,192,15],[185,18,192,2],[185,20,192,18,"i"],[185,21,192,19],[185,24,192,22,"range"],[185,29,192,2],[185,31,192,29,"i"],[185,32,192,30],[185,34,192,2],[185,36,192,34],[186,0,193,4,"res"],[186,6,193,4,"res"],[186,9,193,7],[186,10,193,8,"push"],[186,14,193,4],[186,15,193,13,"spline"],[186,21,193,19],[186,22,193,20,"calcAt"],[186,28,193,13],[186,29,193,27,"i"],[186,30,193,28],[186,34,193,32,"range"],[186,39,193,37],[186,42,193,40],[186,43,193,28],[186,44,193,13],[186,45,193,4],[187,0,194,3],[189,0,195,2],[189,11,195,9],[189,97,196,4,"res"],[189,100,196,7],[189,101,196,8,"map"],[189,104,196,4],[189,105,196,12],[190,0,196,12],[191,0,196,12],[191,10,196,14,"x"],[191,11,196,12],[192,0,196,12],[192,10,196,17,"y"],[192,11,196,12],[194,0,196,12],[194,13,196,25],[195,0,196,27,"x"],[195,8,196,27,"x"],[195,9,196,28],[195,11,196,27,"x"],[195,12,196,25],[196,0,196,30,"y"],[196,8,196,30,"y"],[196,9,196,31],[196,11,196,30,"y"],[197,0,196,25],[197,7,196,12],[198,0,196,12],[198,5,196,4],[198,6,195,9],[198,8,197,4,"data"],[198,12,195,9],[198,14,198,4,"includeExtremes"],[198,29,195,9],[198,31,199,4,"removePointsSurroundingExtremes"],[198,62,195,9],[198,63,195,2],[199,0,201,1]],"functionMap":{"names":["<global>","BSpline","BSpline#constructor","BSpline#seqAt","<anonymous>","BSpline#basisDeg2","BSpline#basisDeg3","BSpline#basisDeg4","BSpline#getInterpol","BSpline#basisDeg5","BSpline#calcAt","bSplineInterpolation","data.map$argument_0","res.map$argument_0"],"mappings":"AAA;ACE;ECC;GDwB;EEE;WCG;KDQ;GFC;EIE;GJU;EKE;GLY;EME;GN2B;EOE;GPS;EQE;GR2C;ESE;GToB;CDC;eWE;WPQ,QO;0BCE,oBD;YEQ,sBF;CXK"}},"type":"js/module"}]}