{"dependencies":[{"name":"./base64","data":{"asyncType":null,"locs":[{"start":{"line":106,"column":15},"end":{"line":106,"column":28}},{"start":{"line":127,"column":12},"end":{"line":127,"column":25}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var VLQ_BASE_SHIFT = 5;\n  var VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n  var VLQ_BASE_MASK = VLQ_BASE - 1;\n  var VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n  function toVLQSigned(aValue) {\n    return aValue < 0 ? (-aValue << 1) + 1 : (aValue << 1) + 0;\n  }\n\n  function fromVLQSigned(aValue) {\n    var isNegative = (aValue & 1) === 1;\n    var shifted = aValue >> 1;\n    return isNegative ? -shifted : shifted;\n  }\n\n  exports.encode = function base64VLQ_encode(aValue) {\n    var encoded = \"\";\n    var digit;\n    var vlq = toVLQSigned(aValue);\n\n    do {\n      digit = vlq & VLQ_BASE_MASK;\n      vlq >>>= VLQ_BASE_SHIFT;\n\n      if (vlq > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n\n      encoded += _$$_REQUIRE(_dependencyMap[0], \"./base64\").encode(digit);\n    } while (vlq > 0);\n\n    return encoded;\n  };\n\n  exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n    var strLen = aStr.length;\n    var result = 0;\n    var shift = 0;\n    var continuation, digit;\n\n    do {\n      if (aIndex >= strLen) {\n        throw new Error(\"Expected more digits in base 64 VLQ value.\");\n      }\n\n      digit = _$$_REQUIRE(_dependencyMap[0], \"./base64\").decode(aStr.charCodeAt(aIndex++));\n\n      if (digit === -1) {\n        throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n      }\n\n      continuation = !!(digit & VLQ_CONTINUATION_BIT);\n      digit &= VLQ_BASE_MASK;\n      result = result + (digit << shift);\n      shift += VLQ_BASE_SHIFT;\n    } while (continuation);\n\n    aOutParam.value = fromVLQSigned(result);\n    aOutParam.rest = aIndex;\n  };\n});","lineCount":62,"map":[[2,0,52,0],[2,6,52,4,"VLQ_BASE_SHIFT"],[2,20,52,18],[2,23,52,21],[2,24,52,0],[3,0,55,0],[3,6,55,4,"VLQ_BASE"],[3,14,55,12],[3,17,55,15],[3,22,55,20,"VLQ_BASE_SHIFT"],[3,36,55,0],[4,0,58,0],[4,6,58,4,"VLQ_BASE_MASK"],[4,19,58,17],[4,22,58,20,"VLQ_BASE"],[4,30,58,28],[4,33,58,31],[4,34,58,0],[5,0,61,0],[5,6,61,4,"VLQ_CONTINUATION_BIT"],[5,26,61,24],[5,29,61,27,"VLQ_BASE"],[5,37,61,0],[7,0,69,0],[7,11,69,9,"toVLQSigned"],[7,22,69,0],[7,23,69,21,"aValue"],[7,29,69,0],[7,31,69,29],[8,0,70,2],[8,11,70,9,"aValue"],[8,17,70,15],[8,20,70,18],[8,21,70,9],[8,24,71,6],[8,25,71,8],[8,26,71,9,"aValue"],[8,32,71,7],[8,36,71,20],[8,37,71,6],[8,41,71,25],[8,42,70,9],[8,45,72,6],[8,46,72,7,"aValue"],[8,52,72,13],[8,56,72,17],[8,57,72,6],[8,61,72,22],[8,62,70,2],[9,0,73,1],[11,0,81,0],[11,11,81,9,"fromVLQSigned"],[11,24,81,0],[11,25,81,23,"aValue"],[11,31,81,0],[11,33,81,31],[12,0,82,2],[12,8,82,6,"isNegative"],[12,18,82,16],[12,21,82,19],[12,22,82,20,"aValue"],[12,28,82,26],[12,31,82,29],[12,32,82,19],[12,38,82,36],[12,39,82,2],[13,0,83,2],[13,8,83,6,"shifted"],[13,15,83,13],[13,18,83,16,"aValue"],[13,24,83,22],[13,28,83,26],[13,29,83,2],[14,0,84,2],[14,11,84,9,"isNegative"],[14,21,84,19],[14,24,85,6],[14,25,85,7,"shifted"],[14,32,84,19],[14,35,86,6,"shifted"],[14,42,84,2],[15,0,87,1],[17,0,92,0,"exports"],[17,2,92,0,"exports"],[17,9,92,7],[17,10,92,8,"encode"],[17,16,92,0],[17,19,92,17],[17,28,92,26,"base64VLQ_encode"],[17,44,92,17],[17,45,92,43,"aValue"],[17,51,92,17],[17,53,92,51],[18,0,93,2],[18,8,93,6,"encoded"],[18,15,93,13],[18,18,93,16],[18,20,93,2],[19,0,94,2],[19,8,94,6,"digit"],[19,13,94,2],[20,0,96,2],[20,8,96,6,"vlq"],[20,11,96,9],[20,14,96,12,"toVLQSigned"],[20,25,96,23],[20,26,96,24,"aValue"],[20,32,96,23],[20,33,96,2],[22,0,98,2],[22,7,98,5],[23,0,99,4,"digit"],[23,6,99,4,"digit"],[23,11,99,9],[23,14,99,12,"vlq"],[23,17,99,15],[23,20,99,18,"VLQ_BASE_MASK"],[23,33,99,4],[24,0,100,4,"vlq"],[24,6,100,4,"vlq"],[24,9,100,7],[24,15,100,13,"VLQ_BASE_SHIFT"],[24,29,100,4],[26,0,101,4],[26,10,101,8,"vlq"],[26,13,101,11],[26,16,101,14],[26,17,101,4],[26,19,101,17],[27,0,104,6,"digit"],[27,8,104,6,"digit"],[27,13,104,11],[27,17,104,15,"VLQ_CONTINUATION_BIT"],[27,37,104,6],[28,0,105,5],[30,0,106,4,"encoded"],[30,6,106,4,"encoded"],[30,13,106,11],[30,17,106,15],[30,60,106,22,"encode"],[30,66,106,15],[30,67,106,29,"digit"],[30,72,106,15],[30,73,106,4],[31,0,107,3],[31,5,98,2],[31,13,107,11,"vlq"],[31,16,107,14],[31,19,107,17],[31,20,98,2],[33,0,109,2],[33,11,109,9,"encoded"],[33,18,109,2],[34,0,110,1],[34,3,92,0],[36,0,116,0,"exports"],[36,2,116,0,"exports"],[36,9,116,7],[36,10,116,8,"decode"],[36,16,116,0],[36,19,116,17],[36,28,116,26,"base64VLQ_decode"],[36,44,116,17],[36,45,116,43,"aStr"],[36,49,116,17],[36,51,116,49,"aIndex"],[36,57,116,17],[36,59,116,57,"aOutParam"],[36,68,116,17],[36,70,116,68],[37,0,117,2],[37,8,117,6,"strLen"],[37,14,117,12],[37,17,117,15,"aStr"],[37,21,117,19],[37,22,117,20,"length"],[37,28,117,2],[38,0,118,2],[38,8,118,6,"result"],[38,14,118,12],[38,17,118,15],[38,18,118,2],[39,0,119,2],[39,8,119,6,"shift"],[39,13,119,11],[39,16,119,14],[39,17,119,2],[40,0,120,2],[40,8,120,6,"continuation"],[40,20,120,2],[40,22,120,20,"digit"],[40,27,120,2],[42,0,122,2],[42,7,122,5],[43,0,123,4],[43,10,123,8,"aIndex"],[43,16,123,14],[43,20,123,18,"strLen"],[43,26,123,4],[43,28,123,26],[44,0,124,6],[44,14,124,12],[44,18,124,16,"Error"],[44,23,124,12],[44,24,124,22],[44,68,124,12],[44,69,124,6],[45,0,125,5],[47,0,127,4,"digit"],[47,6,127,4,"digit"],[47,11,127,9],[47,14,127,12],[47,57,127,19,"decode"],[47,63,127,12],[47,64,127,26,"aStr"],[47,68,127,30],[47,69,127,31,"charCodeAt"],[47,79,127,26],[47,80,127,42,"aIndex"],[47,86,127,48],[47,88,127,26],[47,89,127,12],[47,90,127,4],[49,0,128,4],[49,10,128,8,"digit"],[49,15,128,13],[49,20,128,18],[49,21,128,19],[49,22,128,4],[49,24,128,22],[50,0,129,6],[50,14,129,12],[50,18,129,16,"Error"],[50,23,129,12],[50,24,129,22],[50,51,129,49,"aStr"],[50,55,129,53],[50,56,129,54,"charAt"],[50,62,129,49],[50,63,129,61,"aIndex"],[50,69,129,67],[50,72,129,70],[50,73,129,49],[50,74,129,12],[50,75,129,6],[51,0,130,5],[53,0,132,4,"continuation"],[53,6,132,4,"continuation"],[53,18,132,16],[53,21,132,19],[53,22,132,20],[53,24,132,22,"digit"],[53,29,132,27],[53,32,132,30,"VLQ_CONTINUATION_BIT"],[53,52,132,20],[53,53,132,4],[54,0,133,4,"digit"],[54,6,133,4,"digit"],[54,11,133,9],[54,15,133,13,"VLQ_BASE_MASK"],[54,28,133,4],[55,0,134,4,"result"],[55,6,134,4,"result"],[55,12,134,10],[55,15,134,13,"result"],[55,21,134,19],[55,25,134,23,"digit"],[55,30,134,28],[55,34,134,32,"shift"],[55,39,134,19],[55,40,134,4],[56,0,135,4,"shift"],[56,6,135,4,"shift"],[56,11,135,9],[56,15,135,13,"VLQ_BASE_SHIFT"],[56,29,135,4],[57,0,136,3],[57,5,122,2],[57,13,136,11,"continuation"],[57,25,122,2],[59,0,138,2,"aOutParam"],[59,4,138,2,"aOutParam"],[59,13,138,11],[59,14,138,12,"value"],[59,19,138,2],[59,22,138,20,"fromVLQSigned"],[59,35,138,33],[59,36,138,34,"result"],[59,42,138,33],[59,43,138,2],[60,0,139,2,"aOutParam"],[60,4,139,2,"aOutParam"],[60,13,139,11],[60,14,139,12,"rest"],[60,18,139,2],[60,21,139,19,"aIndex"],[60,27,139,2],[61,0,140,1],[61,3,116,0]],"functionMap":{"names":["<global>","toVLQSigned","fromVLQSigned","base64VLQ_encode","base64VLQ_decode"],"mappings":"AAA;ACoE;CDI;AEQ;CFM;iBGK;CHkB;iBIM;CJwB"}},"type":"js/module"}]}