{"dependencies":[{"name":"../tokenizer/const","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":10},"end":{"line":8,"column":18}},{"start":{"line":9,"column":17},"end":{"line":9,"column":32}},{"start":{"line":10,"column":14},"end":{"line":10,"column":26}},{"start":{"line":122,"column":44},"end":{"line":122,"column":54}},{"start":{"line":128,"column":31},"end":{"line":128,"column":41}},{"start":{"line":209,"column":22},"end":{"line":209,"column":32}}]}},{"name":"../tokenizer/utils","data":{"asyncType":null,"locs":[{"start":{"line":53,"column":19},"end":{"line":58,"column":13}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var EOF = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer/const\").TYPE.EOF;\n\n  var WHITESPACE = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer/const\").TYPE.WhiteSpace;\n\n  var COMMENT = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer/const\").TYPE.Comment;\n\n  var OFFSET_MASK = 0x00FFFFFF;\n  var TYPE_SHIFT = 24;\n\n  var TokenStream = function TokenStream() {\n    this.offsetAndType = null;\n    this.balance = null;\n    this.reset();\n  };\n\n  TokenStream.prototype = {\n    reset: function reset() {\n      this.eof = false;\n      this.tokenIndex = -1;\n      this.tokenType = 0;\n      this.tokenStart = this.firstCharOffset;\n      this.tokenEnd = this.firstCharOffset;\n    },\n    lookupType: function lookupType(offset) {\n      offset += this.tokenIndex;\n\n      if (offset < this.tokenCount) {\n        return this.offsetAndType[offset] >> TYPE_SHIFT;\n      }\n\n      return EOF;\n    },\n    lookupOffset: function lookupOffset(offset) {\n      offset += this.tokenIndex;\n\n      if (offset < this.tokenCount) {\n        return this.offsetAndType[offset - 1] & OFFSET_MASK;\n      }\n\n      return this.source.length;\n    },\n    lookupValue: function lookupValue(offset, referenceStr) {\n      offset += this.tokenIndex;\n\n      if (offset < this.tokenCount) {\n        return _$$_REQUIRE(_dependencyMap[1], \"../tokenizer/utils\").cmpStr(this.source, this.offsetAndType[offset - 1] & OFFSET_MASK, this.offsetAndType[offset] & OFFSET_MASK, referenceStr);\n      }\n\n      return false;\n    },\n    getTokenStart: function getTokenStart(tokenIndex) {\n      if (tokenIndex === this.tokenIndex) {\n        return this.tokenStart;\n      }\n\n      if (tokenIndex > 0) {\n        return tokenIndex < this.tokenCount ? this.offsetAndType[tokenIndex - 1] & OFFSET_MASK : this.offsetAndType[this.tokenCount] & OFFSET_MASK;\n      }\n\n      return this.firstCharOffset;\n    },\n    getRawLength: function getRawLength(startToken, mode) {\n      var cursor = startToken;\n      var balanceEnd;\n      var offset = this.offsetAndType[Math.max(cursor - 1, 0)] & OFFSET_MASK;\n      var type;\n\n      loop: for (; cursor < this.tokenCount; cursor++) {\n        balanceEnd = this.balance[cursor];\n\n        if (balanceEnd < startToken) {\n          break loop;\n        }\n\n        type = this.offsetAndType[cursor] >> TYPE_SHIFT;\n\n        switch (mode(type, this.source, offset)) {\n          case 1:\n            break loop;\n\n          case 2:\n            cursor++;\n            break loop;\n\n          default:\n            if (this.balance[balanceEnd] === cursor) {\n              cursor = balanceEnd;\n            }\n\n            offset = this.offsetAndType[cursor] & OFFSET_MASK;\n        }\n      }\n\n      return cursor - this.tokenIndex;\n    },\n    isBalanceEdge: function isBalanceEdge(pos) {\n      return this.balance[this.tokenIndex] < pos;\n    },\n    isDelim: function isDelim(code, offset) {\n      if (offset) {\n        return this.lookupType(offset) === _$$_REQUIRE(_dependencyMap[0], \"../tokenizer/const\").TYPE.Delim && this.source.charCodeAt(this.lookupOffset(offset)) === code;\n      }\n\n      return this.tokenType === _$$_REQUIRE(_dependencyMap[0], \"../tokenizer/const\").TYPE.Delim && this.source.charCodeAt(this.tokenStart) === code;\n    },\n    getTokenValue: function getTokenValue() {\n      return this.source.substring(this.tokenStart, this.tokenEnd);\n    },\n    getTokenLength: function getTokenLength() {\n      return this.tokenEnd - this.tokenStart;\n    },\n    substrToCursor: function substrToCursor(start) {\n      return this.source.substring(start, this.tokenStart);\n    },\n    skipWS: function skipWS() {\n      for (var i = this.tokenIndex, skipTokenCount = 0; i < this.tokenCount; i++, skipTokenCount++) {\n        if (this.offsetAndType[i] >> TYPE_SHIFT !== WHITESPACE) {\n          break;\n        }\n      }\n\n      if (skipTokenCount > 0) {\n        this.skip(skipTokenCount);\n      }\n    },\n    skipSC: function skipSC() {\n      while (this.tokenType === WHITESPACE || this.tokenType === COMMENT) {\n        this.next();\n      }\n    },\n    skip: function skip(tokenCount) {\n      var next = this.tokenIndex + tokenCount;\n\n      if (next < this.tokenCount) {\n        this.tokenIndex = next;\n        this.tokenStart = this.offsetAndType[next - 1] & OFFSET_MASK;\n        next = this.offsetAndType[next];\n        this.tokenType = next >> TYPE_SHIFT;\n        this.tokenEnd = next & OFFSET_MASK;\n      } else {\n        this.tokenIndex = this.tokenCount;\n        this.next();\n      }\n    },\n    next: function next() {\n      var next = this.tokenIndex + 1;\n\n      if (next < this.tokenCount) {\n        this.tokenIndex = next;\n        this.tokenStart = this.tokenEnd;\n        next = this.offsetAndType[next];\n        this.tokenType = next >> TYPE_SHIFT;\n        this.tokenEnd = next & OFFSET_MASK;\n      } else {\n        this.tokenIndex = this.tokenCount;\n        this.eof = true;\n        this.tokenType = EOF;\n        this.tokenStart = this.tokenEnd = this.source.length;\n      }\n    },\n    forEachToken: function forEachToken(fn) {\n      for (var i = 0, offset = this.firstCharOffset; i < this.tokenCount; i++) {\n        var start = offset;\n        var item = this.offsetAndType[i];\n        var end = item & OFFSET_MASK;\n        var type = item >> TYPE_SHIFT;\n        offset = end;\n        fn(type, start, end, i);\n      }\n    },\n    dump: function dump() {\n      var _this = this;\n\n      var tokens = new Array(this.tokenCount);\n      this.forEachToken(function (type, start, end, index) {\n        tokens[index] = {\n          idx: index,\n          type: _$$_REQUIRE(_dependencyMap[0], \"../tokenizer/const\").NAME[type],\n          chunk: _this.source.substring(start, end),\n          balance: _this.balance[index]\n        };\n      });\n      return tokens;\n    }\n  };\n  module.exports = TokenStream;\n});","lineCount":188,"map":[[2,0,8,0],[2,6,8,4,"EOF"],[2,9,8,7],[2,12,8,10],[2,70,8,15,"EOF"],[2,73,8,0],[4,0,9,0],[4,6,9,4,"WHITESPACE"],[4,16,9,14],[4,19,9,17],[4,77,9,22,"WhiteSpace"],[4,87,9,0],[6,0,10,0],[6,6,10,4,"COMMENT"],[6,13,10,11],[6,16,10,14],[6,74,10,19,"Comment"],[6,81,10,0],[8,0,12,0],[8,6,12,4,"OFFSET_MASK"],[8,17,12,15],[8,20,12,18],[8,30,12,0],[9,0,13,0],[9,6,13,4,"TYPE_SHIFT"],[9,16,13,14],[9,19,13,17],[9,21,13,0],[11,0,15,0],[11,6,15,4,"TokenStream"],[11,17,15,15],[11,20,15,18],[11,29,15,4,"TokenStream"],[11,40,15,18],[11,43,15,29],[12,0,16,4],[12,9,16,9,"offsetAndType"],[12,22,16,4],[12,25,16,25],[12,29,16,4],[13,0,17,4],[13,9,17,9,"balance"],[13,16,17,4],[13,19,17,19],[13,23,17,4],[14,0,19,4],[14,9,19,9,"reset"],[14,14,19,4],[15,0,20,1],[15,3,15,0],[17,0,22,0,"TokenStream"],[17,2,22,0,"TokenStream"],[17,13,22,11],[17,14,22,12,"prototype"],[17,23,22,0],[17,26,22,24],[18,0,23,4,"reset"],[18,4,23,4,"reset"],[18,9,23,9],[18,11,23,11],[18,28,23,22],[19,0,24,8],[19,11,24,13,"eof"],[19,14,24,8],[19,17,24,19],[19,22,24,8],[20,0,25,8],[20,11,25,13,"tokenIndex"],[20,21,25,8],[20,24,25,26],[20,25,25,27],[20,26,25,8],[21,0,26,8],[21,11,26,13,"tokenType"],[21,20,26,8],[21,23,26,25],[21,24,26,8],[22,0,27,8],[22,11,27,13,"tokenStart"],[22,21,27,8],[22,24,27,26],[22,29,27,31,"firstCharOffset"],[22,44,27,8],[23,0,28,8],[23,11,28,13,"tokenEnd"],[23,19,28,8],[23,22,28,24],[23,27,28,29,"firstCharOffset"],[23,42,28,8],[24,0,29,5],[24,5,22,24],[25,0,31,4,"lookupType"],[25,4,31,4,"lookupType"],[25,14,31,14],[25,16,31,16],[25,36,31,25,"offset"],[25,42,31,16],[25,44,31,33],[26,0,32,8,"offset"],[26,6,32,8,"offset"],[26,12,32,14],[26,16,32,18],[26,21,32,23,"tokenIndex"],[26,31,32,8],[28,0,34,8],[28,10,34,12,"offset"],[28,16,34,18],[28,19,34,21],[28,24,34,26,"tokenCount"],[28,34,34,8],[28,36,34,38],[29,0,35,12],[29,15,35,19],[29,20,35,24,"offsetAndType"],[29,33,35,19],[29,34,35,38,"offset"],[29,40,35,19],[29,45,35,49,"TYPE_SHIFT"],[29,55,35,12],[30,0,36,9],[32,0,38,8],[32,13,38,15,"EOF"],[32,16,38,8],[33,0,39,5],[33,5,22,24],[34,0,40,4,"lookupOffset"],[34,4,40,4,"lookupOffset"],[34,16,40,16],[34,18,40,18],[34,40,40,27,"offset"],[34,46,40,18],[34,48,40,35],[35,0,41,8,"offset"],[35,6,41,8,"offset"],[35,12,41,14],[35,16,41,18],[35,21,41,23,"tokenIndex"],[35,31,41,8],[37,0,43,8],[37,10,43,12,"offset"],[37,16,43,18],[37,19,43,21],[37,24,43,26,"tokenCount"],[37,34,43,8],[37,36,43,38],[38,0,44,12],[38,15,44,19],[38,20,44,24,"offsetAndType"],[38,33,44,19],[38,34,44,38,"offset"],[38,40,44,44],[38,43,44,47],[38,44,44,19],[38,48,44,52,"OFFSET_MASK"],[38,59,44,12],[39,0,45,9],[41,0,47,8],[41,13,47,15],[41,18,47,20,"source"],[41,24,47,15],[41,25,47,27,"length"],[41,31,47,8],[42,0,48,5],[42,5,22,24],[43,0,49,4,"lookupValue"],[43,4,49,4,"lookupValue"],[43,15,49,15],[43,17,49,17],[43,38,49,26,"offset"],[43,44,49,17],[43,46,49,34,"referenceStr"],[43,58,49,17],[43,60,49,48],[44,0,50,8,"offset"],[44,6,50,8,"offset"],[44,12,50,14],[44,16,50,18],[44,21,50,23,"tokenIndex"],[44,31,50,8],[46,0,52,8],[46,10,52,12,"offset"],[46,16,52,18],[46,19,52,21],[46,24,52,26,"tokenCount"],[46,34,52,8],[46,36,52,38],[47,0,53,12],[47,15,53,19],[47,75,54,16],[47,80,54,21,"source"],[47,86,53,19],[47,88,55,16],[47,93,55,21,"offsetAndType"],[47,106,55,16],[47,107,55,35,"offset"],[47,113,55,41],[47,116,55,44],[47,117,55,16],[47,121,55,49,"OFFSET_MASK"],[47,132,53,19],[47,134,56,16],[47,139,56,21,"offsetAndType"],[47,152,56,16],[47,153,56,35,"offset"],[47,159,56,16],[47,163,56,45,"OFFSET_MASK"],[47,174,53,19],[47,176,57,16,"referenceStr"],[47,188,53,19],[47,189,53,12],[48,0,59,9],[50,0,61,8],[50,13,61,15],[50,18,61,8],[51,0,62,5],[51,5,22,24],[52,0,63,4,"getTokenStart"],[52,4,63,4,"getTokenStart"],[52,17,63,17],[52,19,63,19],[52,42,63,28,"tokenIndex"],[52,52,63,19],[52,54,63,40],[53,0,64,8],[53,10,64,12,"tokenIndex"],[53,20,64,22],[53,25,64,27],[53,30,64,32,"tokenIndex"],[53,40,64,8],[53,42,64,44],[54,0,65,12],[54,15,65,19],[54,20,65,24,"tokenStart"],[54,30,65,12],[55,0,66,9],[57,0,68,8],[57,10,68,12,"tokenIndex"],[57,20,68,22],[57,23,68,25],[57,24,68,8],[57,26,68,28],[58,0,69,12],[58,15,69,19,"tokenIndex"],[58,25,69,29],[58,28,69,32],[58,33,69,37,"tokenCount"],[58,43,69,19],[58,46,70,18],[58,51,70,23,"offsetAndType"],[58,64,70,18],[58,65,70,37,"tokenIndex"],[58,75,70,47],[58,78,70,50],[58,79,70,18],[58,83,70,55,"OFFSET_MASK"],[58,94,69,19],[58,97,71,18],[58,102,71,23,"offsetAndType"],[58,115,71,18],[58,116,71,37],[58,121,71,42,"tokenCount"],[58,131,71,18],[58,135,71,56,"OFFSET_MASK"],[58,146,69,12],[59,0,72,9],[61,0,74,8],[61,13,74,15],[61,18,74,20,"firstCharOffset"],[61,33,74,8],[62,0,75,5],[62,5,22,24],[63,0,78,4,"getRawLength"],[63,4,78,4,"getRawLength"],[63,16,78,16],[63,18,78,18],[63,40,78,27,"startToken"],[63,50,78,18],[63,52,78,39,"mode"],[63,56,78,18],[63,58,78,45],[64,0,79,8],[64,10,79,12,"cursor"],[64,16,79,18],[64,19,79,21,"startToken"],[64,29,79,8],[65,0,80,8],[65,10,80,12,"balanceEnd"],[65,20,80,8],[66,0,81,8],[66,10,81,12,"offset"],[66,16,81,18],[66,19,81,21],[66,24,81,26,"offsetAndType"],[66,37,81,21],[66,38,81,40,"Math"],[66,42,81,44],[66,43,81,45,"max"],[66,46,81,40],[66,47,81,49,"cursor"],[66,53,81,55],[66,56,81,58],[66,57,81,40],[66,59,81,61],[66,60,81,40],[66,61,81,21],[66,65,81,67,"OFFSET_MASK"],[66,76,81,8],[67,0,82,8],[67,10,82,12,"type"],[67,14,82,8],[69,0,84,8,"loop"],[69,6,84,8,"loop"],[69,10,84,12],[69,12,85,8],[69,19,85,15,"cursor"],[69,25,85,21],[69,28,85,24],[69,33,85,29,"tokenCount"],[69,43,85,8],[69,45,85,41,"cursor"],[69,51,85,47],[69,53,85,8],[69,55,85,51],[70,0,86,12,"balanceEnd"],[70,8,86,12,"balanceEnd"],[70,18,86,22],[70,21,86,25],[70,26,86,30,"balance"],[70,33,86,25],[70,34,86,38,"cursor"],[70,40,86,25],[70,41,86,12],[72,0,89,12],[72,12,89,16,"balanceEnd"],[72,22,89,26],[72,25,89,29,"startToken"],[72,35,89,12],[72,37,89,41],[73,0,90,16],[73,16,90,22,"loop"],[73,20,90,16],[74,0,91,13],[76,0,93,12,"type"],[76,8,93,12,"type"],[76,12,93,16],[76,15,93,19],[76,20,93,24,"offsetAndType"],[76,33,93,19],[76,34,93,38,"cursor"],[76,40,93,19],[76,45,93,49,"TYPE_SHIFT"],[76,55,93,12],[78,0,96,12],[78,16,96,20,"mode"],[78,20,96,24],[78,21,96,25,"type"],[78,25,96,24],[78,27,96,31],[78,32,96,36,"source"],[78,38,96,24],[78,40,96,44,"offset"],[78,46,96,24],[78,47,96,12],[79,0,97,16],[79,15,97,21],[79,16,97,16],[80,0,98,20],[80,18,98,26,"loop"],[80,22,98,20],[82,0,100,16],[82,15,100,21],[82,16,100,16],[83,0,101,20,"cursor"],[83,12,101,20,"cursor"],[83,18,101,26],[84,0,102,20],[84,18,102,26,"loop"],[84,22,102,20],[86,0,104,16],[87,0,106,20],[87,16,106,24],[87,21,106,29,"balance"],[87,28,106,24],[87,29,106,37,"balanceEnd"],[87,39,106,24],[87,45,106,53,"cursor"],[87,51,106,20],[87,53,106,61],[88,0,107,24,"cursor"],[88,14,107,24,"cursor"],[88,20,107,30],[88,23,107,33,"balanceEnd"],[88,33,107,24],[89,0,108,21],[91,0,110,20,"offset"],[91,12,110,20,"offset"],[91,18,110,26],[91,21,110,29],[91,26,110,34,"offsetAndType"],[91,39,110,29],[91,40,110,48,"cursor"],[91,46,110,29],[91,50,110,58,"OFFSET_MASK"],[91,61,110,20],[92,0,96,12],[93,0,112,9],[95,0,114,8],[95,13,114,15,"cursor"],[95,19,114,21],[95,22,114,24],[95,27,114,29,"tokenIndex"],[95,37,114,8],[96,0,115,5],[96,5,22,24],[97,0,116,4,"isBalanceEdge"],[97,4,116,4,"isBalanceEdge"],[97,17,116,17],[97,19,116,19],[97,42,116,28,"pos"],[97,45,116,19],[97,47,116,33],[98,0,117,8],[98,13,117,15],[98,18,117,20,"balance"],[98,25,117,15],[98,26,117,28],[98,31,117,33,"tokenIndex"],[98,41,117,15],[98,45,117,47,"pos"],[98,48,117,8],[99,0,118,5],[99,5,22,24],[100,0,119,4,"isDelim"],[100,4,119,4,"isDelim"],[100,11,119,11],[100,13,119,13],[100,30,119,22,"code"],[100,34,119,13],[100,36,119,28,"offset"],[100,42,119,13],[100,44,119,36],[101,0,120,8],[101,10,120,12,"offset"],[101,16,120,8],[101,18,120,20],[102,0,121,12],[102,15,122,16],[102,20,122,21,"lookupType"],[102,30,122,16],[102,31,122,32,"offset"],[102,37,122,16],[102,43,122,44],[102,101,122,49,"Delim"],[102,106,122,16],[102,110,123,16],[102,115,123,21,"source"],[102,121,123,16],[102,122,123,28,"charCodeAt"],[102,132,123,16],[102,133,123,39],[102,138,123,44,"lookupOffset"],[102,150,123,39],[102,151,123,57,"offset"],[102,157,123,39],[102,158,123,16],[102,164,123,70,"code"],[102,168,121,12],[103,0,125,9],[105,0,127,8],[105,13,128,12],[105,18,128,17,"tokenType"],[105,27,128,12],[105,32,128,31],[105,90,128,36,"Delim"],[105,95,128,12],[105,99,129,12],[105,104,129,17,"source"],[105,110,129,12],[105,111,129,24,"charCodeAt"],[105,121,129,12],[105,122,129,35],[105,127,129,40,"tokenStart"],[105,137,129,12],[105,143,129,56,"code"],[105,147,127,8],[106,0,131,5],[106,5,22,24],[107,0,133,4,"getTokenValue"],[107,4,133,4,"getTokenValue"],[107,17,133,17],[107,19,133,19],[107,44,133,30],[108,0,134,8],[108,13,134,15],[108,18,134,20,"source"],[108,24,134,15],[108,25,134,27,"substring"],[108,34,134,15],[108,35,134,37],[108,40,134,42,"tokenStart"],[108,50,134,15],[108,52,134,54],[108,57,134,59,"tokenEnd"],[108,65,134,15],[108,66,134,8],[109,0,135,5],[109,5,22,24],[110,0,136,4,"getTokenLength"],[110,4,136,4,"getTokenLength"],[110,18,136,18],[110,20,136,20],[110,46,136,31],[111,0,137,8],[111,13,137,15],[111,18,137,20,"tokenEnd"],[111,26,137,15],[111,29,137,31],[111,34,137,36,"tokenStart"],[111,44,137,8],[112,0,138,5],[112,5,22,24],[113,0,139,4,"substrToCursor"],[113,4,139,4,"substrToCursor"],[113,18,139,18],[113,20,139,20],[113,44,139,29,"start"],[113,49,139,20],[113,51,139,36],[114,0,140,8],[114,13,140,15],[114,18,140,20,"source"],[114,24,140,15],[114,25,140,27,"substring"],[114,34,140,15],[114,35,140,37,"start"],[114,40,140,15],[114,42,140,44],[114,47,140,49,"tokenStart"],[114,57,140,15],[114,58,140,8],[115,0,141,5],[115,5,22,24],[116,0,143,4,"skipWS"],[116,4,143,4,"skipWS"],[116,10,143,10],[116,12,143,12],[116,30,143,23],[117,0,144,8],[117,11,144,13],[117,15,144,17,"i"],[117,16,144,18],[117,19,144,21],[117,24,144,26,"tokenIndex"],[117,34,144,13],[117,36,144,38,"skipTokenCount"],[117,50,144,52],[117,53,144,55],[117,54,144,8],[117,56,144,58,"i"],[117,57,144,59],[117,60,144,62],[117,65,144,67,"tokenCount"],[117,75,144,8],[117,77,144,79,"i"],[117,78,144,80],[117,82,144,84,"skipTokenCount"],[117,96,144,98],[117,98,144,8],[117,100,144,102],[118,0,145,12],[118,12,145,17],[118,17,145,22,"offsetAndType"],[118,30,145,17],[118,31,145,36,"i"],[118,32,145,17],[118,37,145,42,"TYPE_SHIFT"],[118,47,145,16],[118,52,145,58,"WHITESPACE"],[118,62,145,12],[118,64,145,70],[119,0,146,16],[120,0,147,13],[121,0,148,9],[123,0,150,8],[123,10,150,12,"skipTokenCount"],[123,24,150,26],[123,27,150,29],[123,28,150,8],[123,30,150,32],[124,0,151,12],[124,13,151,17,"skip"],[124,17,151,12],[124,18,151,22,"skipTokenCount"],[124,32,151,12],[125,0,152,9],[126,0,153,5],[126,5,22,24],[127,0,154,4,"skipSC"],[127,4,154,4,"skipSC"],[127,10,154,10],[127,12,154,12],[127,30,154,23],[128,0,155,8],[128,13,155,15],[128,18,155,20,"tokenType"],[128,27,155,15],[128,32,155,34,"WHITESPACE"],[128,42,155,15],[128,46,155,48],[128,51,155,53,"tokenType"],[128,60,155,48],[128,65,155,67,"COMMENT"],[128,72,155,8],[128,74,155,76],[129,0,156,12],[129,13,156,17,"next"],[129,17,156,12],[130,0,157,9],[131,0,158,5],[131,5,22,24],[132,0,159,4,"skip"],[132,4,159,4,"skip"],[132,8,159,8],[132,10,159,10],[132,24,159,19,"tokenCount"],[132,34,159,10],[132,36,159,31],[133,0,160,8],[133,10,160,12,"next"],[133,14,160,16],[133,17,160,19],[133,22,160,24,"tokenIndex"],[133,32,160,19],[133,35,160,37,"tokenCount"],[133,45,160,8],[135,0,162,8],[135,10,162,12,"next"],[135,14,162,16],[135,17,162,19],[135,22,162,24,"tokenCount"],[135,32,162,8],[135,34,162,36],[136,0,163,12],[136,13,163,17,"tokenIndex"],[136,23,163,12],[136,26,163,30,"next"],[136,30,163,12],[137,0,164,12],[137,13,164,17,"tokenStart"],[137,23,164,12],[137,26,164,30],[137,31,164,35,"offsetAndType"],[137,44,164,30],[137,45,164,49,"next"],[137,49,164,53],[137,52,164,56],[137,53,164,30],[137,57,164,61,"OFFSET_MASK"],[137,68,164,12],[138,0,165,12,"next"],[138,8,165,12,"next"],[138,12,165,16],[138,15,165,19],[138,20,165,24,"offsetAndType"],[138,33,165,19],[138,34,165,38,"next"],[138,38,165,19],[138,39,165,12],[139,0,166,12],[139,13,166,17,"tokenType"],[139,22,166,12],[139,25,166,29,"next"],[139,29,166,33],[139,33,166,37,"TYPE_SHIFT"],[139,43,166,12],[140,0,167,12],[140,13,167,17,"tokenEnd"],[140,21,167,12],[140,24,167,28,"next"],[140,28,167,32],[140,31,167,35,"OFFSET_MASK"],[140,42,167,12],[141,0,168,9],[141,7,162,8],[141,13,168,15],[142,0,169,12],[142,13,169,17,"tokenIndex"],[142,23,169,12],[142,26,169,30],[142,31,169,35,"tokenCount"],[142,41,169,12],[143,0,170,12],[143,13,170,17,"next"],[143,17,170,12],[144,0,171,9],[145,0,172,5],[145,5,22,24],[146,0,173,4,"next"],[146,4,173,4,"next"],[146,8,173,8],[146,10,173,10],[146,26,173,21],[147,0,174,8],[147,10,174,12,"next"],[147,14,174,16],[147,17,174,19],[147,22,174,24,"tokenIndex"],[147,32,174,19],[147,35,174,37],[147,36,174,8],[149,0,176,8],[149,10,176,12,"next"],[149,14,176,16],[149,17,176,19],[149,22,176,24,"tokenCount"],[149,32,176,8],[149,34,176,36],[150,0,177,12],[150,13,177,17,"tokenIndex"],[150,23,177,12],[150,26,177,30,"next"],[150,30,177,12],[151,0,178,12],[151,13,178,17,"tokenStart"],[151,23,178,12],[151,26,178,30],[151,31,178,35,"tokenEnd"],[151,39,178,12],[152,0,179,12,"next"],[152,8,179,12,"next"],[152,12,179,16],[152,15,179,19],[152,20,179,24,"offsetAndType"],[152,33,179,19],[152,34,179,38,"next"],[152,38,179,19],[152,39,179,12],[153,0,180,12],[153,13,180,17,"tokenType"],[153,22,180,12],[153,25,180,29,"next"],[153,29,180,33],[153,33,180,37,"TYPE_SHIFT"],[153,43,180,12],[154,0,181,12],[154,13,181,17,"tokenEnd"],[154,21,181,12],[154,24,181,28,"next"],[154,28,181,32],[154,31,181,35,"OFFSET_MASK"],[154,42,181,12],[155,0,182,9],[155,7,176,8],[155,13,182,15],[156,0,183,12],[156,13,183,17,"tokenIndex"],[156,23,183,12],[156,26,183,30],[156,31,183,35,"tokenCount"],[156,41,183,12],[157,0,184,12],[157,13,184,17,"eof"],[157,16,184,12],[157,19,184,23],[157,23,184,12],[158,0,185,12],[158,13,185,17,"tokenType"],[158,22,185,12],[158,25,185,29,"EOF"],[158,28,185,12],[159,0,186,12],[159,13,186,17,"tokenStart"],[159,23,186,12],[159,26,186,30],[159,31,186,35,"tokenEnd"],[159,39,186,30],[159,42,186,46],[159,47,186,51,"source"],[159,53,186,46],[159,54,186,58,"length"],[159,60,186,12],[160,0,187,9],[161,0,188,5],[161,5,22,24],[162,0,190,4,"forEachToken"],[162,4,190,4,"forEachToken"],[162,16,22,24],[162,40,190,17,"fn"],[162,42,22,24],[162,44,190,21],[163,0,191,8],[163,11,191,13],[163,15,191,17,"i"],[163,16,191,18],[163,19,191,21],[163,20,191,13],[163,22,191,24,"offset"],[163,28,191,30],[163,31,191,33],[163,36,191,38,"firstCharOffset"],[163,51,191,8],[163,53,191,55,"i"],[163,54,191,56],[163,57,191,59],[163,62,191,64,"tokenCount"],[163,72,191,8],[163,74,191,76,"i"],[163,75,191,77],[163,77,191,8],[163,79,191,81],[164,0,192,12],[164,12,192,16,"start"],[164,17,192,21],[164,20,192,24,"offset"],[164,26,192,12],[165,0,193,12],[165,12,193,16,"item"],[165,16,193,20],[165,19,193,23],[165,24,193,28,"offsetAndType"],[165,37,193,23],[165,38,193,42,"i"],[165,39,193,23],[165,40,193,12],[166,0,194,12],[166,12,194,16,"end"],[166,15,194,19],[166,18,194,22,"item"],[166,22,194,26],[166,25,194,29,"OFFSET_MASK"],[166,36,194,12],[167,0,195,12],[167,12,195,16,"type"],[167,16,195,20],[167,19,195,23,"item"],[167,23,195,27],[167,27,195,31,"TYPE_SHIFT"],[167,37,195,12],[168,0,197,12,"offset"],[168,8,197,12,"offset"],[168,14,197,18],[168,17,197,21,"end"],[168,20,197,12],[169,0,199,12,"fn"],[169,8,199,12,"fn"],[169,10,199,14],[169,11,199,15,"type"],[169,15,199,14],[169,17,199,21,"start"],[169,22,199,14],[169,24,199,28,"end"],[169,27,199,14],[169,29,199,33,"i"],[169,30,199,14],[169,31,199,12],[170,0,200,9],[171,0,201,5],[171,5,22,24],[172,0,203,4,"dump"],[172,4,203,4,"dump"],[172,8,22,24],[172,26,203,11],[173,0,203,11],[175,0,204,8],[175,10,204,12,"tokens"],[175,16,204,18],[175,19,204,21],[175,23,204,25,"Array"],[175,28,204,21],[175,29,204,31],[175,34,204,36,"tokenCount"],[175,44,204,21],[175,45,204,8],[176,0,206,8],[176,11,206,13,"forEachToken"],[176,23,206,8],[176,24,206,26],[176,34,206,27,"type"],[176,38,206,26],[176,40,206,33,"start"],[176,45,206,26],[176,47,206,40,"end"],[176,50,206,26],[176,52,206,45,"index"],[176,57,206,26],[176,59,206,55],[177,0,207,12,"tokens"],[177,8,207,12,"tokens"],[177,14,207,18],[177,15,207,19,"index"],[177,20,207,18],[177,21,207,12],[177,24,207,28],[178,0,208,16,"idx"],[178,10,208,16,"idx"],[178,13,208,19],[178,15,208,21,"index"],[178,20,207,28],[179,0,209,16,"type"],[179,10,209,16,"type"],[179,14,209,20],[179,16,209,22],[179,74,209,27,"type"],[179,78,209,22],[179,79,207,28],[180,0,210,16,"chunk"],[180,10,210,16,"chunk"],[180,15,210,21],[180,17,210,23],[180,22,210,27],[180,23,210,28,"source"],[180,29,210,23],[180,30,210,35,"substring"],[180,39,210,23],[180,40,210,45,"start"],[180,45,210,23],[180,47,210,52,"end"],[180,50,210,23],[180,51,207,28],[181,0,211,16,"balance"],[181,10,211,16,"balance"],[181,17,211,23],[181,19,211,25],[181,24,211,29],[181,25,211,30,"balance"],[181,32,211,25],[181,33,211,38,"index"],[181,38,211,25],[182,0,207,28],[182,9,207,12],[183,0,213,9],[183,7,206,8],[184,0,215,8],[184,13,215,15,"tokens"],[184,19,215,8],[185,0,216,5],[186,0,22,24],[186,3,22,0],[187,0,219,0,"module"],[187,2,219,0,"module"],[187,8,219,6],[187,9,219,7,"exports"],[187,16,219,0],[187,19,219,17,"TokenStream"],[187,30,219,0]],"functionMap":{"names":["<global>","TokenStream","prototype.reset","prototype.lookupType","prototype.lookupOffset","prototype.lookupValue","prototype.getTokenStart","prototype.getRawLength","prototype.isBalanceEdge","prototype.isDelim","prototype.getTokenValue","prototype.getTokenLength","prototype.substrToCursor","prototype.skipWS","prototype.skipSC","prototype.skip","prototype.next","prototype.forEachToken","prototype.dump","forEachToken$argument_0"],"mappings":"AAA;kBCc;CDK;WEG;KFM;gBGE;KHQ;kBIC;KJQ;iBKC;KLa;mBMC;KNY;kBOG;KPqC;mBQC;KRE;aSC;KTY;mBUE;KVE;oBWC;KXE;oBYC;KZE;YaE;KbU;YcC;KdI;UeC;Kfa;UgBC;KhBe;IiBE;KjBW;IkBE;0BCG;SDO;KlBG"}},"type":"js/module"}]}