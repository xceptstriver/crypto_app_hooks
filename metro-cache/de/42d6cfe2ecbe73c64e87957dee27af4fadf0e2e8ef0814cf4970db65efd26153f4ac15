{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":17},"end":{"line":3,"column":32}},{"start":{"line":4,"column":14},"end":{"line":4,"column":26}},{"start":{"line":5,"column":12},"end":{"line":5,"column":22}},{"start":{"line":6,"column":22},"end":{"line":6,"column":42}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var WHITESPACE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.WhiteSpace;\n\n  var COMMENT = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Comment;\n\n  var IDENT = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Ident;\n\n  var LEFTPARENTHESIS = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.LeftParenthesis;\n\n  module.exports = {\n    name: 'MediaQuery',\n    structure: {\n      children: [['Identifier', 'MediaFeature', 'WhiteSpace']]\n    },\n    parse: function parse() {\n      this.scanner.skipSC();\n      var children = this.createList();\n      var child = null;\n      var space = null;\n\n      scan: while (!this.scanner.eof) {\n        switch (this.scanner.tokenType) {\n          case COMMENT:\n            this.scanner.next();\n            continue;\n\n          case WHITESPACE:\n            space = this.WhiteSpace();\n            continue;\n\n          case IDENT:\n            child = this.Identifier();\n            break;\n\n          case LEFTPARENTHESIS:\n            child = this.MediaFeature();\n            break;\n\n          default:\n            break scan;\n        }\n\n        if (space !== null) {\n          children.push(space);\n          space = null;\n        }\n\n        children.push(child);\n      }\n\n      if (child === null) {\n        this.error('Identifier or parenthesis is expected');\n      }\n\n      return {\n        type: 'MediaQuery',\n        loc: this.getLocationFromList(children),\n        children: children\n      };\n    },\n    generate: function generate(node) {\n      this.children(node);\n    }\n  };\n});","lineCount":65,"map":[[2,0,3,0],[2,6,3,4,"WHITESPACE"],[2,16,3,14],[2,19,3,17],[2,74,3,22,"WhiteSpace"],[2,84,3,0],[4,0,4,0],[4,6,4,4,"COMMENT"],[4,13,4,11],[4,16,4,14],[4,71,4,19,"Comment"],[4,78,4,0],[6,0,5,0],[6,6,5,4,"IDENT"],[6,11,5,9],[6,14,5,12],[6,69,5,17,"Ident"],[6,74,5,0],[8,0,6,0],[8,6,6,4,"LEFTPARENTHESIS"],[8,21,6,19],[8,24,6,22],[8,79,6,27,"LeftParenthesis"],[8,94,6,0],[10,0,8,0,"module"],[10,2,8,0,"module"],[10,8,8,6],[10,9,8,7,"exports"],[10,16,8,0],[10,19,8,17],[11,0,9,4,"name"],[11,4,9,4,"name"],[11,8,9,8],[11,10,9,10],[11,22,8,17],[12,0,10,4,"structure"],[12,4,10,4,"structure"],[12,13,10,13],[12,15,10,15],[13,0,11,8,"children"],[13,6,11,8,"children"],[13,14,11,16],[13,16,11,18],[13,17,11,19],[13,18,12,12],[13,30,11,19],[13,32,13,12],[13,46,11,19],[13,48,14,12],[13,60,11,19],[13,61,11,18],[14,0,10,15],[14,5,8,17],[15,0,17,4,"parse"],[15,4,17,4,"parse"],[15,9,17,9],[15,11,17,11],[15,28,17,22],[16,0,18,8],[16,11,18,13,"scanner"],[16,18,18,8],[16,19,18,21,"skipSC"],[16,25,18,8],[17,0,20,8],[17,10,20,12,"children"],[17,18,20,20],[17,21,20,23],[17,26,20,28,"createList"],[17,36,20,23],[17,38,20,8],[18,0,21,8],[18,10,21,12,"child"],[18,15,21,17],[18,18,21,20],[18,22,21,8],[19,0,22,8],[19,10,22,12,"space"],[19,15,22,17],[19,18,22,20],[19,22,22,8],[21,0,24,8,"scan"],[21,6,24,8,"scan"],[21,10,24,12],[21,12,25,8],[21,19,25,15],[21,20,25,16],[21,25,25,21,"scanner"],[21,32,25,16],[21,33,25,29,"eof"],[21,36,25,8],[21,38,25,34],[22,0,26,12],[22,16,26,20],[22,21,26,25,"scanner"],[22,28,26,20],[22,29,26,33,"tokenType"],[22,38,26,12],[23,0,27,16],[23,15,27,21,"COMMENT"],[23,22,27,16],[24,0,28,20],[24,17,28,25,"scanner"],[24,24,28,20],[24,25,28,33,"next"],[24,29,28,20],[25,0,29,20],[27,0,31,16],[27,15,31,21,"WHITESPACE"],[27,25,31,16],[28,0,32,20,"space"],[28,12,32,20,"space"],[28,17,32,25],[28,20,32,28],[28,25,32,33,"WhiteSpace"],[28,35,32,28],[28,37,32,20],[29,0,33,20],[31,0,35,16],[31,15,35,21,"IDENT"],[31,20,35,16],[32,0,36,20,"child"],[32,12,36,20,"child"],[32,17,36,25],[32,20,36,28],[32,25,36,33,"Identifier"],[32,35,36,28],[32,37,36,20],[33,0,37,20],[35,0,39,16],[35,15,39,21,"LEFTPARENTHESIS"],[35,30,39,16],[36,0,40,20,"child"],[36,12,40,20,"child"],[36,17,40,25],[36,20,40,28],[36,25,40,33,"MediaFeature"],[36,37,40,28],[36,39,40,20],[37,0,41,20],[39,0,43,16],[40,0,44,20],[40,18,44,26,"scan"],[40,22,44,20],[41,0,26,12],[43,0,47,12],[43,12,47,16,"space"],[43,17,47,21],[43,22,47,26],[43,26,47,12],[43,28,47,32],[44,0,48,16,"children"],[44,10,48,16,"children"],[44,18,48,24],[44,19,48,25,"push"],[44,23,48,16],[44,24,48,30,"space"],[44,29,48,16],[45,0,49,16,"space"],[45,10,49,16,"space"],[45,15,49,21],[45,18,49,24],[45,22,49,16],[46,0,50,13],[48,0,52,12,"children"],[48,8,52,12,"children"],[48,16,52,20],[48,17,52,21,"push"],[48,21,52,12],[48,22,52,26,"child"],[48,27,52,12],[49,0,53,9],[51,0,55,8],[51,10,55,12,"child"],[51,15,55,17],[51,20,55,22],[51,24,55,8],[51,26,55,28],[52,0,56,12],[52,13,56,17,"error"],[52,18,56,12],[52,19,56,23],[52,58,56,12],[53,0,57,9],[55,0,59,8],[55,13,59,15],[56,0,60,12,"type"],[56,8,60,12,"type"],[56,12,60,16],[56,14,60,18],[56,26,59,15],[57,0,61,12,"loc"],[57,8,61,12,"loc"],[57,11,61,15],[57,13,61,17],[57,18,61,22,"getLocationFromList"],[57,37,61,17],[57,38,61,42,"children"],[57,46,61,17],[57,47,59,15],[58,0,62,12,"children"],[58,8,62,12,"children"],[58,16,62,20],[58,18,62,22,"children"],[59,0,59,15],[59,7,59,8],[60,0,64,5],[60,5,8,17],[61,0,65,4,"generate"],[61,4,65,4,"generate"],[61,12,65,12],[61,14,65,14],[61,32,65,23,"node"],[61,36,65,14],[61,38,65,29],[62,0,66,8],[62,11,66,13,"children"],[62,19,66,8],[62,20,66,22,"node"],[62,24,66,8],[63,0,67,5],[64,0,8,17],[64,3,8,0]],"functionMap":{"names":["<global>","module.exports.parse","module.exports.generate"],"mappings":"AAA;WCgB;KD+C;cEC;KFE"}},"type":"js/module"}]}