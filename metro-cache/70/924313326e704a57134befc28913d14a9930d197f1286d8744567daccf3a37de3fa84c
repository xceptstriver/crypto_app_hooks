{"dependencies":[{"name":"boolbase","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":21},"end":{"line":17,"column":38}},{"start":{"line":23,"column":20},"end":{"line":23,"column":72}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  module.exports = compile;\n\n  function compile(parsed) {\n    var a = parsed[0],\n        b = parsed[1] - 1;\n    if (b < 0 && a <= 0) return _$$_REQUIRE(_dependencyMap[0], \"boolbase\").falseFunc;\n    if (a === -1) return function (pos) {\n      return pos <= b;\n    };\n    if (a === 0) return function (pos) {\n      return pos === b;\n    };\n    if (a === 1) return b < 0 ? _$$_REQUIRE(_dependencyMap[0], \"boolbase\").trueFunc : function (pos) {\n      return pos >= b;\n    };\n    var bMod = b % a;\n    if (bMod < 0) bMod += a;\n\n    if (a > 1) {\n      return function (pos) {\n        return pos >= b && pos % a === bMod;\n      };\n    }\n\n    a *= -1;\n    return function (pos) {\n      return pos <= b && pos % a === bMod;\n    };\n  }\n});","lineCount":31,"map":[[2,0,1,0,"module"],[2,2,1,0,"module"],[2,8,1,6],[2,9,1,7,"exports"],[2,16,1,0],[2,19,1,17,"compile"],[2,26,1,0],[4,0,11,0],[4,11,11,9,"compile"],[4,18,11,0],[4,19,11,17,"parsed"],[4,25,11,0],[4,27,11,24],[5,0,12,1],[5,8,12,5,"a"],[5,9,12,6],[5,12,12,9,"parsed"],[5,18,12,15],[5,19,12,16],[5,20,12,15],[5,21,12,1],[6,0,12,1],[6,8,13,5,"b"],[6,9,13,6],[6,12,13,9,"parsed"],[6,18,13,15],[6,19,13,16],[6,20,13,15],[6,21,13,9],[6,24,13,21],[6,25,12,1],[7,0,17,1],[7,8,17,4,"b"],[7,9,17,5],[7,12,17,8],[7,13,17,4],[7,17,17,13,"a"],[7,18,17,14],[7,22,17,18],[7,23,17,1],[7,25,17,21],[8,0,20,1],[8,8,20,4,"a"],[8,9,20,5],[8,14,20,9],[8,15,20,10],[8,16,20,1],[8,18,20,13],[8,25,20,20],[8,35,20,29,"pos"],[8,38,20,20],[8,40,20,33],[9,0,20,35],[9,13,20,42,"pos"],[9,16,20,45],[9,20,20,49,"b"],[9,21,20,35],[10,0,20,53],[10,5,20,13],[11,0,21,1],[11,8,21,4,"a"],[11,9,21,5],[11,14,21,10],[11,15,21,1],[11,17,21,13],[11,24,21,20],[11,34,21,29,"pos"],[11,37,21,20],[11,39,21,33],[12,0,21,35],[12,13,21,42,"pos"],[12,16,21,45],[12,21,21,50,"b"],[12,22,21,35],[13,0,21,54],[13,5,21,13],[14,0,23,1],[14,8,23,4,"a"],[14,9,23,5],[14,14,23,10],[14,15,23,1],[14,17,23,13],[14,24,23,20,"b"],[14,25,23,21],[14,28,23,24],[14,29,23,20],[14,86,23,39],[14,96,23,48,"pos"],[14,99,23,39],[14,101,23,52],[15,0,23,54],[15,13,23,61,"pos"],[15,16,23,64],[15,20,23,68,"b"],[15,21,23,54],[16,0,23,72],[16,5,23,13],[17,0,26,1],[17,8,26,5,"bMod"],[17,12,26,9],[17,15,26,12,"b"],[17,16,26,13],[17,19,26,16,"a"],[17,20,26,1],[18,0,27,1],[18,8,27,4,"bMod"],[18,12,27,8],[18,15,27,11],[18,16,27,1],[18,18,27,14,"bMod"],[18,22,27,18],[18,26,27,22,"a"],[18,27,27,14],[20,0,29,1],[20,8,29,4,"a"],[20,9,29,5],[20,12,29,8],[20,13,29,1],[20,15,29,10],[21,0,30,2],[21,13,30,9],[21,23,30,18,"pos"],[21,26,30,9],[21,28,30,22],[22,0,31,3],[22,15,31,10,"pos"],[22,18,31,13],[22,22,31,17,"b"],[22,23,31,10],[22,27,31,22,"pos"],[22,30,31,25],[22,33,31,28,"a"],[22,34,31,22],[22,39,31,34,"bMod"],[22,43,31,3],[23,0,32,3],[23,7,30,2],[24,0,33,2],[26,0,35,1,"a"],[26,4,35,1,"a"],[26,5,35,2],[26,9,35,6],[26,10,35,7],[26,11,35,1],[27,0,37,1],[27,11,37,8],[27,21,37,17,"pos"],[27,24,37,8],[27,26,37,21],[28,0,38,2],[28,13,38,9,"pos"],[28,16,38,12],[28,20,38,16,"b"],[28,21,38,9],[28,25,38,21,"pos"],[28,28,38,24],[28,31,38,27,"a"],[28,32,38,21],[28,37,38,33,"bMod"],[28,41,38,2],[29,0,39,2],[29,5,37,1],[30,0,40,1]],"functionMap":{"names":["<global>","compile","<anonymous>"],"mappings":"AAA;ACU;oBCS,iCD;oBCC,kCD;uCCE,iCD;SCO;GDE;QCK;EDE"}},"type":"js/module"}]}