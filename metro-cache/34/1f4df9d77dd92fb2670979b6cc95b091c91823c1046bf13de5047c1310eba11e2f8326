{"dependencies":[{"name":"./sourceMap","data":{"asyncType":null,"locs":[{"start":{"line":58,"column":27},"end":{"line":58,"column":46}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  function processChildren(node, delimeter) {\n    var list = node.children;\n    var prev = null;\n\n    if (typeof delimeter !== 'function') {\n      list.forEach(this.node, this);\n    } else {\n      list.forEach(function (node) {\n        if (prev !== null) {\n          delimeter.call(this, prev);\n        }\n\n        this.node(node);\n        prev = node;\n      }, this);\n    }\n  }\n\n  module.exports = function createGenerator(config) {\n    function processNode(node) {\n      if (hasOwnProperty.call(types, node.type)) {\n        types[node.type].call(this, node);\n      } else {\n        throw new Error('Unknown node type: ' + node.type);\n      }\n    }\n\n    var types = {};\n\n    if (config.node) {\n      for (var name in config.node) {\n        types[name] = config.node[name].generate;\n      }\n    }\n\n    return function (node, options) {\n      var buffer = '';\n      var handlers = {\n        children: processChildren,\n        node: processNode,\n        chunk: function chunk(_chunk) {\n          buffer += _chunk;\n        },\n        result: function result() {\n          return buffer;\n        }\n      };\n\n      if (options) {\n        if (typeof options.decorator === 'function') {\n          handlers = options.decorator(handlers);\n        }\n\n        if (options.sourceMap) {\n          handlers = _$$_REQUIRE(_dependencyMap[0], \"./sourceMap\")(handlers);\n        }\n      }\n\n      handlers.node(node);\n      return handlers.result();\n    };\n  };\n});","lineCount":66,"map":[[2,0,2,0],[2,6,2,4,"hasOwnProperty"],[2,20,2,18],[2,23,2,21,"Object"],[2,29,2,27],[2,30,2,28,"prototype"],[2,39,2,21],[2,40,2,38,"hasOwnProperty"],[2,54,2,0],[4,0,4,0],[4,11,4,9,"processChildren"],[4,26,4,0],[4,27,4,25,"node"],[4,31,4,0],[4,33,4,31,"delimeter"],[4,42,4,0],[4,44,4,42],[5,0,5,4],[5,8,5,8,"list"],[5,12,5,12],[5,15,5,15,"node"],[5,19,5,19],[5,20,5,20,"children"],[5,28,5,4],[6,0,6,4],[6,8,6,8,"prev"],[6,12,6,12],[6,15,6,15],[6,19,6,4],[8,0,8,4],[8,8,8,8],[8,15,8,15,"delimeter"],[8,24,8,8],[8,29,8,29],[8,39,8,4],[8,41,8,41],[9,0,9,8,"list"],[9,6,9,8,"list"],[9,10,9,12],[9,11,9,13,"forEach"],[9,18,9,8],[9,19,9,21],[9,24,9,26,"node"],[9,28,9,8],[9,30,9,32],[9,34,9,8],[10,0,10,5],[10,5,8,4],[10,11,10,11],[11,0,11,8,"list"],[11,6,11,8,"list"],[11,10,11,12],[11,11,11,13,"forEach"],[11,18,11,8],[11,19,11,21],[11,29,11,30,"node"],[11,33,11,21],[11,35,11,36],[12,0,12,12],[12,12,12,16,"prev"],[12,16,12,20],[12,21,12,25],[12,25,12,12],[12,27,12,31],[13,0,13,16,"delimeter"],[13,10,13,16,"delimeter"],[13,19,13,25],[13,20,13,26,"call"],[13,24,13,16],[13,25,13,31],[13,29,13,16],[13,31,13,37,"prev"],[13,35,13,16],[14,0,14,13],[16,0,16,12],[16,13,16,17,"node"],[16,17,16,12],[16,18,16,22,"node"],[16,22,16,12],[17,0,17,12,"prev"],[17,8,17,12,"prev"],[17,12,17,16],[17,15,17,19,"node"],[17,19,17,12],[18,0,18,9],[18,7,11,8],[18,9,18,11],[18,13,11,8],[19,0,19,5],[20,0,20,1],[22,0,22,0,"module"],[22,2,22,0,"module"],[22,8,22,6],[22,9,22,7,"exports"],[22,16,22,0],[22,19,22,17],[22,28,22,26,"createGenerator"],[22,43,22,17],[22,44,22,42,"config"],[22,50,22,17],[22,52,22,50],[23,0,23,4],[23,13,23,13,"processNode"],[23,24,23,4],[23,25,23,25,"node"],[23,29,23,4],[23,31,23,31],[24,0,24,8],[24,10,24,12,"hasOwnProperty"],[24,24,24,26],[24,25,24,27,"call"],[24,29,24,12],[24,30,24,32,"types"],[24,35,24,12],[24,37,24,39,"node"],[24,41,24,43],[24,42,24,44,"type"],[24,46,24,12],[24,47,24,8],[24,49,24,51],[25,0,25,12,"types"],[25,8,25,12,"types"],[25,13,25,17],[25,14,25,18,"node"],[25,18,25,22],[25,19,25,23,"type"],[25,23,25,17],[25,24,25,12],[25,25,25,29,"call"],[25,29,25,12],[25,30,25,34],[25,34,25,12],[25,36,25,40,"node"],[25,40,25,12],[26,0,26,9],[26,7,24,8],[26,13,26,15],[27,0,27,12],[27,14,27,18],[27,18,27,22,"Error"],[27,23,27,18],[27,24,27,28],[27,48,27,52,"node"],[27,52,27,56],[27,53,27,57,"type"],[27,57,27,18],[27,58,27,12],[28,0,28,9],[29,0,29,5],[31,0,31,4],[31,8,31,8,"types"],[31,13,31,13],[31,16,31,16],[31,18,31,4],[33,0,33,4],[33,8,33,8,"config"],[33,14,33,14],[33,15,33,15,"node"],[33,19,33,4],[33,21,33,21],[34,0,34,8],[34,11,34,13],[34,15,34,17,"name"],[34,19,34,8],[34,23,34,25,"config"],[34,29,34,31],[34,30,34,32,"node"],[34,34,34,8],[34,36,34,38],[35,0,35,12,"types"],[35,8,35,12,"types"],[35,13,35,17],[35,14,35,18,"name"],[35,18,35,17],[35,19,35,12],[35,22,35,26,"config"],[35,28,35,32],[35,29,35,33,"node"],[35,33,35,26],[35,34,35,38,"name"],[35,38,35,26],[35,40,35,44,"generate"],[35,48,35,12],[36,0,36,9],[37,0,37,5],[39,0,39,4],[39,11,39,11],[39,21,39,20,"node"],[39,25,39,11],[39,27,39,26,"options"],[39,34,39,11],[39,36,39,35],[40,0,40,8],[40,10,40,12,"buffer"],[40,16,40,18],[40,19,40,21],[40,21,40,8],[41,0,41,8],[41,10,41,12,"handlers"],[41,18,41,20],[41,21,41,23],[42,0,42,12,"children"],[42,8,42,12,"children"],[42,16,42,20],[42,18,42,22,"processChildren"],[42,33,41,23],[43,0,43,12,"node"],[43,8,43,12,"node"],[43,12,43,16],[43,14,43,18,"processNode"],[43,25,41,23],[44,0,44,12,"chunk"],[44,8,44,12,"chunk"],[44,13,44,17],[44,15,44,19],[44,30,44,28,"chunk"],[44,36,44,19],[44,38,44,35],[45,0,45,16,"buffer"],[45,10,45,16,"buffer"],[45,16,45,22],[45,20,45,26,"chunk"],[45,26,45,16],[46,0,46,13],[46,9,41,23],[47,0,47,12,"result"],[47,8,47,12,"result"],[47,14,47,18],[47,16,47,20],[47,34,47,31],[48,0,48,16],[48,17,48,23,"buffer"],[48,23,48,16],[49,0,49,13],[50,0,41,23],[50,7,41,8],[52,0,52,8],[52,10,52,12,"options"],[52,17,52,8],[52,19,52,21],[53,0,53,12],[53,12,53,16],[53,19,53,23,"options"],[53,26,53,30],[53,27,53,31,"decorator"],[53,36,53,16],[53,41,53,45],[53,51,53,12],[53,53,53,57],[54,0,54,16,"handlers"],[54,10,54,16,"handlers"],[54,18,54,24],[54,21,54,27,"options"],[54,28,54,34],[54,29,54,35,"decorator"],[54,38,54,27],[54,39,54,45,"handlers"],[54,47,54,27],[54,48,54,16],[55,0,55,13],[57,0,57,12],[57,12,57,16,"options"],[57,19,57,23],[57,20,57,24,"sourceMap"],[57,29,57,12],[57,31,57,35],[58,0,58,16,"handlers"],[58,10,58,16,"handlers"],[58,18,58,24],[58,21,58,27],[58,67,58,37,"handlers"],[58,75,58,27],[58,76,58,16],[59,0,59,13],[60,0,60,9],[62,0,62,8,"handlers"],[62,6,62,8,"handlers"],[62,14,62,16],[62,15,62,17,"node"],[62,19,62,8],[62,20,62,22,"node"],[62,24,62,8],[63,0,64,8],[63,13,64,15,"handlers"],[63,21,64,23],[63,22,64,24,"result"],[63,28,64,15],[63,30,64,8],[64,0,65,5],[64,5,39,4],[65,0,66,1],[65,3,22,0]],"functionMap":{"names":["<global>","processChildren","list.forEach$argument_0","createGenerator","processNode","<anonymous>","handlers.chunk","handlers.result"],"mappings":"AAA;ACG;qBCO;SDO;CDE;iBGE;ICC;KDM;WEU;mBCK;aDE;oBEC;aFE;KFgB;CHC"}},"type":"js/module"}]}