{"dependencies":[{"name":"domelementtype","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":28},"end":{"line":2,"column":45}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var isTag = exports.isTag = _$$_REQUIRE(_dependencyMap[0], \"domelementtype\").isTag;\n\n  exports.testElement = function (options, element) {\n    for (var key in options) {\n      if (!options.hasOwnProperty(key)) ;else if (key === \"tag_name\") {\n        if (!isTag(element) || !options.tag_name(element.name)) {\n          return false;\n        }\n      } else if (key === \"tag_type\") {\n        if (!options.tag_type(element.type)) return false;\n      } else if (key === \"tag_contains\") {\n        if (isTag(element) || !options.tag_contains(element.data)) {\n          return false;\n        }\n      } else if (!element.attribs || !options[key](element.attribs[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  var Checks = {\n    tag_name: function tag_name(name) {\n      if (typeof name === \"function\") {\n        return function (elem) {\n          return isTag(elem) && name(elem.name);\n        };\n      } else if (name === \"*\") {\n        return isTag;\n      } else {\n        return function (elem) {\n          return isTag(elem) && elem.name === name;\n        };\n      }\n    },\n    tag_type: function tag_type(type) {\n      if (typeof type === \"function\") {\n        return function (elem) {\n          return type(elem.type);\n        };\n      } else {\n        return function (elem) {\n          return elem.type === type;\n        };\n      }\n    },\n    tag_contains: function tag_contains(data) {\n      if (typeof data === \"function\") {\n        return function (elem) {\n          return !isTag(elem) && data(elem.data);\n        };\n      } else {\n        return function (elem) {\n          return !isTag(elem) && elem.data === data;\n        };\n      }\n    }\n  };\n\n  function getAttribCheck(attrib, value) {\n    if (typeof value === \"function\") {\n      return function (elem) {\n        return elem.attribs && value(elem.attribs[attrib]);\n      };\n    } else {\n      return function (elem) {\n        return elem.attribs && elem.attribs[attrib] === value;\n      };\n    }\n  }\n\n  function combineFuncs(a, b) {\n    return function (elem) {\n      return a(elem) || b(elem);\n    };\n  }\n\n  exports.getElements = function (options, element, recurse, limit) {\n    var funcs = Object.keys(options).map(function (key) {\n      var value = options[key];\n      return key in Checks ? Checks[key](value) : getAttribCheck(key, value);\n    });\n    return funcs.length === 0 ? [] : this.filter(funcs.reduce(combineFuncs), element, recurse, limit);\n  };\n\n  exports.getElementById = function (id, element, recurse) {\n    if (!Array.isArray(element)) element = [element];\n    return this.findOne(getAttribCheck(\"id\", id), element, recurse !== false);\n  };\n\n  exports.getElementsByTagName = function (name, element, recurse, limit) {\n    return this.filter(Checks.tag_name(name), element, recurse, limit);\n  };\n\n  exports.getElementsByTagType = function (type, element, recurse, limit) {\n    return this.filter(Checks.tag_type(type), element, recurse, limit);\n  };\n});","lineCount":100,"map":[[2,0,2,0],[2,6,2,4,"isTag"],[2,11,2,9],[2,14,2,12,"exports"],[2,21,2,19],[2,22,2,20,"isTag"],[2,27,2,12],[2,30,2,28],[2,79,2,40,"isTag"],[2,84,2,0],[4,0,4,0,"exports"],[4,2,4,0,"exports"],[4,9,4,7],[4,10,4,8,"testElement"],[4,21,4,0],[4,24,4,22],[4,34,4,31,"options"],[4,41,4,22],[4,43,4,40,"element"],[4,50,4,22],[4,52,4,48],[5,0,5,1],[5,9,5,5],[5,13,5,9,"key"],[5,16,5,1],[5,20,5,16,"options"],[5,27,5,1],[5,29,5,24],[6,0,6,2],[6,10,6,5],[6,11,6,6,"options"],[6,18,6,13],[6,19,6,14,"hasOwnProperty"],[6,33,6,6],[6,34,6,29,"key"],[6,37,6,6],[6,38,6,2],[6,40,6,34],[6,41,6,2],[6,46,7,7],[6,50,7,10,"key"],[6,53,7,13],[6,58,7,18],[6,68,7,7],[6,70,7,29],[7,0,8,3],[7,12,8,6],[7,13,8,7,"isTag"],[7,18,8,12],[7,19,8,13,"element"],[7,26,8,12],[7,27,8,6],[7,31,8,25],[7,32,8,26,"options"],[7,39,8,33],[7,40,8,34,"tag_name"],[7,48,8,26],[7,49,8,43,"element"],[7,56,8,50],[7,57,8,51,"name"],[7,61,8,26],[7,62,8,3],[7,64,8,57],[8,0,9,4],[8,17,9,11],[8,22,9,4],[9,0,10,4],[10,0,11,3],[10,7,7,7],[10,13,11,9],[10,17,11,12,"key"],[10,20,11,15],[10,25,11,20],[10,35,11,9],[10,37,11,31],[11,0,12,3],[11,12,12,6],[11,13,12,7,"options"],[11,20,12,14],[11,21,12,15,"tag_type"],[11,29,12,7],[11,30,12,24,"element"],[11,37,12,31],[11,38,12,32,"type"],[11,42,12,7],[11,43,12,3],[11,45,12,39],[11,52,12,46],[11,57,12,39],[12,0,13,3],[12,7,11,9],[12,13,13,9],[12,17,13,12,"key"],[12,20,13,15],[12,25,13,20],[12,39,13,9],[12,41,13,35],[13,0,14,3],[13,12,14,6,"isTag"],[13,17,14,11],[13,18,14,12,"element"],[13,25,14,11],[13,26,14,6],[13,30,14,24],[13,31,14,25,"options"],[13,38,14,32],[13,39,14,33,"tag_contains"],[13,51,14,25],[13,52,14,46,"element"],[13,59,14,53],[13,60,14,54,"data"],[13,64,14,25],[13,65,14,3],[13,67,14,60],[14,0,15,4],[14,17,15,11],[14,22,15,4],[15,0,16,4],[16,0,17,3],[16,7,13,9],[16,13,17,9],[16,17,17,12],[16,18,17,13,"element"],[16,25,17,20],[16,26,17,21,"attribs"],[16,33,17,12],[16,37,17,32],[16,38,17,33,"options"],[16,45,17,40],[16,46,17,41,"key"],[16,49,17,40],[16,50,17,33],[16,51,17,46,"element"],[16,58,17,53],[16,59,17,54,"attribs"],[16,66,17,46],[16,67,17,62,"key"],[16,70,17,46],[16,71,17,33],[16,72,17,9],[16,74,17,68],[17,0,18,3],[17,15,18,10],[17,20,18,3],[18,0,19,3],[19,0,20,2],[21,0,21,1],[21,11,21,8],[21,15,21,1],[22,0,22,1],[22,3,4,0],[24,0,24,0],[24,6,24,4,"Checks"],[24,12,24,10],[24,15,24,13],[25,0,25,1,"tag_name"],[25,4,25,1,"tag_name"],[25,12,25,9],[25,14,25,11],[25,32,25,20,"name"],[25,36,25,11],[25,38,25,25],[26,0,26,2],[26,10,26,5],[26,17,26,12,"name"],[26,21,26,5],[26,26,26,21],[26,36,26,2],[26,38,26,32],[27,0,27,3],[27,15,27,10],[27,25,27,19,"elem"],[27,29,27,10],[27,31,27,24],[28,0,27,26],[28,17,27,33,"isTag"],[28,22,27,38],[28,23,27,39,"elem"],[28,27,27,38],[28,28,27,33],[28,32,27,48,"name"],[28,36,27,52],[28,37,27,53,"elem"],[28,41,27,57],[28,42,27,58,"name"],[28,46,27,52],[28,47,27,26],[29,0,27,66],[29,9,27,3],[30,0,28,3],[30,7,26,2],[30,13,28,9],[30,17,28,12,"name"],[30,21,28,16],[30,26,28,21],[30,29,28,9],[30,31,28,25],[31,0,29,3],[31,15,29,10,"isTag"],[31,20,29,3],[32,0,30,3],[32,7,28,9],[32,13,30,9],[33,0,31,3],[33,15,31,10],[33,25,31,19,"elem"],[33,29,31,10],[33,31,31,24],[34,0,31,26],[34,17,31,33,"isTag"],[34,22,31,38],[34,23,31,39,"elem"],[34,27,31,38],[34,28,31,33],[34,32,31,48,"elem"],[34,36,31,52],[34,37,31,53,"name"],[34,41,31,48],[34,46,31,62,"name"],[34,50,31,26],[35,0,31,69],[35,9,31,3],[36,0,32,3],[37,0,33,2],[37,5,24,13],[38,0,34,1,"tag_type"],[38,4,34,1,"tag_type"],[38,12,34,9],[38,14,34,11],[38,32,34,20,"type"],[38,36,34,11],[38,38,34,25],[39,0,35,2],[39,10,35,5],[39,17,35,12,"type"],[39,21,35,5],[39,26,35,21],[39,36,35,2],[39,38,35,32],[40,0,36,3],[40,15,36,10],[40,25,36,19,"elem"],[40,29,36,10],[40,31,36,24],[41,0,36,26],[41,17,36,33,"type"],[41,21,36,37],[41,22,36,38,"elem"],[41,26,36,42],[41,27,36,43,"type"],[41,31,36,37],[41,32,36,26],[42,0,36,51],[42,9,36,3],[43,0,37,3],[43,7,35,2],[43,13,37,9],[44,0,38,3],[44,15,38,10],[44,25,38,19,"elem"],[44,29,38,10],[44,31,38,24],[45,0,38,26],[45,17,38,33,"elem"],[45,21,38,37],[45,22,38,38,"type"],[45,26,38,33],[45,31,38,47,"type"],[45,35,38,26],[46,0,38,54],[46,9,38,3],[47,0,39,3],[48,0,40,2],[48,5,24,13],[49,0,41,1,"tag_contains"],[49,4,41,1,"tag_contains"],[49,16,41,13],[49,18,41,15],[49,40,41,24,"data"],[49,44,41,15],[49,46,41,29],[50,0,42,2],[50,10,42,5],[50,17,42,12,"data"],[50,21,42,5],[50,26,42,21],[50,36,42,2],[50,38,42,32],[51,0,43,3],[51,15,43,10],[51,25,43,19,"elem"],[51,29,43,10],[51,31,43,24],[52,0,43,26],[52,17,43,33],[52,18,43,34,"isTag"],[52,23,43,39],[52,24,43,40,"elem"],[52,28,43,39],[52,29,43,33],[52,33,43,49,"data"],[52,37,43,53],[52,38,43,54,"elem"],[52,42,43,58],[52,43,43,59,"data"],[52,47,43,53],[52,48,43,26],[53,0,43,67],[53,9,43,3],[54,0,44,3],[54,7,42,2],[54,13,44,9],[55,0,45,3],[55,15,45,10],[55,25,45,19,"elem"],[55,29,45,10],[55,31,45,24],[56,0,45,26],[56,17,45,33],[56,18,45,34,"isTag"],[56,23,45,39],[56,24,45,40,"elem"],[56,28,45,39],[56,29,45,33],[56,33,45,49,"elem"],[56,37,45,53],[56,38,45,54,"data"],[56,42,45,49],[56,47,45,63,"data"],[56,51,45,26],[57,0,45,70],[57,9,45,3],[58,0,46,3],[59,0,47,2],[60,0,24,13],[60,3,24,0],[62,0,50,0],[62,11,50,9,"getAttribCheck"],[62,25,50,0],[62,26,50,24,"attrib"],[62,32,50,0],[62,34,50,32,"value"],[62,39,50,0],[62,41,50,38],[63,0,51,1],[63,8,51,4],[63,15,51,11,"value"],[63,20,51,4],[63,25,51,21],[63,35,51,1],[63,37,51,32],[64,0,52,2],[64,13,52,9],[64,23,52,18,"elem"],[64,27,52,9],[64,29,52,23],[65,0,52,25],[65,15,52,32,"elem"],[65,19,52,36],[65,20,52,37,"attribs"],[65,27,52,32],[65,31,52,48,"value"],[65,36,52,53],[65,37,52,54,"elem"],[65,41,52,58],[65,42,52,59,"attribs"],[65,49,52,54],[65,50,52,67,"attrib"],[65,56,52,54],[65,57,52,53],[65,58,52,25],[66,0,52,78],[66,7,52,2],[67,0,53,2],[67,5,51,1],[67,11,53,8],[68,0,54,2],[68,13,54,9],[68,23,54,18,"elem"],[68,27,54,9],[68,29,54,23],[69,0,54,25],[69,15,54,32,"elem"],[69,19,54,36],[69,20,54,37,"attribs"],[69,27,54,32],[69,31,54,48,"elem"],[69,35,54,52],[69,36,54,53,"attribs"],[69,43,54,48],[69,44,54,61,"attrib"],[69,50,54,48],[69,56,54,73,"value"],[69,61,54,25],[70,0,54,81],[70,7,54,2],[71,0,55,2],[72,0,56,1],[74,0,58,0],[74,11,58,9,"combineFuncs"],[74,23,58,0],[74,24,58,22,"a"],[74,25,58,0],[74,27,58,25,"b"],[74,28,58,0],[74,30,58,27],[75,0,59,1],[75,11,59,8],[75,21,59,17,"elem"],[75,25,59,8],[75,27,59,22],[76,0,60,2],[76,13,60,9,"a"],[76,14,60,10],[76,15,60,11,"elem"],[76,19,60,10],[76,20,60,9],[76,24,60,20,"b"],[76,25,60,21],[76,26,60,22,"elem"],[76,30,60,21],[76,31,60,2],[77,0,61,2],[77,5,59,1],[78,0,62,1],[80,0,64,0,"exports"],[80,2,64,0,"exports"],[80,9,64,7],[80,10,64,8,"getElements"],[80,21,64,0],[80,24,64,22],[80,34,64,31,"options"],[80,41,64,22],[80,43,64,40,"element"],[80,50,64,22],[80,52,64,49,"recurse"],[80,59,64,22],[80,61,64,58,"limit"],[80,66,64,22],[80,68,64,64],[81,0,65,1],[81,8,65,5,"funcs"],[81,13,65,10],[81,16,65,13,"Object"],[81,22,65,19],[81,23,65,20,"keys"],[81,27,65,13],[81,28,65,25,"options"],[81,35,65,13],[81,37,65,34,"map"],[81,40,65,13],[81,41,65,38],[81,51,65,47,"key"],[81,54,65,38],[81,56,65,51],[82,0,66,2],[82,10,66,6,"value"],[82,15,66,11],[82,18,66,14,"options"],[82,25,66,21],[82,26,66,22,"key"],[82,29,66,21],[82,30,66,2],[83,0,67,2],[83,13,67,9,"key"],[83,16,67,12],[83,20,67,16,"Checks"],[83,26,67,9],[83,29,67,25,"Checks"],[83,35,67,31],[83,36,67,32,"key"],[83,39,67,31],[83,40,67,25],[83,41,67,37,"value"],[83,46,67,25],[83,47,67,9],[83,50,67,46,"getAttribCheck"],[83,64,67,60],[83,65,67,61,"key"],[83,68,67,60],[83,70,67,66,"value"],[83,75,67,60],[83,76,67,2],[84,0,68,2],[84,5,65,13],[84,6,65,1],[85,0,70,1],[85,11,70,8,"funcs"],[85,16,70,13],[85,17,70,14,"length"],[85,23,70,8],[85,28,70,25],[85,29,70,8],[85,32,70,29],[85,34,70,8],[85,37,70,34],[85,42,70,39,"filter"],[85,48,70,34],[85,49,71,2,"funcs"],[85,54,71,7],[85,55,71,8,"reduce"],[85,61,71,2],[85,62,71,15,"combineFuncs"],[85,74,71,2],[85,75,70,34],[85,77,72,2,"element"],[85,84,70,34],[85,86,72,11,"recurse"],[85,93,70,34],[85,95,72,20,"limit"],[85,100,70,34],[85,101,70,1],[86,0,74,1],[86,3,64,0],[88,0,76,0,"exports"],[88,2,76,0,"exports"],[88,9,76,7],[88,10,76,8,"getElementById"],[88,24,76,0],[88,27,76,25],[88,37,76,34,"id"],[88,39,76,25],[88,41,76,38,"element"],[88,48,76,25],[88,50,76,47,"recurse"],[88,57,76,25],[88,59,76,55],[89,0,77,1],[89,8,77,4],[89,9,77,5,"Array"],[89,14,77,10],[89,15,77,11,"isArray"],[89,22,77,5],[89,23,77,19,"element"],[89,30,77,5],[89,31,77,1],[89,33,77,29,"element"],[89,40,77,36],[89,43,77,39],[89,44,77,40,"element"],[89,51,77,39],[89,52,77,29],[90,0,78,1],[90,11,78,8],[90,16,78,13,"findOne"],[90,23,78,8],[90,24,78,21,"getAttribCheck"],[90,38,78,35],[90,39,78,36],[90,43,78,35],[90,45,78,42,"id"],[90,47,78,35],[90,48,78,8],[90,50,78,47,"element"],[90,57,78,8],[90,59,78,56,"recurse"],[90,66,78,63],[90,71,78,68],[90,76,78,8],[90,77,78,1],[91,0,79,1],[91,3,76,0],[93,0,81,0,"exports"],[93,2,81,0,"exports"],[93,9,81,7],[93,10,81,8,"getElementsByTagName"],[93,30,81,0],[93,33,81,31],[93,43,81,40,"name"],[93,47,81,31],[93,49,81,46,"element"],[93,56,81,31],[93,58,81,55,"recurse"],[93,65,81,31],[93,67,81,64,"limit"],[93,72,81,31],[93,74,81,70],[94,0,82,1],[94,11,82,8],[94,16,82,13,"filter"],[94,22,82,8],[94,23,82,20,"Checks"],[94,29,82,26],[94,30,82,27,"tag_name"],[94,38,82,20],[94,39,82,36,"name"],[94,43,82,20],[94,44,82,8],[94,46,82,43,"element"],[94,53,82,8],[94,55,82,52,"recurse"],[94,62,82,8],[94,64,82,61,"limit"],[94,69,82,8],[94,70,82,1],[95,0,83,1],[95,3,81,0],[97,0,85,0,"exports"],[97,2,85,0,"exports"],[97,9,85,7],[97,10,85,8,"getElementsByTagType"],[97,30,85,0],[97,33,85,31],[97,43,85,40,"type"],[97,47,85,31],[97,49,85,46,"element"],[97,56,85,31],[97,58,85,55,"recurse"],[97,65,85,31],[97,67,85,64,"limit"],[97,72,85,31],[97,74,85,70],[98,0,86,1],[98,11,86,8],[98,16,86,13,"filter"],[98,22,86,8],[98,23,86,20,"Checks"],[98,29,86,26],[98,30,86,27,"tag_type"],[98,38,86,20],[98,39,86,36,"type"],[98,43,86,20],[98,44,86,8],[98,46,86,43,"element"],[98,53,86,8],[98,55,86,52,"recurse"],[98,62,86,8],[98,64,86,61,"limit"],[98,69,86,8],[98,70,86,1],[99,0,87,1],[99,3,85,0]],"functionMap":{"names":["<global>","exports.testElement","Checks.tag_name","<anonymous>","Checks.tag_type","Checks.tag_contains","getAttribCheck","combineFuncs","exports.getElements","Object.keys.map$argument_0","exports.getElementById","exports.getElementsByTagName","exports.getElementsByTagType"],"mappings":"AAA;sBCG;CDkB;WEG;UCE,wDD;UCI,2DD;EFE;WIC;UDE,yCC;UDE,4CC;EJE;eKC;UFE,yDE;UFE,4DE;ELE;AMG;SHE,qEG;SHE,wEG;CNE;AOE;QJC;EIE;CPC;sBQE;sCCC;EDG;CRM;yBUE;CVG;+BWE;CXE;+BYE;CZE"}},"type":"js/module"}]}