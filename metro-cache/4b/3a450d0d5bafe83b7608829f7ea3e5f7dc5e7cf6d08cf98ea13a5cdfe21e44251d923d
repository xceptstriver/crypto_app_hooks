{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":557,"column":0}},{"start":{"line":1,"column":0},"end":{"line":557,"column":0}},{"start":{"line":1,"column":0},"end":{"line":557,"column":0}},{"start":{"line":1,"column":0},"end":{"line":557,"column":0}},{"start":{"line":1,"column":0},"end":{"line":557,"column":0}},{"start":{"line":1,"column":0},"end":{"line":557,"column":0}},{"start":{"line":1,"column":0},"end":{"line":557,"column":0}},{"start":{"line":1,"column":0},"end":{"line":557,"column":0}},{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},{"start":{"line":9,"column":0},"end":{"line":9,"column":39}},{"start":{"line":10,"column":0},"end":{"line":10,"column":41}},{"start":{"line":11,"column":0},"end":{"line":11,"column":41}},{"start":{"line":12,"column":0},"end":{"line":12,"column":43}},{"start":{"line":13,"column":0},"end":{"line":13,"column":35}},{"start":{"line":14,"column":0},"end":{"line":14,"column":33}},{"start":{"line":15,"column":0},"end":{"line":15,"column":35}},{"start":{"line":16,"column":0},"end":{"line":16,"column":29}},{"start":{"line":17,"column":0},"end":{"line":17,"column":35}},{"start":{"line":18,"column":0},"end":{"line":18,"column":37}},{"start":{"line":19,"column":0},"end":{"line":19,"column":43}},{"start":{"line":20,"column":0},"end":{"line":20,"column":33}},{"start":{"line":21,"column":0},"end":{"line":21,"column":37}},{"start":{"line":22,"column":0},"end":{"line":22,"column":39}},{"start":{"line":23,"column":0},"end":{"line":23,"column":35}},{"start":{"line":24,"column":0},"end":{"line":24,"column":55}},{"start":{"line":25,"column":0},"end":{"line":25,"column":55}},{"start":{"line":26,"column":0},"end":{"line":26,"column":35}},{"start":{"line":27,"column":0},"end":{"line":27,"column":43}},{"start":{"line":28,"column":0},"end":{"line":28,"column":41}},{"start":{"line":29,"column":0},"end":{"line":29,"column":35}},{"start":{"line":30,"column":0},"end":{"line":30,"column":39}}]}},{"name":"@babel/runtime/regenerator","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":557,"column":0}}]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":557,"column":0}}]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":557,"column":0}}]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":557,"column":0}}]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":557,"column":0}}]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":557,"column":0}}]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":557,"column":0}}]}},{"name":"@babel/runtime/helpers/extends","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":557,"column":0}}]}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":7,"column":15}}]}},{"name":"./elements/Rect","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":0},"end":{"line":8,"column":35}}]}},{"name":"./elements/Circle","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":0},"end":{"line":9,"column":39}}]}},{"name":"./elements/Ellipse","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":0},"end":{"line":10,"column":41}}]}},{"name":"./elements/Polygon","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0},"end":{"line":11,"column":41}}]}},{"name":"./elements/Polyline","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":0},"end":{"line":12,"column":43}}]}},{"name":"./elements/Line","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0},"end":{"line":13,"column":35}}]}},{"name":"./elements/Svg","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0},"end":{"line":14,"column":33}}]}},{"name":"./elements/Path","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":35}}]}},{"name":"./elements/G","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0},"end":{"line":16,"column":29}}]}},{"name":"./elements/Text","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":0},"end":{"line":17,"column":35}}]}},{"name":"./elements/TSpan","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":0},"end":{"line":18,"column":37}}]}},{"name":"./elements/TextPath","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":0},"end":{"line":19,"column":43}}]}},{"name":"./elements/Use","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":0},"end":{"line":20,"column":33}}]}},{"name":"./elements/Image","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0},"end":{"line":21,"column":37}}]}},{"name":"./elements/Symbol","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0},"end":{"line":22,"column":39}}]}},{"name":"./elements/Defs","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0},"end":{"line":23,"column":35}}]}},{"name":"./elements/LinearGradient","data":{"asyncType":null,"locs":[{"start":{"line":24,"column":0},"end":{"line":24,"column":55}}]}},{"name":"./elements/RadialGradient","data":{"asyncType":null,"locs":[{"start":{"line":25,"column":0},"end":{"line":25,"column":55}}]}},{"name":"./elements/Stop","data":{"asyncType":null,"locs":[{"start":{"line":26,"column":0},"end":{"line":26,"column":35}}]}},{"name":"./elements/ClipPath","data":{"asyncType":null,"locs":[{"start":{"line":27,"column":0},"end":{"line":27,"column":43}}]}},{"name":"./elements/Pattern","data":{"asyncType":null,"locs":[{"start":{"line":28,"column":0},"end":{"line":28,"column":41}}]}},{"name":"./elements/Mask","data":{"asyncType":null,"locs":[{"start":{"line":29,"column":0},"end":{"line":29,"column":35}}]}},{"name":"./elements/Marker","data":{"asyncType":null,"locs":[{"start":{"line":30,"column":0},"end":{"line":30,"column":39}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SvgAst = SvgAst;\n  exports.SvgXml = SvgXml;\n  exports.fetchText = fetchText;\n  exports.SvgUri = SvgUri;\n  exports.getStyle = getStyle;\n  exports.astToReact = astToReact;\n  exports.parse = _parse;\n  exports.camelCase = exports.SvgFromUri = exports.SvgFromXml = exports.err = exports.tags = void 0;\n\n  var _regenerator = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _slicedToArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _extends2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/extends\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _Rect = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[10], \"./elements/Rect\"));\n\n  var _Circle = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[11], \"./elements/Circle\"));\n\n  var _Ellipse = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[12], \"./elements/Ellipse\"));\n\n  var _Polygon = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[13], \"./elements/Polygon\"));\n\n  var _Polyline = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[14], \"./elements/Polyline\"));\n\n  var _Line = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[15], \"./elements/Line\"));\n\n  var _Svg = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[16], \"./elements/Svg\"));\n\n  var _Path = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[17], \"./elements/Path\"));\n\n  var _G = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[18], \"./elements/G\"));\n\n  var _Text = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[19], \"./elements/Text\"));\n\n  var _TSpan = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[20], \"./elements/TSpan\"));\n\n  var _TextPath = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[21], \"./elements/TextPath\"));\n\n  var _Use = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[22], \"./elements/Use\"));\n\n  var _Image = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[23], \"./elements/Image\"));\n\n  var _Symbol = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[24], \"./elements/Symbol\"));\n\n  var _Defs = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[25], \"./elements/Defs\"));\n\n  var _LinearGradient = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[26], \"./elements/LinearGradient\"));\n\n  var _RadialGradient = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[27], \"./elements/RadialGradient\"));\n\n  var _Stop = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[28], \"./elements/Stop\"));\n\n  var _ClipPath = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[29], \"./elements/ClipPath\"));\n\n  var _Pattern = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[30], \"./elements/Pattern\"));\n\n  var _Mask = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[31], \"./elements/Mask\"));\n\n  var _Marker = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[32], \"./elements/Marker\"));\n\n  var _jsxFileName = \"/home/moglix/crypto_app_hooks/node_modules/react-native-svg/src/xml.tsx\";\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  var tags = {\n    svg: _Svg.default,\n    circle: _Circle.default,\n    ellipse: _Ellipse.default,\n    g: _G.default,\n    text: _Text.default,\n    tspan: _TSpan.default,\n    textPath: _TextPath.default,\n    path: _Path.default,\n    polygon: _Polygon.default,\n    polyline: _Polyline.default,\n    line: _Line.default,\n    rect: _Rect.default,\n    use: _Use.default,\n    image: _Image.default,\n    symbol: _Symbol.default,\n    defs: _Defs.default,\n    linearGradient: _LinearGradient.default,\n    radialGradient: _RadialGradient.default,\n    stop: _Stop.default,\n    clipPath: _ClipPath.default,\n    pattern: _Pattern.default,\n    mask: _Mask.default,\n    marker: _Marker.default\n  };\n  exports.tags = tags;\n\n  function missingTag() {\n    return null;\n  }\n\n  function SvgAst(_ref) {\n    var ast = _ref.ast,\n        override = _ref.override;\n\n    if (!ast) {\n      return null;\n    }\n\n    var props = ast.props,\n        children = ast.children;\n    return _react.default.createElement(_Svg.default, (0, _extends2.default)({}, props, override, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    }), children);\n  }\n\n  var err = console.error.bind(console);\n  exports.err = err;\n\n  function SvgXml(props) {\n    var _props$onError = props.onError,\n        onError = _props$onError === void 0 ? err : _props$onError,\n        xml = props.xml,\n        override = props.override;\n    var ast = (0, _react.useMemo)(function () {\n      return xml !== null ? _parse(xml) : null;\n    }, [xml]);\n\n    try {\n      return _react.default.createElement(SvgAst, {\n        ast: ast,\n        override: override || props,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 12\n        }\n      });\n    } catch (error) {\n      onError(error);\n      return null;\n    }\n  }\n\n  function fetchText(uri) {\n    var response;\n    return _regenerator.default.async(function fetchText$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(fetch(uri));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regenerator.default.awrap(response.text());\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function SvgUri(props) {\n    var _props$onError2 = props.onError,\n        onError = _props$onError2 === void 0 ? err : _props$onError2,\n        uri = props.uri;\n\n    var _useState = (0, _react.useState)(null),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n        xml = _useState2[0],\n        setXml = _useState2[1];\n\n    (0, _react.useEffect)(function () {\n      uri ? fetchText(uri).then(setXml).catch(onError) : setXml(null);\n    }, [onError, uri]);\n    return _react.default.createElement(SvgXml, {\n      xml: xml,\n      override: props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 10\n      }\n    });\n  }\n\n  var SvgFromXml = function (_Component) {\n    (0, _inherits2.default)(SvgFromXml, _Component);\n\n    var _super = _createSuper(SvgFromXml);\n\n    function SvgFromXml() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, SvgFromXml);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.state = {\n        ast: null\n      };\n      return _this;\n    }\n\n    (0, _createClass2.default)(SvgFromXml, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.parse(this.props.xml);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var xml = this.props.xml;\n\n        if (xml !== prevProps.xml) {\n          this.parse(xml);\n        }\n      }\n    }, {\n      key: \"parse\",\n      value: function parse(xml) {\n        try {\n          this.setState({\n            ast: xml ? _parse(xml) : null\n          });\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props,\n            ast = this.state.ast;\n        return _react.default.createElement(SvgAst, {\n          ast: ast,\n          override: props.override || props,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 12\n          }\n        });\n      }\n    }]);\n    return SvgFromXml;\n  }(_react.Component);\n\n  exports.SvgFromXml = SvgFromXml;\n\n  var SvgFromUri = function (_Component2) {\n    (0, _inherits2.default)(SvgFromUri, _Component2);\n\n    var _super2 = _createSuper(SvgFromUri);\n\n    function SvgFromUri() {\n      var _this2;\n\n      (0, _classCallCheck2.default)(this, SvgFromUri);\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this2 = _super2.call.apply(_super2, [this].concat(args));\n      _this2.state = {\n        xml: null\n      };\n      return _this2;\n    }\n\n    (0, _createClass2.default)(SvgFromUri, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.fetch(this.props.uri);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var uri = this.props.uri;\n\n        if (uri !== prevProps.uri) {\n          this.fetch(uri);\n        }\n      }\n    }, {\n      key: \"fetch\",\n      value: function fetch(uri) {\n        return _regenerator.default.async(function fetch$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.t0 = this;\n\n                if (!uri) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 5;\n                return _regenerator.default.awrap(fetchText(uri));\n\n              case 5:\n                _context2.t1 = _context2.sent;\n                _context2.next = 9;\n                break;\n\n              case 8:\n                _context2.t1 = null;\n\n              case 9:\n                _context2.t2 = _context2.t1;\n                _context2.t3 = {\n                  xml: _context2.t2\n                };\n\n                _context2.t0.setState.call(_context2.t0, _context2.t3);\n\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t4 = _context2[\"catch\"](0);\n                console.error(_context2.t4);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this, [[0, 14]], Promise);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props,\n            xml = this.state.xml;\n        return _react.default.createElement(SvgFromXml, {\n          xml: xml,\n          override: props,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 12\n          }\n        });\n      }\n    }]);\n    return SvgFromUri;\n  }(_react.Component);\n\n  exports.SvgFromUri = SvgFromUri;\n\n  var upperCase = function upperCase(_match, letter) {\n    return letter.toUpperCase();\n  };\n\n  var camelCase = function camelCase(phrase) {\n    return phrase.replace(/[:-]([a-z])/g, upperCase);\n  };\n\n  exports.camelCase = camelCase;\n\n  function getStyle(string) {\n    var style = {};\n    var declarations = string.split(';');\n    var length = declarations.length;\n\n    for (var i = 0; i < length; i++) {\n      var declaration = declarations[i];\n\n      if (declaration.length !== 0) {\n        var split = declaration.split(':');\n        var _property = split[0];\n        var value = split[1];\n        style[camelCase(_property.trim())] = value.trim();\n      }\n    }\n\n    return style;\n  }\n\n  function astToReact(value, index) {\n    if (typeof value === 'object') {\n      var Tag = value.Tag,\n          props = value.props,\n          children = value.children;\n      return _react.default.createElement(Tag, (0, _extends2.default)({\n        key: index\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 7\n        }\n      }), children.map(astToReact));\n    }\n\n    return value;\n  }\n\n  function repeat(str, i) {\n    var result = '';\n\n    while (i--) {\n      result += str;\n    }\n\n    return result;\n  }\n\n  var toSpaces = function toSpaces(tabs) {\n    return repeat('  ', tabs.length);\n  };\n\n  function locate(source, i) {\n    var lines = source.split('\\n');\n    var nLines = lines.length;\n    var column = i;\n    var line = 0;\n\n    for (; line < nLines; line++) {\n      var length = lines[line].length;\n\n      if (column >= length) {\n        column -= length;\n      } else {\n        break;\n      }\n    }\n\n    var before = source.slice(0, i).replace(/^\\t+/, toSpaces);\n    var beforeExec = /(^|\\n).*$/.exec(before);\n    var beforeLine = beforeExec && beforeExec[0] || '';\n    var after = source.slice(i);\n    var afterExec = /.*(\\n|$)/.exec(after);\n    var afterLine = afterExec && afterExec[0];\n    var pad = repeat(' ', beforeLine.length);\n    var snippet = \"\" + beforeLine + afterLine + \"\\n\" + pad + \"^\";\n    return {\n      line: line,\n      column: column,\n      snippet: snippet\n    };\n  }\n\n  var validNameCharacters = /[a-zA-Z0-9:_-]/;\n  var whitespace = /[\\s\\t\\r\\n]/;\n  var quotemarks = /['\"]/;\n\n  function _parse(source, middleware) {\n    var length = source.length;\n    var currentElement = null;\n    var state = metadata;\n    var children = null;\n    var root;\n    var stack = [];\n\n    function error(message) {\n      var _locate = locate(source, i),\n          line = _locate.line,\n          column = _locate.column,\n          snippet = _locate.snippet;\n\n      throw new Error(message + \" (\" + line + \":\" + column + \"). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n\" + snippet);\n    }\n\n    function metadata() {\n      while (i + 1 < length && (source[i] !== '<' || !validNameCharacters.test(source[i + 1]))) {\n        i++;\n      }\n\n      return neutral();\n    }\n\n    function neutral() {\n      var text = '';\n      var char;\n\n      while (i < length && (char = source[i]) !== '<') {\n        text += char;\n        i += 1;\n      }\n\n      if (/\\S/.test(text)) {\n        children.push(text);\n      }\n\n      if (source[i] === '<') {\n        return openingTag;\n      }\n\n      return neutral;\n    }\n\n    function openingTag() {\n      var char = source[i];\n\n      if (char === '?') {\n        return neutral;\n      }\n\n      if (char === '!') {\n        var start = i + 1;\n\n        if (source.slice(start, i + 3) === '--') {\n          return comment;\n        }\n\n        var end = i + 8;\n\n        if (source.slice(start, end) === '[CDATA[') {\n          return cdata;\n        }\n\n        if (/doctype/i.test(source.slice(start, end))) {\n          return neutral;\n        }\n      }\n\n      if (char === '/') {\n        return closingTag;\n      }\n\n      var tag = getName();\n      var props = {};\n      var element = {\n        tag: tag,\n        props: props,\n        children: [],\n        parent: currentElement,\n        Tag: tags[tag] || missingTag\n      };\n\n      if (currentElement) {\n        children.push(element);\n      } else {\n        root = element;\n      }\n\n      getAttributes(props);\n      var style = props.style;\n\n      if (typeof style === 'string') {\n        element.styles = style;\n        props.style = getStyle(style);\n      }\n\n      var selfClosing = false;\n\n      if (source[i] === '/') {\n        i += 1;\n        selfClosing = true;\n      }\n\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n\n      if (!selfClosing) {\n        currentElement = element;\n        children = element.children;\n        stack.push(element);\n      }\n\n      return neutral;\n    }\n\n    function comment() {\n      var index = source.indexOf('-->', i);\n\n      if (!~index) {\n        error('expected -->');\n      }\n\n      i = index + 2;\n      return neutral;\n    }\n\n    function cdata() {\n      var index = source.indexOf(']]>', i);\n\n      if (!~index) {\n        error('expected ]]>');\n      }\n\n      children.push(source.slice(i + 7, index));\n      i = index + 2;\n      return neutral;\n    }\n\n    function closingTag() {\n      var tag = getName();\n\n      if (!tag) {\n        error('Expected tag name');\n      }\n\n      if (currentElement && tag !== currentElement.tag) {\n        error(\"Expected closing tag </\" + tag + \"> to match opening tag <\" + currentElement.tag + \">\");\n      }\n\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n\n      stack.pop();\n      currentElement = stack[stack.length - 1];\n\n      if (currentElement) {\n        var _currentElement = currentElement;\n        children = _currentElement.children;\n      }\n\n      return neutral;\n    }\n\n    function getName() {\n      var name = '';\n      var char;\n\n      while (i < length && validNameCharacters.test(char = source[i])) {\n        name += char;\n        i += 1;\n      }\n\n      return name;\n    }\n\n    function getAttributes(props) {\n      while (i < length) {\n        if (!whitespace.test(source[i])) {\n          return;\n        }\n\n        allowSpaces();\n        var name = getName();\n\n        if (!name) {\n          return;\n        }\n\n        var value = true;\n        allowSpaces();\n\n        if (source[i] === '=') {\n          i += 1;\n          allowSpaces();\n          value = getAttributeValue();\n\n          if (!isNaN(+value) && value.trim() !== '') {\n            value = +value;\n          }\n        }\n\n        props[camelCase(name)] = value;\n      }\n    }\n\n    function getAttributeValue() {\n      return quotemarks.test(source[i]) ? getQuotedAttributeValue() : getUnquotedAttributeValue();\n    }\n\n    function getUnquotedAttributeValue() {\n      var value = '';\n\n      do {\n        var char = source[i];\n\n        if (char === ' ' || char === '>' || char === '/') {\n          return value;\n        }\n\n        value += char;\n        i += 1;\n      } while (i < length);\n\n      return value;\n    }\n\n    function getQuotedAttributeValue() {\n      var quotemark = source[i++];\n      var value = '';\n      var escaped = false;\n\n      while (i < length) {\n        var char = source[i++];\n\n        if (char === quotemark && !escaped) {\n          return value;\n        }\n\n        if (char === '\\\\' && !escaped) {\n          escaped = true;\n        }\n\n        value += escaped ? \"\\\\\" + char : char;\n        escaped = false;\n      }\n\n      return value;\n    }\n\n    function allowSpaces() {\n      while (i < length && whitespace.test(source[i])) {\n        i += 1;\n      }\n    }\n\n    var i = 0;\n\n    while (i < length) {\n      if (!state) {\n        error('Unexpected character');\n      }\n\n      state = state();\n      i += 1;\n    }\n\n    if (state !== neutral) {\n      error('Unexpected end of input');\n    }\n\n    if (root) {\n      var xml = (middleware ? middleware(root) : root) || root;\n\n      var _ast = xml.children.map(astToReact);\n\n      var jsx = xml;\n      jsx.children = _ast;\n      return jsx;\n    }\n\n    return null;\n  }\n});","lineCount":776,"map":[[30,0,1,0],[32,0,8,0],[34,0,9,0],[36,0,10,0],[38,0,11,0],[40,0,12,0],[42,0,13,0],[44,0,14,0],[46,0,15,0],[48,0,16,0],[50,0,17,0],[52,0,18,0],[54,0,19,0],[56,0,20,0],[58,0,21,0],[60,0,22,0],[62,0,23,0],[64,0,24,0],[66,0,25,0],[68,0,26,0],[70,0,27,0],[72,0,28,0],[74,0,29,0],[76,0,30,0],[88,0,32,7],[88,6,32,13,"tags"],[88,10,32,51],[88,13,32,54],[89,0,33,2,"svg"],[89,4,33,2,"svg"],[89,7,33,5],[89,9,33,7,"Svg"],[89,21,32,54],[90,0,34,2,"circle"],[90,4,34,2,"circle"],[90,10,34,8],[90,12,34,10,"Circle"],[90,27,32,54],[91,0,35,2,"ellipse"],[91,4,35,2,"ellipse"],[91,11,35,9],[91,13,35,11,"Ellipse"],[91,29,32,54],[92,0,36,2,"g"],[92,4,36,2,"g"],[92,5,36,3],[92,7,36,5,"G"],[92,17,32,54],[93,0,37,2,"text"],[93,4,37,2,"text"],[93,8,37,6],[93,10,37,8,"Text"],[93,23,32,54],[94,0,38,2,"tspan"],[94,4,38,2,"tspan"],[94,9,38,7],[94,11,38,9,"TSpan"],[94,25,32,54],[95,0,39,2,"textPath"],[95,4,39,2,"textPath"],[95,12,39,10],[95,14,39,12,"TextPath"],[95,31,32,54],[96,0,40,2,"path"],[96,4,40,2,"path"],[96,8,40,6],[96,10,40,8,"Path"],[96,23,32,54],[97,0,41,2,"polygon"],[97,4,41,2,"polygon"],[97,11,41,9],[97,13,41,11,"Polygon"],[97,29,32,54],[98,0,42,2,"polyline"],[98,4,42,2,"polyline"],[98,12,42,10],[98,14,42,12,"Polyline"],[98,31,32,54],[99,0,43,2,"line"],[99,4,43,2,"line"],[99,8,43,6],[99,10,43,8,"Line"],[99,23,32,54],[100,0,44,2,"rect"],[100,4,44,2,"rect"],[100,8,44,6],[100,10,44,8,"Rect"],[100,23,32,54],[101,0,45,2,"use"],[101,4,45,2,"use"],[101,7,45,5],[101,9,45,7,"Use"],[101,21,32,54],[102,0,46,2,"image"],[102,4,46,2,"image"],[102,9,46,7],[102,11,46,9,"Image"],[102,25,32,54],[103,0,47,2,"symbol"],[103,4,47,2,"symbol"],[103,10,47,8],[103,12,47,10,"Symbol"],[103,27,32,54],[104,0,48,2,"defs"],[104,4,48,2,"defs"],[104,8,48,6],[104,10,48,8,"Defs"],[104,23,32,54],[105,0,49,2,"linearGradient"],[105,4,49,2,"linearGradient"],[105,18,49,16],[105,20,49,18,"LinearGradient"],[105,43,32,54],[106,0,50,2,"radialGradient"],[106,4,50,2,"radialGradient"],[106,18,50,16],[106,20,50,18,"RadialGradient"],[106,43,32,54],[107,0,51,2,"stop"],[107,4,51,2,"stop"],[107,8,51,6],[107,10,51,8,"Stop"],[107,23,32,54],[108,0,52,2,"clipPath"],[108,4,52,2,"clipPath"],[108,12,52,10],[108,14,52,12,"ClipPath"],[108,31,32,54],[109,0,53,2,"pattern"],[109,4,53,2,"pattern"],[109,11,53,9],[109,13,53,11,"Pattern"],[109,29,32,54],[110,0,54,2,"mask"],[110,4,54,2,"mask"],[110,8,54,6],[110,10,54,8,"Mask"],[110,23,32,54],[111,0,55,2,"marker"],[111,4,55,2,"marker"],[111,10,55,8],[111,12,55,10,"Marker"],[112,0,32,54],[112,3,32,7],[115,0,58,0],[115,11,58,9,"missingTag"],[115,21,58,0],[115,24,58,22],[116,0,59,2],[116,11,59,9],[116,15,59,2],[117,0,60,1],[119,0,97,7],[119,11,97,16,"SvgAst"],[119,17,97,7],[119,24,97,52],[120,0,97,52],[120,8,97,25,"ast"],[120,11,97,52],[120,19,97,25,"ast"],[120,22,97,52],[121,0,97,52],[121,8,97,30,"override"],[121,16,97,52],[121,24,97,30,"override"],[121,32,97,52],[123,0,98,2],[123,8,98,6],[123,9,98,7,"ast"],[123,12,98,2],[123,14,98,12],[124,0,99,4],[124,13,99,11],[124,17,99,4],[125,0,100,3],[127,0,101,2],[127,8,101,10,"props"],[127,13,101,2],[127,16,101,30,"ast"],[127,19,101,2],[127,20,101,10,"props"],[127,25,101,2],[128,0,101,2],[128,8,101,17,"children"],[128,16,101,2],[128,19,101,30,"ast"],[128,22,101,2],[128,23,101,17,"children"],[128,31,101,2],[129,0,102,2],[129,11,103,4],[129,40,103,5],[129,52,103,4],[129,81,103,13,"props"],[129,86,103,4],[129,88,103,24,"override"],[129,96,103,4],[130,0,103,4],[131,0,103,4],[132,0,103,4],[133,0,103,4],[134,0,103,4],[135,0,103,4],[136,0,103,4],[136,8,104,7,"children"],[136,16,103,4],[136,17,102,2],[137,0,107,1],[139,0,109,7],[139,6,109,13,"err"],[139,9,109,16],[139,12,109,19,"console"],[139,19,109,26],[139,20,109,27,"error"],[139,25,109,19],[139,26,109,33,"bind"],[139,30,109,19],[139,31,109,38,"console"],[139,38,109,19],[139,39,109,7],[142,0,111,7],[142,11,111,16,"SvgXml"],[142,17,111,7],[142,18,111,23,"props"],[142,23,111,7],[142,25,111,40],[143,0,112,2],[143,25,112,43,"props"],[143,30,112,2],[143,31,112,10,"onError"],[143,38,112,2],[144,0,112,2],[144,8,112,10,"onError"],[144,15,112,2],[144,46,112,20,"err"],[144,49,112,2],[145,0,112,2],[145,8,112,25,"xml"],[145,11,112,2],[145,14,112,43,"props"],[145,19,112,2],[145,20,112,25,"xml"],[145,23,112,2],[146,0,112,2],[146,8,112,30,"override"],[146,16,112,2],[146,19,112,43,"props"],[146,24,112,2],[146,25,112,30,"override"],[146,33,112,2],[147,0,113,2],[147,8,113,8,"ast"],[147,11,113,11],[147,14,113,14],[147,34,113,37],[148,0,113,37],[148,13,113,44,"xml"],[148,16,113,47],[148,21,113,52],[148,25,113,44],[148,28,113,59,"parse"],[148,34,113,64],[148,35,113,65,"xml"],[148,38,113,64],[148,39,113,44],[148,42,113,72],[148,46,113,37],[149,0,113,37],[149,5,113,14],[149,7,113,79],[149,8,114,4,"xml"],[149,11,113,79],[149,12,113,14],[149,13,113,2],[151,0,117,2],[151,8,117,6],[152,0,118,4],[152,13,118,11],[152,42,118,12],[152,48,118,11],[153,0,118,19],[153,8,118,19],[153,11,118,22],[153,13,118,24,"ast"],[153,16,118,11],[154,0,118,29],[154,8,118,29],[154,16,118,37],[154,18,118,39,"override"],[154,26,118,47],[154,30,118,51,"props"],[154,35,118,11],[155,0,118,11],[156,0,118,11],[157,0,118,11],[158,0,118,11],[159,0,118,11],[160,0,118,11],[161,0,118,11],[161,8,118,4],[162,0,119,3],[162,5,117,2],[162,6,119,4],[162,13,119,11,"error"],[162,18,119,4],[162,20,119,18],[163,0,120,4,"onError"],[163,6,120,4,"onError"],[163,13,120,11],[163,14,120,12,"error"],[163,19,120,11],[163,20,120,4],[164,0,121,4],[164,13,121,11],[164,17,121,4],[165,0,122,3],[166,0,123,1],[168,0,125,7],[168,11,125,22,"fetchText"],[168,20,125,7],[168,21,125,32,"uri"],[168,24,125,7],[169,0,125,7],[170,0,125,7],[171,0,125,7],[172,0,125,7],[173,0,125,7],[174,0,125,7],[175,0,125,7],[175,46,126,25,"fetch"],[175,51,126,30],[175,52,126,31,"uri"],[175,55,126,30],[175,56,125,7],[177,0,125,7],[178,0,126,8,"response"],[178,12,126,8,"response"],[178,20,125,7],[179,0,125,7],[180,0,125,7],[180,46,127,15,"response"],[180,54,127,23],[180,55,127,24,"text"],[180,59,127,15],[180,61,125,7],[182,0,125,7],[183,0,125,7],[185,0,125,7],[186,0,125,7],[187,0,125,7],[188,0,125,7],[189,0,125,7],[190,0,125,7],[191,0,125,7],[193,0,130,7],[193,11,130,16,"SvgUri"],[193,17,130,7],[193,18,130,23,"props"],[193,23,130,7],[193,25,130,40],[194,0,131,2],[194,26,131,33,"props"],[194,31,131,2],[194,32,131,10,"onError"],[194,39,131,2],[195,0,131,2],[195,8,131,10,"onError"],[195,15,131,2],[195,47,131,20,"err"],[195,50,131,2],[196,0,131,2],[196,8,131,25,"uri"],[196,11,131,2],[196,14,131,33,"props"],[196,19,131,2],[196,20,131,25,"uri"],[196,23,131,2],[198,0,132,2],[198,20,132,24],[198,41,132,48],[198,45,132,24],[198,46,132,2],[199,0,132,2],[200,0,132,2],[200,8,132,9,"xml"],[200,11,132,2],[201,0,132,2],[201,8,132,14,"setXml"],[201,14,132,2],[203,0,133,2],[203,26,133,12],[203,38,133,18],[204,0,134,4,"uri"],[204,6,134,4,"uri"],[204,9,134,7],[204,12,135,8,"fetchText"],[204,21,135,17],[204,22,135,18,"uri"],[204,25,135,17],[204,26,135,8],[204,27,136,11,"then"],[204,31,135,8],[204,32,136,16,"setXml"],[204,38,135,8],[204,40,137,11,"catch"],[204,45,135,8],[204,46,137,17,"onError"],[204,53,135,8],[204,54,134,7],[204,57,138,8,"setXml"],[204,63,138,14],[204,64,138,15],[204,68,138,14],[204,69,134,4],[205,0,139,3],[205,5,133,2],[205,7,139,5],[205,8,139,6,"onError"],[205,15,139,5],[205,17,139,15,"uri"],[205,20,139,5],[205,21,133,2],[206,0,140,2],[206,11,140,9],[206,40,140,10],[206,46,140,9],[207,0,140,17],[207,6,140,17],[207,9,140,20],[207,11,140,22,"xml"],[207,14,140,9],[208,0,140,27],[208,6,140,27],[208,14,140,35],[208,16,140,37,"props"],[208,21,140,9],[209,0,140,9],[210,0,140,9],[211,0,140,9],[212,0,140,9],[213,0,140,9],[214,0,140,9],[215,0,140,9],[215,6,140,2],[216,0,141,1],[218,6,145,13,"SvgFromXml"],[218,16],[233,12,146,2,"state"],[233,17],[233,20,146,10],[234,0,146,12,"ast"],[234,8,146,12,"ast"],[234,11,146,15],[234,13,146,17],[235,0,146,10],[235,7],[241,13,147,2],[241,42,147,22],[242,0,148,4],[242,13,148,9,"parse"],[242,18,148,4],[242,19,148,15],[242,24,148,20,"props"],[242,29,148,15],[242,30,148,26,"xml"],[242,33,148,4],[243,0,149,3],[246,13,150,2],[246,41,150,21,"prevProps"],[246,50,150,2],[246,52,150,56],[247,0,151,4],[247,12,151,12,"xml"],[247,15,151,4],[247,18,151,20],[247,23,151,25,"props"],[247,28,151,4],[247,29,151,12,"xml"],[247,32,151,4],[249,0,152,4],[249,12,152,8,"xml"],[249,15,152,11],[249,20,152,16,"prevProps"],[249,29,152,25],[249,30,152,26,"xml"],[249,33,152,4],[249,35,152,31],[250,0,153,6],[250,15,153,11,"parse"],[250,20,153,6],[250,21,153,17,"xml"],[250,24,153,6],[251,0,154,5],[252,0,155,3],[255,13,156,2],[255,28,156,8,"xml"],[255,31,156,2],[255,33,156,28],[256,0,157,4],[256,12,157,8],[257,0,158,6],[257,15,158,11,"setState"],[257,23,158,6],[257,24,158,20],[258,0,158,22,"ast"],[258,12,158,22,"ast"],[258,15,158,25],[258,17,158,27,"xml"],[258,20,158,30],[258,23,158,33,"parse"],[258,29,158,38],[258,30,158,39,"xml"],[258,33,158,38],[258,34,158,30],[258,37,158,46],[259,0,158,20],[259,11,158,6],[260,0,159,5],[260,9,157,4],[260,10,159,6],[260,17,159,13,"e"],[260,18,159,6],[260,20,159,16],[261,0,160,6,"console"],[261,10,160,6,"console"],[261,17,160,13],[261,18,160,14,"error"],[261,23,160,6],[261,24,160,20,"e"],[261,25,160,6],[262,0,161,5],[263,0,162,3],[266,13,163,2],[266,31,163,11],[267,0,164,4],[267,12,165,6,"props"],[267,17,164,4],[267,20,167,8],[267,24,164,4],[267,25,165,6,"props"],[267,30,164,4],[268,0,164,4],[268,12,166,15,"ast"],[268,15,164,4],[268,18,167,8],[268,22,164,4],[268,23,166,6,"state"],[268,28,164,4],[268,29,166,15,"ast"],[268,32,164,4],[269,0,168,4],[269,15,168,11],[269,44,168,12],[269,50,168,11],[270,0,168,19],[270,10,168,19],[270,13,168,22],[270,15,168,24,"ast"],[270,18,168,11],[271,0,168,29],[271,10,168,29],[271,18,168,37],[271,20,168,39,"props"],[271,25,168,44],[271,26,168,45,"override"],[271,34,168,39],[271,38,168,57,"props"],[271,43,168,11],[272,0,168,11],[273,0,168,11],[274,0,168,11],[275,0,168,11],[276,0,168,11],[277,0,168,11],[278,0,168,11],[278,10,168,4],[279,0,169,3],[282,4,145,32,"Component"],[282,20],[286,6,172,13,"SvgFromUri"],[286,16],[301,13,173,2,"state"],[301,18],[301,21,173,10],[302,0,173,12,"xml"],[302,8,173,12,"xml"],[302,11,173,15],[302,13,173,17],[303,0,173,10],[303,7],[309,13,174,2],[309,42,174,22],[310,0,175,4],[310,13,175,9,"fetch"],[310,18,175,4],[310,19,175,15],[310,24,175,20,"props"],[310,29,175,15],[310,30,175,26,"uri"],[310,33,175,4],[311,0,176,3],[314,13,177,2],[314,41,177,21,"prevProps"],[314,50,177,2],[314,52,177,56],[315,0,178,4],[315,12,178,12,"uri"],[315,15,178,4],[315,18,178,20],[315,23,178,25,"props"],[315,28,178,4],[315,29,178,12,"uri"],[315,32,178,4],[317,0,179,4],[317,12,179,8,"uri"],[317,15,179,11],[317,20,179,16,"prevProps"],[317,29,179,25],[317,30,179,26,"uri"],[317,33,179,4],[317,35,179,31],[318,0,180,6],[318,15,180,11,"fetch"],[318,20,180,6],[318,21,180,17,"uri"],[318,24,180,6],[319,0,181,5],[320,0,182,3],[323,13,183,2],[323,28,183,14,"uri"],[323,31,183,2],[324,0,183,2],[325,0,183,2],[326,0,183,2],[327,0,183,2],[328,0,183,2],[329,0,183,2],[329,31,185,6],[329,35,183,2],[331,0,183,2],[331,21,185,27,"uri"],[331,24,183,2],[332,0,183,2],[333,0,183,2],[334,0,183,2],[336,0,183,2],[337,0,183,2],[337,50,185,39,"fetchText"],[337,59,185,48],[337,60,185,49,"uri"],[337,63,185,48],[337,64,183,2],[339,0,183,2],[340,0,183,2],[341,0,183,2],[342,0,183,2],[344,0,183,2],[345,0,183,2],[345,31,185,56],[345,35,183,2],[347,0,183,2],[348,0,183,2],[349,0,183,2],[350,0,185,22,"xml"],[350,18,185,22,"xml"],[350,21,183,2],[351,0,183,2],[353,0,183,2],[353,29,185,11,"setState"],[353,37,183,2],[355,0,183,2],[356,0,183,2],[358,0,183,2],[359,0,183,2],[360,0,183,2],[361,0,187,6,"console"],[361,16,187,6,"console"],[361,23,187,13],[361,24,187,14,"error"],[361,29,187,6],[363,0,183,2],[364,0,183,2],[365,0,183,2],[366,0,183,2],[367,0,183,2],[368,0,183,2],[369,0,183,2],[372,13,190,2],[372,31,190,11],[373,0,191,4],[373,12,192,6,"props"],[373,17,191,4],[373,20,194,8],[373,24,191,4],[373,25,192,6,"props"],[373,30,191,4],[374,0,191,4],[374,12,193,15,"xml"],[374,15,191,4],[374,18,194,8],[374,22,191,4],[374,23,193,6,"state"],[374,28,191,4],[374,29,193,15,"xml"],[374,32,191,4],[375,0,195,4],[375,15,195,11],[375,44,195,12],[375,54,195,11],[376,0,195,23],[376,10,195,23],[376,13,195,26],[376,15,195,28,"xml"],[376,18,195,11],[377,0,195,33],[377,10,195,33],[377,18,195,41],[377,20,195,43,"props"],[377,25,195,11],[378,0,195,11],[379,0,195,11],[380,0,195,11],[381,0,195,11],[382,0,195,11],[383,0,195,11],[384,0,195,11],[384,10,195,4],[385,0,196,3],[388,4,172,32,"Component"],[388,20],[392,0,199,0],[392,6,199,6,"upperCase"],[392,15,199,15],[392,18,199,18],[392,27,199,6,"upperCase"],[392,36,199,18],[392,37,199,19,"_match"],[392,43,199,18],[392,45,199,35,"letter"],[392,51,199,18],[393,0,199,18],[393,11,199,54,"letter"],[393,17,199,60],[393,18,199,61,"toUpperCase"],[393,29,199,54],[393,31,199,18],[394,0,199,18],[394,3,199,0],[396,0,201,7],[396,6,201,13,"camelCase"],[396,15,201,22],[396,18,201,25],[396,27,201,13,"camelCase"],[396,36,201,25],[396,37,201,26,"phrase"],[396,43,201,25],[397,0,201,25],[397,11,202,2,"phrase"],[397,17,202,8],[397,18,202,9,"replace"],[397,25,202,2],[397,26,202,17],[397,40,202,2],[397,42,202,33,"upperCase"],[397,51,202,2],[397,52,201,25],[398,0,201,25],[398,3,201,7],[402,0,206,7],[402,11,206,16,"getStyle"],[402,19,206,7],[402,20,206,25,"string"],[402,26,206,7],[402,28,206,49],[403,0,207,2],[403,8,207,8,"style"],[403,13,207,21],[403,16,207,24],[403,18,207,2],[404,0,208,2],[404,8,208,8,"declarations"],[404,20,208,20],[404,23,208,23,"string"],[404,29,208,29],[404,30,208,30,"split"],[404,35,208,23],[404,36,208,36],[404,39,208,23],[404,40,208,2],[405,0,209,2],[405,8,209,10,"length"],[405,14,209,2],[405,17,209,21,"declarations"],[405,29,209,2],[405,30,209,10,"length"],[405,36,209,2],[407,0,210,2],[407,9,210,7],[407,13,210,11,"i"],[407,14,210,12],[407,17,210,15],[407,18,210,2],[407,20,210,18,"i"],[407,21,210,19],[407,24,210,22,"length"],[407,30,210,2],[407,32,210,30,"i"],[407,33,210,31],[407,35,210,2],[407,37,210,35],[408,0,211,4],[408,10,211,10,"declaration"],[408,21,211,21],[408,24,211,24,"declarations"],[408,36,211,36],[408,37,211,37,"i"],[408,38,211,36],[408,39,211,4],[410,0,212,4],[410,10,212,8,"declaration"],[410,21,212,19],[410,22,212,20,"length"],[410,28,212,8],[410,33,212,31],[410,34,212,4],[410,36,212,34],[411,0,213,6],[411,12,213,12,"split"],[411,17,213,17],[411,20,213,20,"declaration"],[411,31,213,31],[411,32,213,32,"split"],[411,37,213,20],[411,38,213,38],[411,41,213,20],[411,42,213,6],[412,0,214,6],[412,12,214,12,"property"],[412,21,214,20],[412,24,214,23,"split"],[412,29,214,28],[412,30,214,29],[412,31,214,28],[412,32,214,6],[413,0,215,6],[413,12,215,12,"value"],[413,17,215,17],[413,20,215,20,"split"],[413,25,215,25],[413,26,215,26],[413,27,215,25],[413,28,215,6],[414,0,216,6,"style"],[414,8,216,6,"style"],[414,13,216,11],[414,14,216,12,"camelCase"],[414,23,216,21],[414,24,216,22,"property"],[414,33,216,30],[414,34,216,31,"trim"],[414,38,216,22],[414,40,216,21],[414,41,216,11],[414,42,216,6],[414,45,216,42,"value"],[414,50,216,47],[414,51,216,48,"trim"],[414,55,216,42],[414,57,216,6],[415,0,217,5],[416,0,218,3],[418,0,219,2],[418,11,219,9,"style"],[418,16,219,2],[419,0,220,1],[421,0,222,7],[421,11,222,16,"astToReact"],[421,21,222,7],[421,22,223,2,"value"],[421,27,222,7],[421,29,224,2,"index"],[421,34,222,7],[421,36,225,24],[422,0,226,2],[422,8,226,6],[422,15,226,13,"value"],[422,20,226,6],[422,25,226,23],[422,33,226,2],[422,35,226,33],[423,0,227,4],[423,10,227,12,"Tag"],[423,13,227,4],[423,16,227,37,"value"],[423,21,227,4],[423,22,227,12,"Tag"],[423,25,227,4],[424,0,227,4],[424,10,227,17,"props"],[424,15,227,4],[424,18,227,37,"value"],[424,23,227,4],[424,24,227,17,"props"],[424,29,227,4],[425,0,227,4],[425,10,227,24,"children"],[425,18,227,4],[425,21,227,37,"value"],[425,26,227,4],[425,27,227,24,"children"],[425,35,227,4],[426,0,228,4],[426,13,229,6],[426,42,229,7],[426,45,229,6],[427,0,229,11],[427,8,229,11],[427,11,229,14],[427,13,229,16,"index"],[428,0,229,6],[428,9,229,27,"props"],[428,14,229,6],[429,0,229,6],[430,0,229,6],[431,0,229,6],[432,0,229,6],[433,0,229,6],[434,0,229,6],[435,0,229,6],[435,10,230,10,"children"],[435,18,230,9],[435,19,230,40,"map"],[435,22,230,9],[435,23,230,44,"astToReact"],[435,33,230,9],[435,34,229,6],[435,35,228,4],[436,0,233,3],[438,0,234,2],[438,11,234,9,"value"],[438,16,234,2],[439,0,235,1],[441,0,239,0],[441,11,239,9,"repeat"],[441,17,239,0],[441,18,239,16,"str"],[441,21,239,0],[441,23,239,29,"i"],[441,24,239,0],[441,26,239,40],[442,0,240,2],[442,8,240,6,"result"],[442,14,240,12],[442,17,240,15],[442,19,240,2],[444,0,241,2],[444,11,241,9,"i"],[444,12,241,10],[444,14,241,2],[444,16,241,14],[445,0,242,4,"result"],[445,6,242,4,"result"],[445,12,242,10],[445,16,242,14,"str"],[445,19,242,4],[446,0,243,3],[448,0,244,2],[448,11,244,9,"result"],[448,17,244,2],[449,0,245,1],[451,0,247,0],[451,6,247,6,"toSpaces"],[451,14,247,14],[451,17,247,17],[451,26,247,6,"toSpaces"],[451,34,247,17],[451,35,247,18,"tabs"],[451,39,247,17],[452,0,247,17],[452,11,247,35,"repeat"],[452,17,247,41],[452,18,247,42],[452,22,247,41],[452,24,247,48,"tabs"],[452,28,247,52],[452,29,247,53,"length"],[452,35,247,41],[452,36,247,17],[453,0,247,17],[453,3,247,0],[455,0,249,0],[455,11,249,9,"locate"],[455,17,249,0],[455,18,249,16,"source"],[455,24,249,0],[455,26,249,32,"i"],[455,27,249,0],[455,29,249,43],[456,0,250,2],[456,8,250,8,"lines"],[456,13,250,13],[456,16,250,16,"source"],[456,22,250,22],[456,23,250,23,"split"],[456,28,250,16],[456,29,250,29],[456,33,250,16],[456,34,250,2],[457,0,251,2],[457,8,251,8,"nLines"],[457,14,251,14],[457,17,251,17,"lines"],[457,22,251,22],[457,23,251,23,"length"],[457,29,251,2],[458,0,252,2],[458,8,252,6,"column"],[458,14,252,12],[458,17,252,15,"i"],[458,18,252,2],[459,0,253,2],[459,8,253,6,"line"],[459,12,253,10],[459,15,253,13],[459,16,253,2],[461,0,254,2],[461,11,254,9,"line"],[461,15,254,13],[461,18,254,16,"nLines"],[461,24,254,2],[461,26,254,24,"line"],[461,30,254,28],[461,32,254,2],[461,34,254,32],[462,0,255,4],[462,10,255,12,"length"],[462,16,255,4],[462,19,255,23,"lines"],[462,24,255,28],[462,25,255,29,"line"],[462,29,255,28],[462,30,255,4],[462,31,255,12,"length"],[462,37,255,4],[464,0,256,4],[464,10,256,8,"column"],[464,16,256,14],[464,20,256,18,"length"],[464,26,256,4],[464,28,256,26],[465,0,257,6,"column"],[465,8,257,6,"column"],[465,14,257,12],[465,18,257,16,"length"],[465,24,257,6],[466,0,258,5],[466,7,256,4],[466,13,258,11],[467,0,259,6],[468,0,260,5],[469,0,261,3],[471,0,262,2],[471,8,262,8,"before"],[471,14,262,14],[471,17,262,17,"source"],[471,23,262,23],[471,24,262,24,"slice"],[471,29,262,17],[471,30,262,30],[471,31,262,17],[471,33,262,33,"i"],[471,34,262,17],[471,36,262,36,"replace"],[471,43,262,17],[471,44,262,44],[471,50,262,17],[471,52,262,52,"toSpaces"],[471,60,262,17],[471,61,262,2],[472,0,263,2],[472,8,263,8,"beforeExec"],[472,18,263,18],[472,21,263,21],[472,33,263,33,"exec"],[472,37,263,21],[472,38,263,38,"before"],[472,44,263,21],[472,45,263,2],[473,0,264,2],[473,8,264,8,"beforeLine"],[473,18,264,18],[473,21,264,22,"beforeExec"],[473,31,264,32],[473,35,264,36,"beforeExec"],[473,45,264,46],[473,46,264,47],[473,47,264,46],[473,48,264,21],[473,52,264,54],[473,54,264,2],[474,0,265,2],[474,8,265,8,"after"],[474,13,265,13],[474,16,265,16,"source"],[474,22,265,22],[474,23,265,23,"slice"],[474,28,265,16],[474,29,265,29,"i"],[474,30,265,16],[474,31,265,2],[475,0,266,2],[475,8,266,8,"afterExec"],[475,17,266,17],[475,20,266,20],[475,31,266,31,"exec"],[475,35,266,20],[475,36,266,36,"after"],[475,41,266,20],[475,42,266,2],[476,0,267,2],[476,8,267,8,"afterLine"],[476,17,267,17],[476,20,267,20,"afterExec"],[476,29,267,29],[476,33,267,33,"afterExec"],[476,42,267,42],[476,43,267,43],[476,44,267,42],[476,45,267,2],[477,0,268,2],[477,8,268,8,"pad"],[477,11,268,11],[477,14,268,14,"repeat"],[477,20,268,20],[477,21,268,21],[477,24,268,20],[477,26,268,26,"beforeLine"],[477,36,268,36],[477,37,268,37,"length"],[477,43,268,20],[477,44,268,2],[478,0,269,2],[478,8,269,8,"snippet"],[478,15,269,15],[478,23,269,21,"beforeLine"],[478,33,269,15],[478,36,269,34,"afterLine"],[478,45,269,15],[478,55,269,48,"pad"],[478,58,269,15],[478,64,269,2],[479,0,270,2],[479,11,270,9],[480,0,270,11,"line"],[480,6,270,11,"line"],[480,10,270,15],[480,12,270,11,"line"],[480,16,270,9],[481,0,270,17,"column"],[481,6,270,17,"column"],[481,12,270,23],[481,14,270,17,"column"],[481,20,270,9],[482,0,270,25,"snippet"],[482,6,270,25,"snippet"],[482,13,270,32],[482,15,270,25,"snippet"],[483,0,270,9],[483,5,270,2],[484,0,271,1],[486,0,273,0],[486,6,273,6,"validNameCharacters"],[486,25,273,25],[486,28,273,28],[486,44,273,0],[487,0,274,0],[487,6,274,6,"whitespace"],[487,16,274,16],[487,19,274,19],[487,31,274,0],[488,0,275,0],[488,6,275,6,"quotemarks"],[488,16,275,16],[488,19,275,19],[488,25,275,0],[490,0,279,7],[490,11,279,16,"parse"],[490,17,279,7],[490,18,279,22,"source"],[490,24,279,7],[490,26,279,38,"middleware"],[490,36,279,7],[490,38,279,78],[491,0,280,2],[491,8,280,8,"length"],[491,14,280,14],[491,17,280,17,"source"],[491,23,280,23],[491,24,280,24,"length"],[491,30,280,2],[492,0,281,2],[492,8,281,6,"currentElement"],[492,22,281,35],[492,25,281,38],[492,29,281,2],[493,0,282,2],[493,8,282,6,"state"],[493,13,282,11],[493,16,282,14,"metadata"],[493,24,282,2],[494,0,283,2],[494,8,283,6,"children"],[494,16,283,14],[494,19,283,17],[494,23,283,2],[495,0,284,2],[495,8,284,6,"root"],[495,12,284,2],[496,0,285,2],[496,8,285,6,"stack"],[496,13,285,21],[496,16,285,24],[496,18,285,2],[498,0,287,2],[498,13,287,11,"error"],[498,18,287,2],[498,19,287,17,"message"],[498,26,287,2],[498,28,287,34],[499,0,288,4],[499,20,288,38,"locate"],[499,26,288,44],[499,27,288,45,"source"],[499,33,288,44],[499,35,288,53,"i"],[499,36,288,44],[499,37,288,4],[500,0,288,4],[500,10,288,12,"line"],[500,14,288,4],[500,25,288,12,"line"],[500,29,288,4],[501,0,288,4],[501,10,288,18,"column"],[501,16,288,4],[501,27,288,18,"column"],[501,33,288,4],[502,0,288,4],[502,10,288,26,"snippet"],[502,17,288,4],[502,28,288,26,"snippet"],[502,35,288,4],[504,0,289,4],[504,12,289,10],[504,16,289,14,"Error"],[504,21,289,10],[504,22,290,9,"message"],[504,29,289,10],[504,39,290,21,"line"],[504,43,289,10],[504,52,290,29,"column"],[504,58,289,10],[504,137,290,109,"snippet"],[504,144,289,10],[504,145,289,4],[505,0,292,3],[507,0,294,2],[507,13,294,11,"metadata"],[507,21,294,2],[507,24,294,22],[508,0,295,4],[508,13,296,6,"i"],[508,14,296,7],[508,17,296,10],[508,18,296,6],[508,21,296,14,"length"],[508,27,296,6],[508,32,297,7,"source"],[508,38,297,13],[508,39,297,14,"i"],[508,40,297,13],[508,41,297,7],[508,46,297,21],[508,49,297,7],[508,53,297,28],[508,54,297,29,"validNameCharacters"],[508,73,297,48],[508,74,297,49,"test"],[508,78,297,29],[508,79,297,54,"source"],[508,85,297,60],[508,86,297,61,"i"],[508,87,297,62],[508,90,297,65],[508,91,297,60],[508,92,297,29],[508,93,296,6],[508,94,295,4],[508,96,298,6],[509,0,299,6,"i"],[509,8,299,6,"i"],[509,9,299,7],[510,0,300,5],[512,0,302,4],[512,13,302,11,"neutral"],[512,20,302,18],[512,22,302,4],[513,0,303,3],[515,0,305,2],[515,13,305,11,"neutral"],[515,20,305,2],[515,23,305,21],[516,0,306,4],[516,10,306,8,"text"],[516,14,306,12],[516,17,306,15],[516,19,306,4],[517,0,307,4],[517,10,307,8,"char"],[517,14,307,4],[519,0,308,4],[519,13,308,11,"i"],[519,14,308,12],[519,17,308,15,"length"],[519,23,308,11],[519,27,308,25],[519,28,308,26,"char"],[519,32,308,30],[519,35,308,33,"source"],[519,41,308,39],[519,42,308,40,"i"],[519,43,308,39],[519,44,308,25],[519,50,308,48],[519,53,308,4],[519,55,308,53],[520,0,309,6,"text"],[520,8,309,6,"text"],[520,12,309,10],[520,16,309,14,"char"],[520,20,309,6],[521,0,310,6,"i"],[521,8,310,6,"i"],[521,9,310,7],[521,13,310,11],[521,14,310,6],[522,0,311,5],[524,0,313,4],[524,10,313,8],[524,15,313,13,"test"],[524,19,313,8],[524,20,313,18,"text"],[524,24,313,8],[524,25,313,4],[524,27,313,25],[525,0,314,6,"children"],[525,8,314,6,"children"],[525,16,314,14],[525,17,314,15,"push"],[525,21,314,6],[525,22,314,20,"text"],[525,26,314,6],[526,0,315,5],[528,0,317,4],[528,10,317,8,"source"],[528,16,317,14],[528,17,317,15,"i"],[528,18,317,14],[528,19,317,8],[528,24,317,22],[528,27,317,4],[528,29,317,27],[529,0,318,6],[529,15,318,13,"openingTag"],[529,25,318,6],[530,0,319,5],[532,0,321,4],[532,13,321,11,"neutral"],[532,20,321,4],[533,0,322,3],[535,0,324,2],[535,13,324,11,"openingTag"],[535,23,324,2],[535,26,324,24],[536,0,325,4],[536,10,325,10,"char"],[536,14,325,14],[536,17,325,17,"source"],[536,23,325,23],[536,24,325,24,"i"],[536,25,325,23],[536,26,325,4],[538,0,327,4],[538,10,327,8,"char"],[538,14,327,12],[538,19,327,17],[538,22,327,4],[538,24,327,22],[539,0,328,6],[539,15,328,13,"neutral"],[539,22,328,6],[540,0,329,5],[542,0,331,4],[542,10,331,8,"char"],[542,14,331,12],[542,19,331,17],[542,22,331,4],[542,24,331,22],[543,0,332,6],[543,12,332,12,"start"],[543,17,332,17],[543,20,332,20,"i"],[543,21,332,21],[543,24,332,24],[543,25,332,6],[545,0,333,6],[545,12,333,10,"source"],[545,18,333,16],[545,19,333,17,"slice"],[545,24,333,10],[545,25,333,23,"start"],[545,30,333,10],[545,32,333,30,"i"],[545,33,333,31],[545,36,333,34],[545,37,333,10],[545,43,333,41],[545,47,333,6],[545,49,333,47],[546,0,334,8],[546,17,334,15,"comment"],[546,24,334,8],[547,0,335,7],[549,0,336,6],[549,12,336,12,"end"],[549,15,336,15],[549,18,336,18,"i"],[549,19,336,19],[549,22,336,22],[549,23,336,6],[551,0,337,6],[551,12,337,10,"source"],[551,18,337,16],[551,19,337,17,"slice"],[551,24,337,10],[551,25,337,23,"start"],[551,30,337,10],[551,32,337,30,"end"],[551,35,337,10],[551,41,337,39],[551,50,337,6],[551,52,337,50],[552,0,338,8],[552,17,338,15,"cdata"],[552,22,338,8],[553,0,339,7],[555,0,340,6],[555,12,340,10],[555,23,340,21,"test"],[555,27,340,10],[555,28,340,26,"source"],[555,34,340,32],[555,35,340,33,"slice"],[555,40,340,26],[555,41,340,39,"start"],[555,46,340,26],[555,48,340,46,"end"],[555,51,340,26],[555,52,340,10],[555,53,340,6],[555,55,340,53],[556,0,341,8],[556,17,341,15,"neutral"],[556,24,341,8],[557,0,342,7],[558,0,343,5],[560,0,345,4],[560,10,345,8,"char"],[560,14,345,12],[560,19,345,17],[560,22,345,4],[560,24,345,22],[561,0,346,6],[561,15,346,13,"closingTag"],[561,25,346,6],[562,0,347,5],[564,0,349,4],[564,10,349,10,"tag"],[564,13,349,13],[564,16,349,16,"getName"],[564,23,349,23],[564,25,349,4],[565,0,350,4],[565,10,350,10,"props"],[565,15,350,64],[565,18,350,67],[565,20,350,4],[566,0,351,4],[566,10,351,10,"element"],[566,17,351,25],[566,20,351,28],[567,0,352,6,"tag"],[567,8,352,6,"tag"],[567,11,352,9],[567,13,352,6,"tag"],[567,16,351,28],[568,0,353,6,"props"],[568,8,353,6,"props"],[568,13,353,11],[568,15,353,6,"props"],[568,20,351,28],[569,0,354,6,"children"],[569,8,354,6,"children"],[569,16,354,14],[569,18,354,16],[569,20,351,28],[570,0,355,6,"parent"],[570,8,355,6,"parent"],[570,14,355,12],[570,16,355,14,"currentElement"],[570,30,351,28],[571,0,356,6,"Tag"],[571,8,356,6,"Tag"],[571,11,356,9],[571,13,356,11,"tags"],[571,17,356,15],[571,18,356,16,"tag"],[571,21,356,15],[571,22,356,11],[571,26,356,24,"missingTag"],[572,0,351,28],[572,7,351,4],[574,0,359,4],[574,10,359,8,"currentElement"],[574,24,359,4],[574,26,359,24],[575,0,360,6,"children"],[575,8,360,6,"children"],[575,16,360,14],[575,17,360,15,"push"],[575,21,360,6],[575,22,360,20,"element"],[575,29,360,6],[576,0,361,5],[576,7,359,4],[576,13,361,11],[577,0,362,6,"root"],[577,8,362,6,"root"],[577,12,362,10],[577,15,362,13,"element"],[577,22,362,6],[578,0,363,5],[580,0,365,4,"getAttributes"],[580,6,365,4,"getAttributes"],[580,19,365,17],[580,20,365,18,"props"],[580,25,365,17],[580,26,365,4],[581,0,367,4],[581,10,367,12,"style"],[581,15,367,4],[581,18,367,22,"props"],[581,23,367,4],[581,24,367,12,"style"],[581,29,367,4],[583,0,368,4],[583,10,368,8],[583,17,368,15,"style"],[583,22,368,8],[583,27,368,25],[583,35,368,4],[583,37,368,35],[584,0,369,6,"element"],[584,8,369,6,"element"],[584,15,369,13],[584,16,369,14,"styles"],[584,22,369,6],[584,25,369,23,"style"],[584,30,369,6],[585,0,370,6,"props"],[585,8,370,6,"props"],[585,13,370,11],[585,14,370,12,"style"],[585,19,370,6],[585,22,370,20,"getStyle"],[585,30,370,28],[585,31,370,29,"style"],[585,36,370,28],[585,37,370,6],[586,0,371,5],[588,0,373,4],[588,10,373,8,"selfClosing"],[588,21,373,19],[588,24,373,22],[588,29,373,4],[590,0,375,4],[590,10,375,8,"source"],[590,16,375,14],[590,17,375,15,"i"],[590,18,375,14],[590,19,375,8],[590,24,375,22],[590,27,375,4],[590,29,375,27],[591,0,376,6,"i"],[591,8,376,6,"i"],[591,9,376,7],[591,13,376,11],[591,14,376,6],[592,0,377,6,"selfClosing"],[592,8,377,6,"selfClosing"],[592,19,377,17],[592,22,377,20],[592,26,377,6],[593,0,378,5],[595,0,380,4],[595,10,380,8,"source"],[595,16,380,14],[595,17,380,15,"i"],[595,18,380,14],[595,19,380,8],[595,24,380,22],[595,27,380,4],[595,29,380,27],[596,0,381,6,"error"],[596,8,381,6,"error"],[596,13,381,11],[596,14,381,12],[596,26,381,11],[596,27,381,6],[597,0,382,5],[599,0,384,4],[599,10,384,8],[599,11,384,9,"selfClosing"],[599,22,384,4],[599,24,384,22],[600,0,385,6,"currentElement"],[600,8,385,6,"currentElement"],[600,22,385,20],[600,25,385,23,"element"],[600,32,385,6],[601,0,386,9,"children"],[601,8,386,9,"children"],[601,16,384,22],[601,19,386,22,"element"],[601,26,384,22],[601,27,386,9,"children"],[601,35,384,22],[602,0,387,6,"stack"],[602,8,387,6,"stack"],[602,13,387,11],[602,14,387,12,"push"],[602,18,387,6],[602,19,387,17,"element"],[602,26,387,6],[603,0,388,5],[605,0,390,4],[605,13,390,11,"neutral"],[605,20,390,4],[606,0,391,3],[608,0,393,2],[608,13,393,11,"comment"],[608,20,393,2],[608,23,393,21],[609,0,394,4],[609,10,394,10,"index"],[609,15,394,15],[609,18,394,18,"source"],[609,24,394,24],[609,25,394,25,"indexOf"],[609,32,394,18],[609,33,394,33],[609,38,394,18],[609,40,394,40,"i"],[609,41,394,18],[609,42,394,4],[611,0,395,4],[611,10,395,8],[611,11,395,9],[611,12,395,10,"index"],[611,17,395,4],[611,19,395,17],[612,0,396,6,"error"],[612,8,396,6,"error"],[612,13,396,11],[612,14,396,12],[612,28,396,11],[612,29,396,6],[613,0,397,5],[615,0,399,4,"i"],[615,6,399,4,"i"],[615,7,399,5],[615,10,399,8,"index"],[615,15,399,13],[615,18,399,16],[615,19,399,4],[616,0,400,4],[616,13,400,11,"neutral"],[616,20,400,4],[617,0,401,3],[619,0,403,2],[619,13,403,11,"cdata"],[619,18,403,2],[619,21,403,19],[620,0,404,4],[620,10,404,10,"index"],[620,15,404,15],[620,18,404,18,"source"],[620,24,404,24],[620,25,404,25,"indexOf"],[620,32,404,18],[620,33,404,33],[620,38,404,18],[620,40,404,40,"i"],[620,41,404,18],[620,42,404,4],[622,0,405,4],[622,10,405,8],[622,11,405,9],[622,12,405,10,"index"],[622,17,405,4],[622,19,405,17],[623,0,406,6,"error"],[623,8,406,6,"error"],[623,13,406,11],[623,14,406,12],[623,28,406,11],[623,29,406,6],[624,0,407,5],[626,0,409,4,"children"],[626,6,409,4,"children"],[626,14,409,12],[626,15,409,13,"push"],[626,19,409,4],[626,20,409,18,"source"],[626,26,409,24],[626,27,409,25,"slice"],[626,32,409,18],[626,33,409,31,"i"],[626,34,409,32],[626,37,409,35],[626,38,409,18],[626,40,409,38,"index"],[626,45,409,18],[626,46,409,4],[627,0,411,4,"i"],[627,6,411,4,"i"],[627,7,411,5],[627,10,411,8,"index"],[627,15,411,13],[627,18,411,16],[627,19,411,4],[628,0,412,4],[628,13,412,11,"neutral"],[628,20,412,4],[629,0,413,3],[631,0,415,2],[631,13,415,11,"closingTag"],[631,23,415,2],[631,26,415,24],[632,0,416,4],[632,10,416,10,"tag"],[632,13,416,13],[632,16,416,16,"getName"],[632,23,416,23],[632,25,416,4],[634,0,418,4],[634,10,418,8],[634,11,418,9,"tag"],[634,14,418,4],[634,16,418,14],[635,0,419,6,"error"],[635,8,419,6,"error"],[635,13,419,11],[635,14,419,12],[635,33,419,11],[635,34,419,6],[636,0,420,5],[638,0,422,4],[638,10,422,8,"currentElement"],[638,24,422,22],[638,28,422,26,"tag"],[638,31,422,29],[638,36,422,34,"currentElement"],[638,50,422,48],[638,51,422,49,"tag"],[638,54,422,4],[638,56,422,54],[639,0,423,6,"error"],[639,8,423,6,"error"],[639,13,423,11],[639,42,424,34,"tag"],[639,45,423,11],[639,77,424,64,"currentElement"],[639,91,424,78],[639,92,424,79,"tag"],[639,95,423,11],[639,102,423,6],[640,0,426,5],[642,0,428,4],[642,10,428,8,"source"],[642,16,428,14],[642,17,428,15,"i"],[642,18,428,14],[642,19,428,8],[642,24,428,22],[642,27,428,4],[642,29,428,27],[643,0,429,6,"error"],[643,8,429,6,"error"],[643,13,429,11],[643,14,429,12],[643,26,429,11],[643,27,429,6],[644,0,430,5],[646,0,432,4,"stack"],[646,6,432,4,"stack"],[646,11,432,9],[646,12,432,10,"pop"],[646,15,432,4],[647,0,433,4,"currentElement"],[647,6,433,4,"currentElement"],[647,20,433,18],[647,23,433,21,"stack"],[647,28,433,26],[647,29,433,27,"stack"],[647,34,433,32],[647,35,433,33,"length"],[647,41,433,27],[647,44,433,42],[647,45,433,26],[647,46,433,4],[649,0,434,4],[649,10,434,8,"currentElement"],[649,24,434,4],[649,26,434,24],[650,0,434,24],[650,30,435,22,"currentElement"],[650,44,434,24],[651,0,435,9,"children"],[651,8,435,9,"children"],[651,16,434,24],[651,35,435,9,"children"],[651,43,434,24],[652,0,436,5],[654,0,438,4],[654,13,438,11,"neutral"],[654,20,438,4],[655,0,439,3],[657,0,441,2],[657,13,441,11,"getName"],[657,20,441,2],[657,23,441,21],[658,0,442,4],[658,10,442,8,"name"],[658,14,442,12],[658,17,442,15],[658,19,442,4],[659,0,443,4],[659,10,443,8,"char"],[659,14,443,4],[661,0,444,4],[661,13,444,11,"i"],[661,14,444,12],[661,17,444,15,"length"],[661,23,444,11],[661,27,444,25,"validNameCharacters"],[661,46,444,44],[661,47,444,45,"test"],[661,51,444,25],[661,52,444,51,"char"],[661,56,444,55],[661,59,444,58,"source"],[661,65,444,64],[661,66,444,65,"i"],[661,67,444,64],[661,68,444,25],[661,69,444,4],[661,71,444,71],[662,0,445,6,"name"],[662,8,445,6,"name"],[662,12,445,10],[662,16,445,14,"char"],[662,20,445,6],[663,0,446,6,"i"],[663,8,446,6,"i"],[663,9,446,7],[663,13,446,11],[663,14,446,6],[664,0,447,5],[666,0,449,4],[666,13,449,11,"name"],[666,17,449,4],[667,0,450,3],[669,0,452,2],[669,13,452,11,"getAttributes"],[669,26,452,2],[669,27,452,25,"props"],[669,32,452,2],[669,34,455,5],[670,0,456,4],[670,13,456,11,"i"],[670,14,456,12],[670,17,456,15,"length"],[670,23,456,4],[670,25,456,23],[671,0,457,6],[671,12,457,10],[671,13,457,11,"whitespace"],[671,23,457,21],[671,24,457,22,"test"],[671,28,457,11],[671,29,457,27,"source"],[671,35,457,33],[671,36,457,34,"i"],[671,37,457,33],[671,38,457,11],[671,39,457,6],[671,41,457,39],[672,0,458,8],[673,0,459,7],[675,0,460,6,"allowSpaces"],[675,8,460,6,"allowSpaces"],[675,19,460,17],[676,0,462,6],[676,12,462,12,"name"],[676,16,462,16],[676,19,462,19,"getName"],[676,26,462,26],[676,28,462,6],[678,0,463,6],[678,12,463,10],[678,13,463,11,"name"],[678,17,463,6],[678,19,463,17],[679,0,464,8],[680,0,465,7],[682,0,467,6],[682,12,467,10,"value"],[682,17,467,42],[682,20,467,45],[682,24,467,6],[683,0,469,6,"allowSpaces"],[683,8,469,6,"allowSpaces"],[683,19,469,17],[685,0,470,6],[685,12,470,10,"source"],[685,18,470,16],[685,19,470,17,"i"],[685,20,470,16],[685,21,470,10],[685,26,470,24],[685,29,470,6],[685,31,470,29],[686,0,471,8,"i"],[686,10,471,8,"i"],[686,11,471,9],[686,15,471,13],[686,16,471,8],[687,0,472,8,"allowSpaces"],[687,10,472,8,"allowSpaces"],[687,21,472,19],[688,0,474,8,"value"],[688,10,474,8,"value"],[688,15,474,13],[688,18,474,16,"getAttributeValue"],[688,35,474,33],[688,37,474,8],[690,0,475,8],[690,14,475,12],[690,15,475,13,"isNaN"],[690,20,475,18],[690,21,475,19],[690,22,475,20,"value"],[690,27,475,18],[690,28,475,12],[690,32,475,30,"value"],[690,37,475,35],[690,38,475,36,"trim"],[690,42,475,30],[690,49,475,47],[690,51,475,8],[690,53,475,51],[691,0,476,10,"value"],[691,12,476,10,"value"],[691,17,476,15],[691,20,476,18],[691,21,476,19,"value"],[691,26,476,10],[692,0,477,9],[693,0,478,7],[695,0,480,6,"props"],[695,8,480,6,"props"],[695,13,480,11],[695,14,480,12,"camelCase"],[695,23,480,21],[695,24,480,22,"name"],[695,28,480,21],[695,29,480,11],[695,30,480,6],[695,33,480,31,"value"],[695,38,480,6],[696,0,481,5],[697,0,482,3],[699,0,484,2],[699,13,484,11,"getAttributeValue"],[699,30,484,2],[699,33,484,39],[700,0,485,4],[700,13,485,11,"quotemarks"],[700,23,485,21],[700,24,485,22,"test"],[700,28,485,11],[700,29,485,27,"source"],[700,35,485,33],[700,36,485,34,"i"],[700,37,485,33],[700,38,485,11],[700,42,486,8,"getQuotedAttributeValue"],[700,65,486,31],[700,67,485,11],[700,70,487,8,"getUnquotedAttributeValue"],[700,95,487,33],[700,97,485,4],[701,0,488,3],[703,0,490,2],[703,13,490,11,"getUnquotedAttributeValue"],[703,38,490,2],[703,41,490,39],[704,0,491,4],[704,10,491,8,"value"],[704,15,491,13],[704,18,491,16],[704,20,491,4],[706,0,492,4],[706,9,492,7],[707,0,493,6],[707,12,493,12,"char"],[707,16,493,16],[707,19,493,19,"source"],[707,25,493,25],[707,26,493,26,"i"],[707,27,493,25],[707,28,493,6],[709,0,494,6],[709,12,494,10,"char"],[709,16,494,14],[709,21,494,19],[709,24,494,10],[709,28,494,26,"char"],[709,32,494,30],[709,37,494,35],[709,40,494,10],[709,44,494,42,"char"],[709,48,494,46],[709,53,494,51],[709,56,494,6],[709,58,494,56],[710,0,495,8],[710,17,495,15,"value"],[710,22,495,8],[711,0,496,7],[713,0,498,6,"value"],[713,8,498,6,"value"],[713,13,498,11],[713,17,498,15,"char"],[713,21,498,6],[714,0,499,6,"i"],[714,8,499,6,"i"],[714,9,499,7],[714,13,499,11],[714,14,499,6],[715,0,500,5],[715,7,492,4],[715,15,500,13,"i"],[715,16,500,14],[715,19,500,17,"length"],[715,25,492,4],[717,0,502,4],[717,13,502,11,"value"],[717,18,502,4],[718,0,503,3],[720,0,505,2],[720,13,505,11,"getQuotedAttributeValue"],[720,36,505,2],[720,39,505,37],[721,0,506,4],[721,10,506,10,"quotemark"],[721,19,506,19],[721,22,506,22,"source"],[721,28,506,28],[721,29,506,29,"i"],[721,30,506,30],[721,32,506,28],[721,33,506,4],[722,0,508,4],[722,10,508,8,"value"],[722,15,508,13],[722,18,508,16],[722,20,508,4],[723,0,509,4],[723,10,509,8,"escaped"],[723,17,509,15],[723,20,509,18],[723,25,509,4],[725,0,511,4],[725,13,511,11,"i"],[725,14,511,12],[725,17,511,15,"length"],[725,23,511,4],[725,25,511,23],[726,0,512,6],[726,12,512,12,"char"],[726,16,512,16],[726,19,512,19,"source"],[726,25,512,25],[726,26,512,26,"i"],[726,27,512,27],[726,29,512,25],[726,30,512,6],[728,0,513,6],[728,12,513,10,"char"],[728,16,513,14],[728,21,513,19,"quotemark"],[728,30,513,10],[728,34,513,32],[728,35,513,33,"escaped"],[728,42,513,6],[728,44,513,42],[729,0,514,8],[729,17,514,15,"value"],[729,22,514,8],[730,0,515,7],[732,0,517,6],[732,12,517,10,"char"],[732,16,517,14],[732,21,517,19],[732,25,517,10],[732,29,517,27],[732,30,517,28,"escaped"],[732,37,517,6],[732,39,517,37],[733,0,518,8,"escaped"],[733,10,518,8,"escaped"],[733,17,518,15],[733,20,518,18],[733,24,518,8],[734,0,519,7],[736,0,521,6,"value"],[736,8,521,6,"value"],[736,13,521,11],[736,17,521,15,"escaped"],[736,24,521,22],[736,34,521,30,"char"],[736,38,521,22],[736,41,521,39,"char"],[736,45,521,6],[737,0,522,6,"escaped"],[737,8,522,6,"escaped"],[737,15,522,13],[737,18,522,16],[737,23,522,6],[738,0,523,5],[740,0,525,4],[740,13,525,11,"value"],[740,18,525,4],[741,0,526,3],[743,0,528,2],[743,13,528,11,"allowSpaces"],[743,24,528,2],[743,27,528,25],[744,0,529,4],[744,13,529,11,"i"],[744,14,529,12],[744,17,529,15,"length"],[744,23,529,11],[744,27,529,25,"whitespace"],[744,37,529,35],[744,38,529,36,"test"],[744,42,529,25],[744,43,529,41,"source"],[744,49,529,47],[744,50,529,48,"i"],[744,51,529,47],[744,52,529,25],[744,53,529,4],[744,55,529,53],[745,0,530,6,"i"],[745,8,530,6,"i"],[745,9,530,7],[745,13,530,11],[745,14,530,6],[746,0,531,5],[747,0,532,3],[749,0,534,2],[749,8,534,6,"i"],[749,9,534,7],[749,12,534,10],[749,13,534,2],[751,0,535,2],[751,11,535,9,"i"],[751,12,535,10],[751,15,535,13,"length"],[751,21,535,2],[751,23,535,21],[752,0,536,4],[752,10,536,8],[752,11,536,9,"state"],[752,16,536,4],[752,18,536,16],[753,0,537,6,"error"],[753,8,537,6,"error"],[753,13,537,11],[753,14,537,12],[753,36,537,11],[753,37,537,6],[754,0,538,5],[756,0,539,4,"state"],[756,6,539,4,"state"],[756,11,539,9],[756,14,539,12,"state"],[756,19,539,17],[756,21,539,4],[757,0,540,4,"i"],[757,6,540,4,"i"],[757,7,540,5],[757,11,540,9],[757,12,540,4],[758,0,541,3],[760,0,543,2],[760,8,543,6,"state"],[760,13,543,11],[760,18,543,16,"neutral"],[760,25,543,2],[760,27,543,25],[761,0,544,4,"error"],[761,6,544,4,"error"],[761,11,544,9],[761,12,544,10],[761,37,544,9],[761,38,544,4],[762,0,545,3],[764,0,547,2],[764,8,547,6,"root"],[764,12,547,2],[764,14,547,12],[765,0,548,4],[765,10,548,10,"xml"],[765,13,548,21],[765,16,548,24],[765,17,548,25,"middleware"],[765,27,548,35],[765,30,548,38,"middleware"],[765,40,548,48],[765,41,548,49,"root"],[765,45,548,48],[765,46,548,35],[765,49,548,57,"root"],[765,53,548,24],[765,58,548,66,"root"],[765,62,548,4],[767,0,549,4],[767,10,549,10,"ast"],[767,14,549,39],[767,17,549,42,"xml"],[767,20,549,45],[767,21,549,46,"children"],[767,29,549,42],[767,30,549,55,"map"],[767,33,549,42],[767,34,549,59,"astToReact"],[767,44,549,42],[767,45,549,4],[769,0,550,4],[769,10,550,10,"jsx"],[769,13,550,21],[769,16,550,24,"xml"],[769,19,550,4],[770,0,551,4,"jsx"],[770,6,551,4,"jsx"],[770,9,551,7],[770,10,551,8,"children"],[770,18,551,4],[770,21,551,19,"ast"],[770,25,551,4],[771,0,552,4],[771,13,552,11,"jsx"],[771,16,552,4],[772,0,553,3],[774,0,555,2],[774,11,555,9],[774,15,555,2],[775,0,556,1]],"functionMap":{"names":["<global>","missingTag","SvgAst","SvgXml","useMemo$argument_0","fetchText","SvgUri","useEffect$argument_0","SvgFromXml","SvgFromXml#componentDidMount","SvgFromXml#componentDidUpdate","SvgFromXml#parse","SvgFromXml#render","SvgFromUri","SvgFromUri#componentDidMount","SvgFromUri#componentDidUpdate","SvgFromUri#fetch","SvgFromUri#render","upperCase","camelCase","getStyle","astToReact","repeat","toSpaces","locate","parse","error","metadata","neutral","openingTag","comment","cdata","closingTag","getName","getAttributes","getAttributeValue","getUnquotedAttributeValue","getQuotedAttributeValue","allowSpaces"],"mappings":"AAA;ACyD;CDE;OEqC;CFU;OGI;qCCE,wCD;CHU;OKE;CLG;OME;YCG;GDM;CNE;OQI;ECE;GDE;EEC;GFK;EGC;GHM;EIC;GJM;CRC;OaE;ECE;GDE;EEC;GFK;EGC;GHM;EIC;GJM;CbC;kBkBE,wDlB;yBmBE;2CnBC;OoBI;CpBc;OqBE;CrBa;AsBI;CtBM;iBuBE,2CvB;AwBE;CxBsB;OyBQ;ECQ;GDK;EEE;GFS;EGE;GHiB;EIE;GJmE;EKE;GLQ;EME;GNU;EOE;GPwB;EQE;GRS;ESE;GT8B;EUE;GVI;EWE;GXa;EYE;GZqB;EaE;GbI;CzBwB"}},"type":"js/module"}]}