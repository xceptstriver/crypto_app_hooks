{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":160,"column":0}},{"start":{"line":1,"column":0},"end":{"line":160,"column":0}},{"start":{"line":1,"column":0},"end":{"line":1,"column":40}},{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},{"start":{"line":4,"column":0},"end":{"line":4,"column":50}},{"start":{"line":5,"column":0},"end":{"line":5,"column":46}}]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":160,"column":0}}]}},{"name":"@babel/runtime/helpers/extends","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":160,"column":0}}]}},{"name":"./extractFill","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":1,"column":40}}]}},{"name":"./extractStroke","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0},"end":{"line":2,"column":44}}]}},{"name":"./extractResponder","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":0},"end":{"line":4,"column":50}}]}},{"name":"./extractOpacity","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":0},"end":{"line":5,"column":46}}]}},{"name":"../util","data":{"asyncType":null,"locs":[{"start":{"line":36,"column":31},"end":{"line":36,"column":40},"identifierName":"idPattern"},{"start":{"line":121,"column":35},"end":{"line":121,"column":44},"identifierName":"idPattern"},{"start":{"line":134,"column":31},"end":{"line":134,"column":40},"identifierName":"idPattern"}]}},{"name":"./extractTransform","data":{"asyncType":null,"locs":[{"start":{"line":85,"column":25},"end":{"line":85,"column":40},"identifierName":"props2transform"},{"start":{"line":86,"column":17},"end":{"line":86,"column":34},"identifierName":"transformToMatrix"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.propsAndStyles = propsAndStyles;\n  exports.default = extractProps;\n  exports.extract = extract;\n  exports.withoutXY = withoutXY;\n\n  var _toConsumableArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _extends2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _extractFill = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"./extractFill\"));\n\n  var _extractStroke = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[4], \"./extractStroke\"));\n\n  var _extractResponder = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[5], \"./extractResponder\"));\n\n  var _extractOpacity = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[6], \"./extractOpacity\"));\n\n  var clipRules = {\n    evenodd: 0,\n    nonzero: 1\n  };\n\n  function propsAndStyles(props) {\n    var style = props.style;\n    return !style ? props : (0, _extends2.default)({}, Array.isArray(style) ? Object.assign.apply(Object, [{}].concat((0, _toConsumableArray2.default)(style))) : style, props);\n  }\n\n  function getMarker(marker) {\n    if (!marker) {\n      return undefined;\n    }\n\n    var matched = marker.match(_$$_REQUIRE(_dependencyMap[7], \"../util\").idPattern);\n    return matched ? matched[1] : undefined;\n  }\n\n  function extractProps(props, ref) {\n    var id = props.id,\n        opacity = props.opacity,\n        onLayout = props.onLayout,\n        clipPath = props.clipPath,\n        clipRule = props.clipRule,\n        display = props.display,\n        mask = props.mask,\n        marker = props.marker,\n        _props$markerStart = props.markerStart,\n        markerStart = _props$markerStart === void 0 ? marker : _props$markerStart,\n        _props$markerMid = props.markerMid,\n        markerMid = _props$markerMid === void 0 ? marker : _props$markerMid,\n        _props$markerEnd = props.markerEnd,\n        markerEnd = _props$markerEnd === void 0 ? marker : _props$markerEnd,\n        transform = props.transform;\n    var extracted = {};\n    var inherited = [];\n    (0, _extractResponder.default)(extracted, props, ref);\n    (0, _extractFill.default)(extracted, props, inherited);\n    (0, _extractStroke.default)(extracted, props, inherited);\n\n    if (inherited.length) {\n      extracted.propList = inherited;\n    }\n\n    var transformProps = (0, _$$_REQUIRE(_dependencyMap[8], \"./extractTransform\").props2transform)(props);\n    var matrix = (0, _$$_REQUIRE(_dependencyMap[8], \"./extractTransform\").transformToMatrix)(transformProps, transform);\n\n    if (matrix !== null) {\n      extracted.matrix = matrix;\n    }\n\n    if (opacity != null) {\n      extracted.opacity = (0, _extractOpacity.default)(opacity);\n    }\n\n    if (display != null) {\n      extracted.display = display === 'none' ? 'none' : undefined;\n    }\n\n    if (onLayout) {\n      extracted.onLayout = onLayout;\n    }\n\n    if (markerStart) {\n      extracted.markerStart = getMarker(markerStart);\n    }\n\n    if (markerMid) {\n      extracted.markerMid = getMarker(markerMid);\n    }\n\n    if (markerEnd) {\n      extracted.markerEnd = getMarker(markerEnd);\n    }\n\n    if (id) {\n      extracted.name = String(id);\n    }\n\n    if (clipRule) {\n      extracted.clipRule = clipRules[clipRule] === 0 ? 0 : 1;\n    }\n\n    if (clipPath) {\n      var matched = clipPath.match(_$$_REQUIRE(_dependencyMap[7], \"../util\").idPattern);\n\n      if (matched) {\n        extracted.clipPath = matched[1];\n      } else {\n        console.warn('Invalid `clipPath` prop, expected a clipPath like \"#id\", but got: \"' + clipPath + '\"');\n      }\n    }\n\n    if (mask) {\n      var _matched = mask.match(_$$_REQUIRE(_dependencyMap[7], \"../util\").idPattern);\n\n      if (_matched) {\n        extracted.mask = _matched[1];\n      } else {\n        console.warn('Invalid `mask` prop, expected a mask like \"#id\", but got: \"' + mask + '\"');\n      }\n    }\n\n    return extracted;\n  }\n\n  function extract(instance, props) {\n    return extractProps(propsAndStyles(props), instance);\n  }\n\n  function withoutXY(instance, props) {\n    return extractProps((0, _extends2.default)({}, propsAndStyles(props), {\n      x: null,\n      y: null\n    }), instance);\n  }\n});","lineCount":139,"map":[[14,0,1,0],[16,0,2,0],[18,0,4,0],[20,0,5,0],[22,0,17,0],[22,6,17,6,"clipRules"],[22,15,17,53],[22,18,17,56],[23,0,18,2,"evenodd"],[23,4,18,2,"evenodd"],[23,11,18,9],[23,13,18,11],[23,14,17,56],[24,0,19,2,"nonzero"],[24,4,19,2,"nonzero"],[24,11,19,9],[24,13,19,11],[25,0,17,56],[25,3,17,0],[27,0,22,7],[27,11,22,16,"propsAndStyles"],[27,25,22,7],[27,26,22,31,"props"],[27,31,22,7],[27,33,22,68],[28,0,23,2],[28,8,23,10,"style"],[28,13,23,2],[28,16,23,20,"props"],[28,21,23,2],[28,22,23,10,"style"],[28,27,23,2],[29,0,24,2],[29,11,24,9],[29,12,24,10,"style"],[29,17,24,9],[29,20,25,6,"props"],[29,25,24,9],[29,55,27,12,"Array"],[29,60,27,17],[29,61,27,18,"isArray"],[29,68,27,12],[29,69,27,26,"style"],[29,74,27,12],[29,78,27,35,"Object"],[29,84,27,41],[29,85,27,42,"assign"],[29,91,27,35],[29,98,27,35,"Object"],[29,104,27,41],[29,107,27,49],[29,109,27,41],[29,151,27,56,"style"],[29,156,27,41],[29,159,27,12],[29,162,27,65,"style"],[29,167,24,9],[29,169,28,11,"props"],[29,174,24,9],[29,175,24,2],[30,0,30,1],[32,0,32,0],[32,11,32,9,"getMarker"],[32,20,32,0],[32,21,32,19,"marker"],[32,27,32,0],[32,29,32,36],[33,0,33,2],[33,8,33,6],[33,9,33,7,"marker"],[33,15,33,2],[33,17,33,15],[34,0,34,4],[34,13,34,11,"undefined"],[34,22,34,4],[35,0,35,3],[37,0,36,2],[37,8,36,8,"matched"],[37,15,36,15],[37,18,36,18,"marker"],[37,24,36,24],[37,25,36,25,"match"],[37,30,36,18],[37,31,36,31,"idPattern"],[37,82,36,18],[37,83,36,2],[38,0,37,2],[38,11,37,9,"matched"],[38,18,37,16],[38,21,37,19,"matched"],[38,28,37,26],[38,29,37,27],[38,30,37,26],[38,31,37,16],[38,34,37,32,"undefined"],[38,43,37,2],[39,0,38,1],[41,0,40,15],[41,11,40,24,"extractProps"],[41,23,40,15],[41,24,41,2,"props"],[41,29,40,15],[41,31,58,2,"ref"],[41,34,40,15],[41,36,59,2],[42,0,60,2],[42,8,61,4,"id"],[42,10,60,2],[42,13,73,6,"props"],[42,18,60,2],[42,19,61,4,"id"],[42,21,60,2],[43,0,60,2],[43,8,62,4,"opacity"],[43,15,60,2],[43,18,73,6,"props"],[43,23,60,2],[43,24,62,4,"opacity"],[43,31,60,2],[44,0,60,2],[44,8,63,4,"onLayout"],[44,16,60,2],[44,19,73,6,"props"],[44,24,60,2],[44,25,63,4,"onLayout"],[44,33,60,2],[45,0,60,2],[45,8,64,4,"clipPath"],[45,16,60,2],[45,19,73,6,"props"],[45,24,60,2],[45,25,64,4,"clipPath"],[45,33,60,2],[46,0,60,2],[46,8,65,4,"clipRule"],[46,16,60,2],[46,19,73,6,"props"],[46,24,60,2],[46,25,65,4,"clipRule"],[46,33,60,2],[47,0,60,2],[47,8,66,4,"display"],[47,15,60,2],[47,18,73,6,"props"],[47,23,60,2],[47,24,66,4,"display"],[47,31,60,2],[48,0,60,2],[48,8,67,4,"mask"],[48,12,60,2],[48,15,73,6,"props"],[48,20,60,2],[48,21,67,4,"mask"],[48,25,60,2],[49,0,60,2],[49,8,68,4,"marker"],[49,14,60,2],[49,17,73,6,"props"],[49,22,60,2],[49,23,68,4,"marker"],[49,29,60,2],[50,0,60,2],[50,29,73,6,"props"],[50,34,60,2],[50,35,69,4,"markerStart"],[50,46,60,2],[51,0,60,2],[51,8,69,4,"markerStart"],[51,19,60,2],[51,54,69,18,"marker"],[51,60,60,2],[52,0,60,2],[52,27,73,6,"props"],[52,32,60,2],[52,33,70,4,"markerMid"],[52,42,60,2],[53,0,60,2],[53,8,70,4,"markerMid"],[53,17,60,2],[53,50,70,16,"marker"],[53,56,60,2],[54,0,60,2],[54,27,73,6,"props"],[54,32,60,2],[54,33,71,4,"markerEnd"],[54,42,60,2],[55,0,60,2],[55,8,71,4,"markerEnd"],[55,17,60,2],[55,50,71,16,"marker"],[55,56,60,2],[56,0,60,2],[56,8,72,4,"transform"],[56,17,60,2],[56,20,73,6,"props"],[56,25,60,2],[56,26,72,4,"transform"],[56,35,60,2],[57,0,74,2],[57,8,74,8,"extracted"],[57,17,74,33],[57,20,74,36],[57,22,74,2],[58,0,76,2],[58,8,76,8,"inherited"],[58,17,76,27],[58,20,76,30],[58,22,76,2],[59,0,77,2],[59,35,77,19,"extracted"],[59,44,77,2],[59,46,77,30,"props"],[59,51,77,2],[59,53,77,37,"ref"],[59,56,77,2],[60,0,78,2],[60,30,78,14,"extracted"],[60,39,78,2],[60,41,78,25,"props"],[60,46,78,2],[60,48,78,32,"inherited"],[60,57,78,2],[61,0,79,2],[61,32,79,16,"extracted"],[61,41,79,2],[61,43,79,27,"props"],[61,48,79,2],[61,50,79,34,"inherited"],[61,59,79,2],[63,0,81,2],[63,8,81,6,"inherited"],[63,17,81,15],[63,18,81,16,"length"],[63,24,81,2],[63,26,81,24],[64,0,82,4,"extracted"],[64,6,82,4,"extracted"],[64,15,82,13],[64,16,82,14,"propList"],[64,24,82,4],[64,27,82,25,"inherited"],[64,36,82,4],[65,0,83,3],[67,0,85,2],[67,8,85,8,"transformProps"],[67,22,85,22],[67,25,85,25],[67,99,85,41,"props"],[67,104,85,25],[67,105,85,2],[68,0,86,2],[68,8,86,8,"matrix"],[68,14,86,14],[68,17,86,17],[68,93,86,35,"transformProps"],[68,107,86,17],[68,109,86,51,"transform"],[68,118,86,17],[68,119,86,2],[70,0,87,2],[70,8,87,6,"matrix"],[70,14,87,12],[70,19,87,17],[70,23,87,2],[70,25,87,23],[71,0,88,4,"extracted"],[71,6,88,4,"extracted"],[71,15,88,13],[71,16,88,14,"matrix"],[71,22,88,4],[71,25,88,23,"matrix"],[71,31,88,4],[72,0,89,3],[74,0,91,2],[74,8,91,6,"opacity"],[74,15,91,13],[74,19,91,17],[74,23,91,2],[74,25,91,23],[75,0,92,4,"extracted"],[75,6,92,4,"extracted"],[75,15,92,13],[75,16,92,14,"opacity"],[75,23,92,4],[75,26,92,24],[75,55,92,39,"opacity"],[75,62,92,24],[75,63,92,4],[76,0,93,3],[78,0,95,2],[78,8,95,6,"display"],[78,15,95,13],[78,19,95,17],[78,23,95,2],[78,25,95,23],[79,0,96,4,"extracted"],[79,6,96,4,"extracted"],[79,15,96,13],[79,16,96,14,"display"],[79,23,96,4],[79,26,96,24,"display"],[79,33,96,31],[79,38,96,36],[79,44,96,24],[79,47,96,45],[79,53,96,24],[79,56,96,54,"undefined"],[79,65,96,4],[80,0,97,3],[82,0,99,2],[82,8,99,6,"onLayout"],[82,16,99,2],[82,18,99,16],[83,0,100,4,"extracted"],[83,6,100,4,"extracted"],[83,15,100,13],[83,16,100,14,"onLayout"],[83,24,100,4],[83,27,100,25,"onLayout"],[83,35,100,4],[84,0,101,3],[86,0,103,2],[86,8,103,6,"markerStart"],[86,19,103,2],[86,21,103,19],[87,0,104,4,"extracted"],[87,6,104,4,"extracted"],[87,15,104,13],[87,16,104,14,"markerStart"],[87,27,104,4],[87,30,104,28,"getMarker"],[87,39,104,37],[87,40,104,38,"markerStart"],[87,51,104,37],[87,52,104,4],[88,0,105,3],[90,0,106,2],[90,8,106,6,"markerMid"],[90,17,106,2],[90,19,106,17],[91,0,107,4,"extracted"],[91,6,107,4,"extracted"],[91,15,107,13],[91,16,107,14,"markerMid"],[91,25,107,4],[91,28,107,26,"getMarker"],[91,37,107,35],[91,38,107,36,"markerMid"],[91,47,107,35],[91,48,107,4],[92,0,108,3],[94,0,109,2],[94,8,109,6,"markerEnd"],[94,17,109,2],[94,19,109,17],[95,0,110,4,"extracted"],[95,6,110,4,"extracted"],[95,15,110,13],[95,16,110,14,"markerEnd"],[95,25,110,4],[95,28,110,26,"getMarker"],[95,37,110,35],[95,38,110,36,"markerEnd"],[95,47,110,35],[95,48,110,4],[96,0,111,3],[98,0,113,2],[98,8,113,6,"id"],[98,10,113,2],[98,12,113,10],[99,0,114,4,"extracted"],[99,6,114,4,"extracted"],[99,15,114,13],[99,16,114,14,"name"],[99,20,114,4],[99,23,114,21,"String"],[99,29,114,27],[99,30,114,28,"id"],[99,32,114,27],[99,33,114,4],[100,0,115,3],[102,0,117,2],[102,8,117,6,"clipRule"],[102,16,117,2],[102,18,117,16],[103,0,118,4,"extracted"],[103,6,118,4,"extracted"],[103,15,118,13],[103,16,118,14,"clipRule"],[103,24,118,4],[103,27,118,25,"clipRules"],[103,36,118,34],[103,37,118,35,"clipRule"],[103,45,118,34],[103,46,118,25],[103,51,118,49],[103,52,118,25],[103,55,118,53],[103,56,118,25],[103,59,118,57],[103,60,118,4],[104,0,119,3],[106,0,120,2],[106,8,120,6,"clipPath"],[106,16,120,2],[106,18,120,16],[107,0,121,4],[107,10,121,10,"matched"],[107,17,121,17],[107,20,121,20,"clipPath"],[107,28,121,28],[107,29,121,29,"match"],[107,34,121,20],[107,35,121,35,"idPattern"],[107,86,121,20],[107,87,121,4],[109,0,122,4],[109,10,122,8,"matched"],[109,17,122,4],[109,19,122,17],[110,0,123,6,"extracted"],[110,8,123,6,"extracted"],[110,17,123,15],[110,18,123,16,"clipPath"],[110,26,123,6],[110,29,123,27,"matched"],[110,36,123,34],[110,37,123,35],[110,38,123,34],[110,39,123,6],[111,0,124,5],[111,7,122,4],[111,13,124,11],[112,0,125,6,"console"],[112,8,125,6,"console"],[112,15,125,13],[112,16,125,14,"warn"],[112,20,125,6],[112,21,126,8],[112,93,127,10,"clipPath"],[112,101,126,8],[112,104,128,10],[112,107,125,6],[113,0,130,5],[114,0,131,3],[116,0,133,2],[116,8,133,6,"mask"],[116,12,133,2],[116,14,133,12],[117,0,134,4],[117,10,134,10,"matched"],[117,18,134,17],[117,21,134,20,"mask"],[117,25,134,24],[117,26,134,25,"match"],[117,31,134,20],[117,32,134,31,"idPattern"],[117,83,134,20],[117,84,134,4],[119,0,136,4],[119,10,136,8,"matched"],[119,18,136,4],[119,20,136,17],[120,0,137,6,"extracted"],[120,8,137,6,"extracted"],[120,17,137,15],[120,18,137,16,"mask"],[120,22,137,6],[120,25,137,23,"matched"],[120,33,137,30],[120,34,137,31],[120,35,137,30],[120,36,137,6],[121,0,138,5],[121,7,136,4],[121,13,138,11],[122,0,139,6,"console"],[122,8,139,6,"console"],[122,15,139,13],[122,16,139,14,"warn"],[122,20,139,6],[122,21,140,8],[122,85,141,10,"mask"],[122,89,140,8],[122,92,142,10],[122,95,139,6],[123,0,144,5],[124,0,145,3],[126,0,147,2],[126,11,147,9,"extracted"],[126,20,147,2],[127,0,148,1],[129,0,150,7],[129,11,150,16,"extract"],[129,18,150,7],[129,19,150,24,"instance"],[129,27,150,7],[129,29,150,42,"props"],[129,34,150,7],[129,36,150,79],[130,0,151,2],[130,11,151,9,"extractProps"],[130,23,151,21],[130,24,151,22,"propsAndStyles"],[130,38,151,36],[130,39,151,37,"props"],[130,44,151,36],[130,45,151,21],[130,47,151,45,"instance"],[130,55,151,21],[130,56,151,2],[131,0,152,1],[133,0,154,7],[133,11,154,16,"withoutXY"],[133,20,154,7],[133,21,155,2,"instance"],[133,29,154,7],[133,31,156,2,"props"],[133,36,154,7],[133,38,157,2],[134,0,158,2],[134,11,158,9,"extractProps"],[134,23,158,21],[134,51,158,27,"propsAndStyles"],[134,65,158,41],[134,66,158,42,"props"],[134,71,158,41],[134,72,158,21],[135,0,158,50,"x"],[135,6,158,50,"x"],[135,7,158,51],[135,9,158,53],[135,13,158,21],[136,0,158,59,"y"],[136,6,158,59,"y"],[136,7,158,60],[136,9,158,62],[137,0,158,21],[137,8,158,70,"instance"],[137,16,158,21],[137,17,158,2],[138,0,159,1]],"functionMap":{"names":["<global>","propsAndStyles","getMarker","extractProps","extract","withoutXY"],"mappings":"AAA;OCqB;CDQ;AEE;CFM;eGE;CH4G;OIE;CJE;OKE;CLK"}},"type":"js/module"}]}