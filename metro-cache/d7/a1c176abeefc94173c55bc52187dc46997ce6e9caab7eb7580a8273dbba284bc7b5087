{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":12},"end":{"line":3,"column":22}},{"start":{"line":4,"column":15},"end":{"line":4,"column":28}},{"start":{"line":5,"column":12},"end":{"line":5,"column":22}},{"start":{"line":6,"column":23},"end":{"line":6,"column":44}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var IDENT = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Ident;\n\n  var FUNCTION = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Function;\n\n  var COLON = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Colon;\n\n  var RIGHTPARENTHESIS = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.RightParenthesis;\n\n  module.exports = {\n    name: 'PseudoElementSelector',\n    structure: {\n      name: String,\n      children: [['Raw'], null]\n    },\n    parse: function parse() {\n      var start = this.scanner.tokenStart;\n      var children = null;\n      var name;\n      var nameLowerCase;\n      this.eat(COLON);\n      this.eat(COLON);\n\n      if (this.scanner.tokenType === FUNCTION) {\n        name = this.consumeFunctionName();\n        nameLowerCase = name.toLowerCase();\n\n        if (this.pseudo.hasOwnProperty(nameLowerCase)) {\n          this.scanner.skipSC();\n          children = this.pseudo[nameLowerCase].call(this);\n          this.scanner.skipSC();\n        } else {\n          children = this.createList();\n          children.push(this.Raw(this.scanner.tokenIndex, null, false));\n        }\n\n        this.eat(RIGHTPARENTHESIS);\n      } else {\n        name = this.consume(IDENT);\n      }\n\n      return {\n        type: 'PseudoElementSelector',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        name: name,\n        children: children\n      };\n    },\n    generate: function generate(node) {\n      this.chunk('::');\n      this.chunk(node.name);\n\n      if (node.children !== null) {\n        this.chunk('(');\n        this.children(node);\n        this.chunk(')');\n      }\n    },\n    walkContext: 'function'\n  };\n});","lineCount":61,"map":[[2,0,3,0],[2,6,3,4,"IDENT"],[2,11,3,9],[2,14,3,12],[2,69,3,17,"Ident"],[2,74,3,0],[4,0,4,0],[4,6,4,4,"FUNCTION"],[4,14,4,12],[4,17,4,15],[4,72,4,20,"Function"],[4,80,4,0],[6,0,5,0],[6,6,5,4,"COLON"],[6,11,5,9],[6,14,5,12],[6,69,5,17,"Colon"],[6,74,5,0],[8,0,6,0],[8,6,6,4,"RIGHTPARENTHESIS"],[8,22,6,20],[8,25,6,23],[8,80,6,28,"RightParenthesis"],[8,96,6,0],[10,0,9,0,"module"],[10,2,9,0,"module"],[10,8,9,6],[10,9,9,7,"exports"],[10,16,9,0],[10,19,9,17],[11,0,10,4,"name"],[11,4,10,4,"name"],[11,8,10,8],[11,10,10,10],[11,33,9,17],[12,0,11,4,"structure"],[12,4,11,4,"structure"],[12,13,11,13],[12,15,11,15],[13,0,12,8,"name"],[13,6,12,8,"name"],[13,10,12,12],[13,12,12,14,"String"],[13,18,11,15],[14,0,13,8,"children"],[14,6,13,8,"children"],[14,14,13,16],[14,16,13,18],[14,17,13,19],[14,18,13,20],[14,23,13,19],[14,24,13,18],[14,26,13,28],[14,30,13,18],[15,0,11,15],[15,5,9,17],[16,0,15,4,"parse"],[16,4,15,4,"parse"],[16,9,15,9],[16,11,15,11],[16,28,15,22],[17,0,16,8],[17,10,16,12,"start"],[17,15,16,17],[17,18,16,20],[17,23,16,25,"scanner"],[17,30,16,20],[17,31,16,33,"tokenStart"],[17,41,16,8],[18,0,17,8],[18,10,17,12,"children"],[18,18,17,20],[18,21,17,23],[18,25,17,8],[19,0,18,8],[19,10,18,12,"name"],[19,14,18,8],[20,0,19,8],[20,10,19,12,"nameLowerCase"],[20,23,19,8],[21,0,21,8],[21,11,21,13,"eat"],[21,14,21,8],[21,15,21,17,"COLON"],[21,20,21,8],[22,0,22,8],[22,11,22,13,"eat"],[22,14,22,8],[22,15,22,17,"COLON"],[22,20,22,8],[24,0,24,8],[24,10,24,12],[24,15,24,17,"scanner"],[24,22,24,12],[24,23,24,25,"tokenType"],[24,32,24,12],[24,37,24,39,"FUNCTION"],[24,45,24,8],[24,47,24,49],[25,0,25,12,"name"],[25,8,25,12,"name"],[25,12,25,16],[25,15,25,19],[25,20,25,24,"consumeFunctionName"],[25,39,25,19],[25,41,25,12],[26,0,26,12,"nameLowerCase"],[26,8,26,12,"nameLowerCase"],[26,21,26,25],[26,24,26,28,"name"],[26,28,26,32],[26,29,26,33,"toLowerCase"],[26,40,26,28],[26,42,26,12],[28,0,28,12],[28,12,28,16],[28,17,28,21,"pseudo"],[28,23,28,16],[28,24,28,28,"hasOwnProperty"],[28,38,28,16],[28,39,28,43,"nameLowerCase"],[28,52,28,16],[28,53,28,12],[28,55,28,59],[29,0,29,16],[29,15,29,21,"scanner"],[29,22,29,16],[29,23,29,29,"skipSC"],[29,29,29,16],[30,0,30,16,"children"],[30,10,30,16,"children"],[30,18,30,24],[30,21,30,27],[30,26,30,32,"pseudo"],[30,32,30,27],[30,33,30,39,"nameLowerCase"],[30,46,30,27],[30,48,30,54,"call"],[30,52,30,27],[30,53,30,59],[30,57,30,27],[30,58,30,16],[31,0,31,16],[31,15,31,21,"scanner"],[31,22,31,16],[31,23,31,29,"skipSC"],[31,29,31,16],[32,0,32,13],[32,9,28,12],[32,15,32,19],[33,0,33,16,"children"],[33,10,33,16,"children"],[33,18,33,24],[33,21,33,27],[33,26,33,32,"createList"],[33,36,33,27],[33,38,33,16],[34,0,34,16,"children"],[34,10,34,16,"children"],[34,18,34,24],[34,19,34,25,"push"],[34,23,34,16],[34,24,35,20],[34,29,35,25,"Raw"],[34,32,35,20],[34,33,35,29],[34,38,35,34,"scanner"],[34,45,35,29],[34,46,35,42,"tokenIndex"],[34,56,35,20],[34,58,35,54],[34,62,35,20],[34,64,35,60],[34,69,35,20],[34,70,34,16],[35,0,37,13],[37,0,39,12],[37,13,39,17,"eat"],[37,16,39,12],[37,17,39,21,"RIGHTPARENTHESIS"],[37,33,39,12],[38,0,40,9],[38,7,24,8],[38,13,40,15],[39,0,41,12,"name"],[39,8,41,12,"name"],[39,12,41,16],[39,15,41,19],[39,20,41,24,"consume"],[39,27,41,19],[39,28,41,32,"IDENT"],[39,33,41,19],[39,34,41,12],[40,0,42,9],[42,0,44,8],[42,13,44,15],[43,0,45,12,"type"],[43,8,45,12,"type"],[43,12,45,16],[43,14,45,18],[43,37,44,15],[44,0,46,12,"loc"],[44,8,46,12,"loc"],[44,11,46,15],[44,13,46,17],[44,18,46,22,"getLocation"],[44,29,46,17],[44,30,46,34,"start"],[44,35,46,17],[44,37,46,41],[44,42,46,46,"scanner"],[44,49,46,41],[44,50,46,54,"tokenStart"],[44,60,46,17],[44,61,44,15],[45,0,47,12,"name"],[45,8,47,12,"name"],[45,12,47,16],[45,14,47,18,"name"],[45,18,44,15],[46,0,48,12,"children"],[46,8,48,12,"children"],[46,16,48,20],[46,18,48,22,"children"],[47,0,44,15],[47,7,44,8],[48,0,50,5],[48,5,9,17],[49,0,51,4,"generate"],[49,4,51,4,"generate"],[49,12,51,12],[49,14,51,14],[49,32,51,23,"node"],[49,36,51,14],[49,38,51,29],[50,0,52,8],[50,11,52,13,"chunk"],[50,16,52,8],[50,17,52,19],[50,21,52,8],[51,0,53,8],[51,11,53,13,"chunk"],[51,16,53,8],[51,17,53,19,"node"],[51,21,53,23],[51,22,53,24,"name"],[51,26,53,8],[53,0,55,8],[53,10,55,12,"node"],[53,14,55,16],[53,15,55,17,"children"],[53,23,55,12],[53,28,55,30],[53,32,55,8],[53,34,55,36],[54,0,56,12],[54,13,56,17,"chunk"],[54,18,56,12],[54,19,56,23],[54,22,56,12],[55,0,57,12],[55,13,57,17,"children"],[55,21,57,12],[55,22,57,26,"node"],[55,26,57,12],[56,0,58,12],[56,13,58,17,"chunk"],[56,18,58,12],[56,19,58,23],[56,22,58,12],[57,0,59,9],[58,0,60,5],[58,5,9,17],[59,0,61,4,"walkContext"],[59,4,61,4,"walkContext"],[59,15,61,15],[59,17,61,17],[60,0,9,17],[60,3,9,0]],"functionMap":{"names":["<global>","module.exports.parse","module.exports.generate"],"mappings":"AAA;WCc;KDmC;cEC;KFS"}},"type":"js/module"}]}