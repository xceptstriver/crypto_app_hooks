{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":66,"column":0}},{"start":{"line":1,"column":0},"end":{"line":66,"column":0}},{"start":{"line":10,"column":0},"end":{"line":10,"column":28}}]}},{"name":"@babel/runtime/regenerator","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":66,"column":0}},{"start":{"line":1,"column":0},"end":{"line":66,"column":0}}]}},{"name":"@babel/runtime/helpers/extends","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":66,"column":0}}]}},{"name":"moment","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":0},"end":{"line":10,"column":28}}]}},{"name":"redux-saga/effects","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":32},"end":{"line":14,"column":36},"identifierName":"call"},{"start":{"line":54,"column":12},"end":{"line":54,"column":15},"identifierName":"put"},{"start":{"line":56,"column":12},"end":{"line":56,"column":15},"identifierName":"put"},{"start":{"line":59,"column":10},"end":{"line":59,"column":13},"identifierName":"put"},{"start":{"line":63,"column":15},"end":{"line":63,"column":19},"identifierName":"fork"},{"start":{"line":64,"column":8},"end":{"line":64,"column":17},"identifierName":"takeEvery"}]}},{"name":"../services/market","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":37},"end":{"line":14,"column":46},"identifierName":"getMarket"}]}},{"name":"../constants/index","data":{"asyncType":null,"locs":[{"start":{"line":46,"column":29},"end":{"line":46,"column":40},"identifierName":"SAMPLE_DATA"}]}},{"name":"../redux/actions/market","data":{"asyncType":null,"locs":[{"start":{"line":54,"column":16},"end":{"line":54,"column":33},"identifierName":"failedFetchMarket"},{"start":{"line":56,"column":16},"end":{"line":56,"column":29},"identifierName":"fetchedMarket"},{"start":{"line":59,"column":14},"end":{"line":59,"column":31},"identifierName":"failedFetchMarket"}]}},{"name":"../redux/constants/market","data":{"asyncType":null,"locs":[{"start":{"line":64,"column":18},"end":{"line":64,"column":32},"identifierName":"MARKET_ACTIONS"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _regenerator = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _extends2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _moment = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"moment\"));\n\n  var _marked = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\").mark(fetchMarkets);\n\n  function fetchMarkets(_ref) {\n    var params, _yield$call, data, error, formatSparkline, formatMarketData, formattedResponse;\n\n    return _regenerator.default.wrap(function fetchMarkets$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            params = _ref.payload.params;\n            _context.prev = 1;\n            _context.next = 4;\n            return (0, _$$_REQUIRE(_dependencyMap[4], \"redux-saga/effects\").call)(_$$_REQUIRE(_dependencyMap[5], \"../services/market\").getMarket, params);\n\n          case 4:\n            _yield$call = _context.sent;\n            data = _yield$call.data;\n            error = _yield$call.error;\n\n            formatSparkline = function formatSparkline(numbers) {\n              var sevenDaysAgo = (0, _moment.default)().subtract(7, 'days').unix();\n              var formattedSparkline = numbers.map(function (item, index) {\n                return {\n                  x: sevenDaysAgo + (index + 1) * 3600,\n                  y: item\n                };\n              });\n              return formattedSparkline;\n            };\n\n            formatMarketData = function formatMarketData(data) {\n              var formattedData = [];\n              data.forEach(function (item) {\n                var formattedSparkline = formatSparkline(item.sparkline_in_7d.price);\n                var formattedItem = (0, _extends2.default)({}, item, {\n                  sparkline_in_7d: {\n                    price: formattedSparkline\n                  }\n                });\n                formattedData.push(formattedItem);\n              });\n              return formattedData;\n            };\n\n            console.log('priceData', _$$_REQUIRE(_dependencyMap[6], \"../constants/index\").SAMPLE_DATA[0].sparkline_in_7d.price[0]);\n            formattedResponse = formatMarketData(data);\n            console.log('formattedPricedata', formattedResponse[0].sparkline_in_7d.price[0]);\n\n            if (!error) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 15;\n            return (0, _$$_REQUIRE(_dependencyMap[4], \"redux-saga/effects\").put)((0, _$$_REQUIRE(_dependencyMap[7], \"../redux/actions/market\").failedFetchMarket)(params, error));\n\n          case 15:\n            _context.next = 19;\n            break;\n\n          case 17:\n            _context.next = 19;\n            return (0, _$$_REQUIRE(_dependencyMap[4], \"redux-saga/effects\").put)((0, _$$_REQUIRE(_dependencyMap[7], \"../redux/actions/market\").fetchedMarket)(params, formattedResponse));\n\n          case 19:\n            _context.next = 25;\n            break;\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](1);\n            _context.next = 25;\n            return (0, _$$_REQUIRE(_dependencyMap[4], \"redux-saga/effects\").put)((0, _$$_REQUIRE(_dependencyMap[7], \"../redux/actions/market\").failedFetchMarket)(params, _context.t0));\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _marked, null, [[1, 21]]);\n  }\n\n  var _default = _c2 = (0, _$$_REQUIRE(_dependencyMap[4], \"redux-saga/effects\").fork)(_c = _regenerator.default.mark(function _c() {\n    return _regenerator.default.wrap(function _c$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return (0, _$$_REQUIRE(_dependencyMap[4], \"redux-saga/effects\").takeEvery)(_$$_REQUIRE(_dependencyMap[8], \"../redux/constants/market\").MARKET_ACTIONS.FETCH_MARKET, fetchMarkets);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _c);\n  }));\n\n  exports.default = _default;\n\n  var _c, _c2;\n\n  $RefreshReg$(_c, \"%default%$fork\");\n  $RefreshReg$(_c2, \"%default%\");\n});","lineCount":117,"map":[[11,0,10,0],[13,82,12,10,"fetchMarkets"],[13,94],[15,0,12,0],[15,11,12,10,"fetchMarkets"],[15,23,12,0],[16,0,12,0],[18,0,12,0],[19,0,12,0],[20,0,12,0],[21,0,12,0],[22,0,12,34,"params"],[22,12,12,34,"params"],[22,18,12,0],[22,26,12,24,"payload"],[22,33,12,0],[22,34,12,34,"params"],[22,40,12,0],[23,0,12,0],[24,0,12,0],[25,0,14,26],[25,19,14,32],[25,82,14,37,"getMarket"],[25,144,14,32],[25,146,14,48,"params"],[25,152,14,32],[25,153,14,26],[27,0,12,0],[28,0,12,0],[29,0,14,11,"data"],[29,12,14,11,"data"],[29,16,12,0],[29,31,14,11,"data"],[29,35,12,0],[30,0,14,17,"error"],[30,12,14,17,"error"],[30,17,12,0],[30,32,14,17,"error"],[30,37,12,0],[32,0,15,10,"formatSparkline"],[32,12,15,10,"formatSparkline"],[32,27,12,0],[32,30,15,28],[32,39,15,10,"formatSparkline"],[32,54,15,28],[32,55,15,28,"numbers"],[32,62,15,35],[32,64,15,39],[33,0,16,6],[33,18,16,12,"sevenDaysAgo"],[33,30,16,24],[33,33,16,27],[33,56,16,36,"subtract"],[33,64,16,27],[33,65,16,45],[33,66,16,27],[33,68,16,48],[33,74,16,27],[33,76,16,56,"unix"],[33,80,16,27],[33,82,16,6],[34,0,17,6],[34,18,17,10,"formattedSparkline"],[34,36,17,28],[34,39,17,31,"numbers"],[34,46,17,38],[34,47,17,39,"map"],[34,50,17,31],[34,51,17,43],[34,61,17,44,"item"],[34,65,17,43],[34,67,17,50,"index"],[34,72,17,43],[34,74,17,60],[35,0,18,8],[35,23,18,15],[36,0,19,10,"x"],[36,18,19,10,"x"],[36,19,19,11],[36,21,19,13,"sevenDaysAgo"],[36,33,19,25],[36,36,19,28],[36,37,19,29,"index"],[36,42,19,34],[36,45,19,37],[36,46,19,28],[36,50,19,42],[36,54,18,15],[37,0,20,10,"y"],[37,18,20,10,"y"],[37,19,20,11],[37,21,20,13,"item"],[38,0,18,15],[38,17,18,8],[39,0,22,7],[39,15,17,31],[39,16,17,6],[40,0,24,6],[40,21,24,13,"formattedSparkline"],[40,39,24,6],[41,0,25,5],[41,13,12,0],[43,0,27,10,"formatMarketData"],[43,12,27,10,"formatMarketData"],[43,28,12,0],[43,31,27,29],[43,40,27,10,"formatMarketData"],[43,56,27,29],[43,57,27,29,"data"],[43,61,27,33],[43,63,27,37],[44,0,28,6],[44,18,28,10,"formattedData"],[44,31,28,23],[44,34,28,26],[44,36,28,6],[45,0,30,6,"data"],[45,14,30,6,"data"],[45,18,30,10],[45,19,30,11,"forEach"],[45,26,30,6],[45,27,30,19],[45,37,30,19,"item"],[45,41,30,23],[45,43,30,27],[46,0,31,8],[46,20,31,14,"formattedSparkline"],[46,38,31,32],[46,41,31,35,"formatSparkline"],[46,56,31,50],[46,57,31,51,"item"],[46,61,31,55],[46,62,31,56,"sparkline_in_7d"],[46,77,31,51],[46,78,31,72,"price"],[46,83,31,50],[46,84,31,8],[47,0,33,8],[47,20,33,14,"formattedItem"],[47,33,33,27],[47,63,34,13,"item"],[47,67,33,27],[48,0,35,10,"sparkline_in_7d"],[48,18,35,10,"sparkline_in_7d"],[48,33,35,25],[48,35,35,27],[49,0,36,12,"price"],[49,20,36,12,"price"],[49,25,36,17],[49,27,36,19,"formattedSparkline"],[50,0,35,27],[51,0,33,27],[51,18,33,8],[52,0,40,8,"formattedData"],[52,16,40,8,"formattedData"],[52,29,40,21],[52,30,40,22,"push"],[52,34,40,8],[52,35,40,27,"formattedItem"],[52,48,40,8],[53,0,41,7],[53,15,30,6],[54,0,43,6],[54,21,43,13,"formattedData"],[54,34,43,6],[55,0,44,5],[55,13,12,0],[57,0,46,4,"console"],[57,12,46,4,"console"],[57,19,46,11],[57,20,46,12,"log"],[57,23,46,4],[57,24,46,16],[57,35,46,4],[57,37,46,29,"SAMPLE_DATA"],[57,102,46,41],[57,103,46,29],[57,105,46,44,"sparkline_in_7d"],[57,120,46,29],[57,121,46,60,"price"],[57,126,46,29],[57,127,46,66],[57,128,46,29],[57,129,46,4],[58,0,48,10,"formattedResponse"],[58,12,48,10,"formattedResponse"],[58,29,12,0],[58,32,48,30,"formatMarketData"],[58,48,48,46],[58,49,48,47,"data"],[58,53,48,46],[58,54,12,0],[59,0,49,4,"console"],[59,12,49,4,"console"],[59,19,49,11],[59,20,49,12,"log"],[59,23,49,4],[59,24,50,6],[59,44,49,4],[59,46,51,6,"formattedResponse"],[59,63,51,23],[59,64,51,24],[59,65,51,23],[59,66,51,6],[59,67,51,27,"sparkline_in_7d"],[59,82,51,6],[59,83,51,43,"price"],[59,88,51,6],[59,89,51,49],[59,90,51,6],[59,91,49,4],[61,0,12,0],[61,17,53,8,"error"],[61,22,12,0],[62,0,12,0],[63,0,12,0],[64,0,12,0],[66,0,12,0],[67,0,54,6],[67,19,54,12],[67,81,54,16],[67,162,54,34,"params"],[67,168,54,16],[67,170,54,42,"error"],[67,175,54,16],[67,176,54,12],[67,177,54,6],[69,0,12,0],[70,0,12,0],[71,0,12,0],[73,0,12,0],[74,0,12,0],[75,0,56,6],[75,19,56,12],[75,81,56,16],[75,158,56,30,"params"],[75,164,56,16],[75,166,56,38,"formattedResponse"],[75,183,56,16],[75,184,56,12],[75,185,56,6],[77,0,12,0],[78,0,12,0],[79,0,12,0],[81,0,12,0],[82,0,12,0],[83,0,12,0],[84,0,12,0],[85,0,59,4],[85,19,59,10],[85,81,59,14],[85,162,59,32,"params"],[85,168,59,14],[85,182,59,10],[85,183,59,4],[87,0,12,0],[88,0,12,0],[89,0,12,0],[90,0,12,0],[91,0,12,0],[92,0,12,0],[93,0,12,0],[95,23,63,15],[95,117,63,20],[96,0,63,20],[97,0,63,20],[98,0,63,20],[99,0,63,20],[100,0,63,20],[101,0,64,2],[101,19,64,8],[101,87,64,18,"MARKET_ACTIONS"],[101,162,64,33,"FETCH_MARKET"],[101,174,64,8],[101,176,64,47,"fetchMarkets"],[101,188,64,8],[101,189,64,2],[103,0,63,20],[104,0,63,20],[105,0,63,20],[106,0,63,20],[107,0,63,20],[108,0,63,20],[109,0,63,20],[109,3,63,15],[109,5]],"functionMap":{"names":["<global>","fetchMarkets","formatSparkline","numbers.map$argument_0","formatMarketData","data.forEach$argument_0","fork$argument_0"],"mappings":"AAA;ACW;4BCG;2CCE;ODK;KDG;6BGE;mBCG;ODW;KHG;CDiB;oBME;CNE"}},"type":"js/module"}]}