{"dependencies":[{"name":"./procedure.json","data":{"asyncType":null,"locs":[{"start":{"line":41,"column":15},"end":{"line":41,"column":36}},{"start":{"line":43,"column":17},"end":{"line":43,"column":36}},{"start":{"line":56,"column":24},"end":{"line":56,"column":40}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  module.exports = sortByProcedure;\n  var attributes = {\n    __proto__: null,\n    exists: 10,\n    equals: 8,\n    not: 7,\n    start: 6,\n    end: 6,\n    any: 5,\n    hyphen: 4,\n    element: 4\n  };\n\n  function sortByProcedure(arr) {\n    var procs = arr.map(getProcedure);\n\n    for (var i = 1; i < arr.length; i++) {\n      var procNew = procs[i];\n      if (procNew < 0) continue;\n\n      for (var j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n        var token = arr[j + 1];\n        arr[j + 1] = arr[j];\n        arr[j] = token;\n        procs[j + 1] = procs[j];\n        procs[j] = procNew;\n      }\n    }\n  }\n\n  function getProcedure(token) {\n    var proc = _$$_REQUIRE(_dependencyMap[0], \"./procedure.json\")[token.type];\n\n    if (proc === _$$_REQUIRE(_dependencyMap[0], \"./procedure.json\").attribute) {\n      proc = attributes[token.action];\n\n      if (proc === attributes.equals && token.name === \"id\") {\n        proc = 9;\n      }\n\n      if (token.ignoreCase) {\n        proc >>= 1;\n      }\n    } else if (proc === _$$_REQUIRE(_dependencyMap[0], \"./procedure.json\").pseudo) {\n      if (!token.data) {\n        proc = 3;\n      } else if (token.name === \"has\" || token.name === \"contains\") {\n        proc = 0;\n      } else if (token.name === \"matches\" || token.name === \"not\") {\n        proc = 0;\n\n        for (var i = 0; i < token.data.length; i++) {\n          if (token.data[i].length !== 1) continue;\n          var cur = getProcedure(token.data[i][0]);\n\n          if (cur === 0) {\n            proc = 0;\n            break;\n          }\n\n          if (cur > proc) proc = cur;\n        }\n\n        if (token.data.length > 1 && proc > 0) proc -= 1;\n      } else {\n        proc = 1;\n      }\n    }\n\n    return proc;\n  }\n});","lineCount":73,"map":[[2,0,1,0,"module"],[2,2,1,0,"module"],[2,8,1,6],[2,9,1,7,"exports"],[2,16,1,0],[2,19,1,17,"sortByProcedure"],[2,34,1,0],[3,0,11,0],[3,6,11,4,"attributes"],[3,16,11,14],[3,19,11,17],[4,0,12,4,"__proto__"],[4,4,12,4,"__proto__"],[4,13,12,13],[4,15,12,15],[4,19,11,17],[5,0,13,4,"exists"],[5,4,13,4,"exists"],[5,10,13,10],[5,12,13,12],[5,14,11,17],[6,0,14,4,"equals"],[6,4,14,4,"equals"],[6,10,14,10],[6,12,14,12],[6,13,11,17],[7,0,15,4,"not"],[7,4,15,4,"not"],[7,7,15,7],[7,9,15,9],[7,10,11,17],[8,0,16,4,"start"],[8,4,16,4,"start"],[8,9,16,9],[8,11,16,11],[8,12,11,17],[9,0,17,4,"end"],[9,4,17,4,"end"],[9,7,17,7],[9,9,17,9],[9,10,11,17],[10,0,18,4,"any"],[10,4,18,4,"any"],[10,7,18,7],[10,9,18,9],[10,10,11,17],[11,0,19,4,"hyphen"],[11,4,19,4,"hyphen"],[11,10,19,10],[11,12,19,12],[11,13,11,17],[12,0,20,4,"element"],[12,4,20,4,"element"],[12,11,20,11],[12,13,20,13],[13,0,11,17],[13,3,11,0],[15,0,23,0],[15,11,23,9,"sortByProcedure"],[15,26,23,0],[15,27,23,25,"arr"],[15,30,23,0],[15,32,23,30],[16,0,24,4],[16,8,24,8,"procs"],[16,13,24,13],[16,16,24,16,"arr"],[16,19,24,19],[16,20,24,20,"map"],[16,23,24,16],[16,24,24,24,"getProcedure"],[16,36,24,16],[16,37,24,4],[18,0,25,4],[18,9,25,9],[18,13,25,13,"i"],[18,14,25,14],[18,17,25,17],[18,18,25,4],[18,20,25,20,"i"],[18,21,25,21],[18,24,25,24,"arr"],[18,27,25,27],[18,28,25,28,"length"],[18,34,25,4],[18,36,25,36,"i"],[18,37,25,37],[18,39,25,4],[18,41,25,41],[19,0,26,8],[19,10,26,12,"procNew"],[19,17,26,19],[19,20,26,22,"procs"],[19,25,26,27],[19,26,26,28,"i"],[19,27,26,27],[19,28,26,8],[20,0,28,8],[20,10,28,12,"procNew"],[20,17,28,19],[20,20,28,22],[20,21,28,8],[20,23,28,25],[22,0,30,8],[22,11,30,13],[22,15,30,17,"j"],[22,16,30,18],[22,19,30,21,"i"],[22,20,30,22],[22,23,30,25],[22,24,30,8],[22,26,30,28,"j"],[22,27,30,29],[22,31,30,33],[22,32,30,28],[22,36,30,38,"procNew"],[22,43,30,45],[22,46,30,48,"procs"],[22,51,30,53],[22,52,30,54,"j"],[22,53,30,53],[22,54,30,8],[22,56,30,58,"j"],[22,57,30,59],[22,59,30,8],[22,61,30,63],[23,0,31,12],[23,12,31,16,"token"],[23,17,31,21],[23,20,31,24,"arr"],[23,23,31,27],[23,24,31,28,"j"],[23,25,31,29],[23,28,31,32],[23,29,31,27],[23,30,31,12],[24,0,32,12,"arr"],[24,8,32,12,"arr"],[24,11,32,15],[24,12,32,16,"j"],[24,13,32,17],[24,16,32,20],[24,17,32,15],[24,18,32,12],[24,21,32,25,"arr"],[24,24,32,28],[24,25,32,29,"j"],[24,26,32,28],[24,27,32,12],[25,0,33,12,"arr"],[25,8,33,12,"arr"],[25,11,33,15],[25,12,33,16,"j"],[25,13,33,15],[25,14,33,12],[25,17,33,21,"token"],[25,22,33,12],[26,0,34,12,"procs"],[26,8,34,12,"procs"],[26,13,34,17],[26,14,34,18,"j"],[26,15,34,19],[26,18,34,22],[26,19,34,17],[26,20,34,12],[26,23,34,27,"procs"],[26,28,34,32],[26,29,34,33,"j"],[26,30,34,32],[26,31,34,12],[27,0,35,12,"procs"],[27,8,35,12,"procs"],[27,13,35,17],[27,14,35,18,"j"],[27,15,35,17],[27,16,35,12],[27,19,35,23,"procNew"],[27,26,35,12],[28,0,36,9],[29,0,37,5],[30,0,38,1],[32,0,40,0],[32,11,40,9,"getProcedure"],[32,23,40,0],[32,24,40,22,"token"],[32,29,40,0],[32,31,40,29],[33,0,41,4],[33,8,41,8,"proc"],[33,12,41,12],[33,15,41,15],[33,66,41,25,"token"],[33,71,41,30],[33,72,41,31,"type"],[33,76,41,15],[33,77,41,4],[35,0,43,4],[35,8,43,8,"proc"],[35,12,43,12],[35,17,43,17],[35,68,43,27,"attribute"],[35,77,43,4],[35,79,43,38],[36,0,44,8,"proc"],[36,6,44,8,"proc"],[36,10,44,12],[36,13,44,15,"attributes"],[36,23,44,25],[36,24,44,26,"token"],[36,29,44,31],[36,30,44,32,"action"],[36,36,44,25],[36,37,44,8],[38,0,46,8],[38,10,46,12,"proc"],[38,14,46,16],[38,19,46,21,"attributes"],[38,29,46,31],[38,30,46,32,"equals"],[38,36,46,12],[38,40,46,42,"token"],[38,45,46,47],[38,46,46,48,"name"],[38,50,46,42],[38,55,46,57],[38,59,46,8],[38,61,46,63],[39,0,48,12,"proc"],[39,8,48,12,"proc"],[39,12,48,16],[39,15,48,19],[39,16,48,12],[40,0,49,9],[42,0,51,8],[42,10,51,12,"token"],[42,15,51,17],[42,16,51,18,"ignoreCase"],[42,26,51,8],[42,28,51,30],[43,0,54,12,"proc"],[43,8,54,12,"proc"],[43,12,54,16],[43,17,54,21],[43,18,54,12],[44,0,55,9],[45,0,56,5],[45,5,43,4],[45,11,56,11],[45,15,56,15,"proc"],[45,19,56,19],[45,24,56,24],[45,75,56,34,"pseudo"],[45,81,56,11],[45,83,56,42],[46,0,57,8],[46,10,57,12],[46,11,57,13,"token"],[46,16,57,18],[46,17,57,19,"data"],[46,21,57,8],[46,23,57,25],[47,0,58,12,"proc"],[47,8,58,12,"proc"],[47,12,58,16],[47,15,58,19],[47,16,58,12],[48,0,59,9],[48,7,57,8],[48,13,59,15],[48,17,59,19,"token"],[48,22,59,24],[48,23,59,25,"name"],[48,27,59,19],[48,32,59,34],[48,37,59,19],[48,41,59,43,"token"],[48,46,59,48],[48,47,59,49,"name"],[48,51,59,43],[48,56,59,58],[48,66,59,15],[48,68,59,70],[49,0,60,12,"proc"],[49,8,60,12,"proc"],[49,12,60,16],[49,15,60,19],[49,16,60,12],[50,0,61,9],[50,7,59,15],[50,13,61,15],[50,17,61,19,"token"],[50,22,61,24],[50,23,61,25,"name"],[50,27,61,19],[50,32,61,34],[50,41,61,19],[50,45,61,47,"token"],[50,50,61,52],[50,51,61,53,"name"],[50,55,61,47],[50,60,61,62],[50,65,61,15],[50,67,61,69],[51,0,62,12,"proc"],[51,8,62,12,"proc"],[51,12,62,16],[51,15,62,19],[51,16,62,12],[53,0,63,12],[53,13,63,17],[53,17,63,21,"i"],[53,18,63,22],[53,21,63,25],[53,22,63,12],[53,24,63,28,"i"],[53,25,63,29],[53,28,63,32,"token"],[53,33,63,37],[53,34,63,38,"data"],[53,38,63,32],[53,39,63,43,"length"],[53,45,63,12],[53,47,63,51,"i"],[53,48,63,52],[53,50,63,12],[53,52,63,56],[54,0,65,16],[54,14,65,20,"token"],[54,19,65,25],[54,20,65,26,"data"],[54,24,65,20],[54,25,65,31,"i"],[54,26,65,20],[54,28,65,34,"length"],[54,34,65,20],[54,39,65,45],[54,40,65,16],[54,42,65,48],[55,0,66,16],[55,14,66,20,"cur"],[55,17,66,23],[55,20,66,26,"getProcedure"],[55,32,66,38],[55,33,66,39,"token"],[55,38,66,44],[55,39,66,45,"data"],[55,43,66,39],[55,44,66,50,"i"],[55,45,66,39],[55,47,66,53],[55,48,66,39],[55,49,66,38],[55,50,66,16],[57,0,68,16],[57,14,68,20,"cur"],[57,17,68,23],[57,22,68,28],[57,23,68,16],[57,25,68,31],[58,0,69,20,"proc"],[58,12,69,20,"proc"],[58,16,69,24],[58,19,69,27],[58,20,69,20],[59,0,70,20],[60,0,71,17],[62,0,72,16],[62,14,72,20,"cur"],[62,17,72,23],[62,20,72,26,"proc"],[62,24,72,16],[62,26,72,32,"proc"],[62,30,72,36],[62,33,72,39,"cur"],[62,36,72,32],[63,0,73,13],[65,0,74,12],[65,12,74,16,"token"],[65,17,74,21],[65,18,74,22,"data"],[65,22,74,16],[65,23,74,27,"length"],[65,29,74,16],[65,32,74,36],[65,33,74,16],[65,37,74,41,"proc"],[65,41,74,45],[65,44,74,48],[65,45,74,12],[65,47,74,51,"proc"],[65,51,74,55],[65,55,74,59],[65,56,74,51],[66,0,75,9],[66,7,61,15],[66,13,75,15],[67,0,76,12,"proc"],[67,8,76,12,"proc"],[67,12,76,16],[67,15,76,19],[67,16,76,12],[68,0,77,9],[69,0,78,5],[71,0,79,4],[71,11,79,11,"proc"],[71,15,79,4],[72,0,80,1]],"functionMap":{"names":["<global>","sortByProcedure","getProcedure"],"mappings":"AAA;ACsB;CDe;AEE;CFwC"}},"type":"js/module"}]}