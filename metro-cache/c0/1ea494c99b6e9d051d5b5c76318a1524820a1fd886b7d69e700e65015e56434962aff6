{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":15},"end":{"line":5,"column":28}},{"start":{"line":6,"column":10},"end":{"line":6,"column":18}},{"start":{"line":7,"column":23},"end":{"line":7,"column":44}},{"start":{"line":24,"column":44},"end":{"line":24,"column":98}},{"start":{"line":28,"column":44},"end":{"line":28,"column":100}},{"start":{"line":42,"column":21},"end":{"line":42,"column":104}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var FUNCTION = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Function;\n\n  var URL = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Url;\n\n  var RIGHTPARENTHESIS = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.RightParenthesis;\n\n  module.exports = {\n    name: 'Url',\n    structure: {\n      value: ['String', 'Raw']\n    },\n    parse: function parse() {\n      var start = this.scanner.tokenStart;\n      var value;\n\n      switch (this.scanner.tokenType) {\n        case URL:\n          var rawStart = start + 4;\n          var rawEnd = this.scanner.tokenEnd - 1;\n\n          while (rawStart < rawEnd && _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").isWhiteSpace(this.scanner.source.charCodeAt(rawStart))) {\n            rawStart++;\n          }\n\n          while (rawStart < rawEnd && _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").isWhiteSpace(this.scanner.source.charCodeAt(rawEnd - 1))) {\n            rawEnd--;\n          }\n\n          value = {\n            type: 'Raw',\n            loc: this.getLocation(rawStart, rawEnd),\n            value: this.scanner.source.substring(rawStart, rawEnd)\n          };\n          this.eat(URL);\n          break;\n\n        case FUNCTION:\n          if (!_$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(')) {\n            this.error('Function name must be `url`');\n          }\n\n          this.eat(FUNCTION);\n          this.scanner.skipSC();\n          value = this.String();\n          this.scanner.skipSC();\n          this.eat(RIGHTPARENTHESIS);\n          break;\n\n        default:\n          this.error('Url or Function is expected');\n      }\n\n      return {\n        type: 'Url',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        value: value\n      };\n    },\n    generate: function generate(node) {\n      this.chunk('url');\n      this.chunk('(');\n      this.node(node.value);\n      this.chunk(')');\n    }\n  };\n});","lineCount":67,"map":[[2,0,5,0],[2,6,5,4,"FUNCTION"],[2,14,5,12],[2,17,5,15],[2,72,5,20,"Function"],[2,80,5,0],[4,0,6,0],[4,6,6,4,"URL"],[4,9,6,7],[4,12,6,10],[4,67,6,15,"Url"],[4,70,6,0],[6,0,7,0],[6,6,7,4,"RIGHTPARENTHESIS"],[6,22,7,20],[6,25,7,23],[6,80,7,28,"RightParenthesis"],[6,96,7,0],[8,0,10,0,"module"],[8,2,10,0,"module"],[8,8,10,6],[8,9,10,7,"exports"],[8,16,10,0],[8,19,10,17],[9,0,11,4,"name"],[9,4,11,4,"name"],[9,8,11,8],[9,10,11,10],[9,15,10,17],[10,0,12,4,"structure"],[10,4,12,4,"structure"],[10,13,12,13],[10,15,12,15],[11,0,13,8,"value"],[11,6,13,8,"value"],[11,11,13,13],[11,13,13,15],[11,14,13,16],[11,22,13,15],[11,24,13,26],[11,29,13,15],[12,0,12,15],[12,5,10,17],[13,0,15,4,"parse"],[13,4,15,4,"parse"],[13,9,15,9],[13,11,15,11],[13,28,15,22],[14,0,16,8],[14,10,16,12,"start"],[14,15,16,17],[14,18,16,20],[14,23,16,25,"scanner"],[14,30,16,20],[14,31,16,33,"tokenStart"],[14,41,16,8],[15,0,17,8],[15,10,17,12,"value"],[15,15,17,8],[17,0,19,8],[17,14,19,16],[17,19,19,21,"scanner"],[17,26,19,16],[17,27,19,29,"tokenType"],[17,36,19,8],[18,0,20,12],[18,13,20,17,"URL"],[18,16,20,12],[19,0,21,16],[19,14,21,20,"rawStart"],[19,22,21,28],[19,25,21,31,"start"],[19,30,21,36],[19,33,21,39],[19,34,21,16],[20,0,22,16],[20,14,22,20,"rawEnd"],[20,20,22,26],[20,23,22,29],[20,28,22,34,"scanner"],[20,35,22,29],[20,36,22,42,"tokenEnd"],[20,44,22,29],[20,47,22,53],[20,48,22,16],[22,0,24,16],[22,17,24,23,"rawStart"],[22,25,24,31],[22,28,24,34,"rawEnd"],[22,34,24,23],[22,38,24,44],[22,101,24,57],[22,106,24,62,"scanner"],[22,113,24,57],[22,114,24,70,"source"],[22,120,24,57],[22,121,24,77,"charCodeAt"],[22,131,24,57],[22,132,24,88,"rawStart"],[22,140,24,57],[22,141,24,44],[22,142,24,16],[22,144,24,100],[23,0,25,20,"rawStart"],[23,12,25,20,"rawStart"],[23,20,25,28],[24,0,26,17],[26,0,28,16],[26,17,28,23,"rawStart"],[26,25,28,31],[26,28,28,34,"rawEnd"],[26,34,28,23],[26,38,28,44],[26,101,28,57],[26,106,28,62,"scanner"],[26,113,28,57],[26,114,28,70,"source"],[26,120,28,57],[26,121,28,77,"charCodeAt"],[26,131,28,57],[26,132,28,88,"rawEnd"],[26,138,28,94],[26,141,28,97],[26,142,28,57],[26,143,28,44],[26,144,28,16],[26,146,28,102],[27,0,29,20,"rawEnd"],[27,12,29,20,"rawEnd"],[27,18,29,26],[28,0,30,17],[30,0,32,16,"value"],[30,10,32,16,"value"],[30,15,32,21],[30,18,32,24],[31,0,33,20,"type"],[31,12,33,20,"type"],[31,16,33,24],[31,18,33,26],[31,23,32,24],[32,0,34,20,"loc"],[32,12,34,20,"loc"],[32,15,34,23],[32,17,34,25],[32,22,34,30,"getLocation"],[32,33,34,25],[32,34,34,42,"rawStart"],[32,42,34,25],[32,44,34,52,"rawEnd"],[32,50,34,25],[32,51,32,24],[33,0,35,20,"value"],[33,12,35,20,"value"],[33,17,35,25],[33,19,35,27],[33,24,35,32,"scanner"],[33,31,35,27],[33,32,35,40,"source"],[33,38,35,27],[33,39,35,47,"substring"],[33,48,35,27],[33,49,35,57,"rawStart"],[33,57,35,27],[33,59,35,67,"rawEnd"],[33,65,35,27],[34,0,32,24],[34,11,32,16],[35,0,38,16],[35,15,38,21,"eat"],[35,18,38,16],[35,19,38,25,"URL"],[35,22,38,16],[36,0,39,16],[38,0,41,12],[38,13,41,17,"FUNCTION"],[38,21,41,12],[39,0,42,16],[39,14,42,20],[39,15,42,21],[39,72,42,28],[39,77,42,33,"scanner"],[39,84,42,28],[39,85,42,41,"source"],[39,91,42,21],[39,93,42,49],[39,98,42,54,"scanner"],[39,105,42,49],[39,106,42,62,"tokenStart"],[39,116,42,21],[39,118,42,74],[39,123,42,79,"scanner"],[39,130,42,74],[39,131,42,87,"tokenEnd"],[39,139,42,21],[39,141,42,97],[39,147,42,21],[39,148,42,16],[39,150,42,106],[40,0,43,20],[40,17,43,25,"error"],[40,22,43,20],[40,23,43,31],[40,52,43,20],[41,0,44,17],[43,0,46,16],[43,15,46,21,"eat"],[43,18,46,16],[43,19,46,25,"FUNCTION"],[43,27,46,16],[44,0,47,16],[44,15,47,21,"scanner"],[44,22,47,16],[44,23,47,29,"skipSC"],[44,29,47,16],[45,0,48,16,"value"],[45,10,48,16,"value"],[45,15,48,21],[45,18,48,24],[45,23,48,29,"String"],[45,29,48,24],[45,31,48,16],[46,0,49,16],[46,15,49,21,"scanner"],[46,22,49,16],[46,23,49,29,"skipSC"],[46,29,49,16],[47,0,50,16],[47,15,50,21,"eat"],[47,18,50,16],[47,19,50,25,"RIGHTPARENTHESIS"],[47,35,50,16],[48,0,51,16],[50,0,53,12],[51,0,54,16],[51,15,54,21,"error"],[51,20,54,16],[51,21,54,27],[51,50,54,16],[52,0,19,8],[54,0,57,8],[54,13,57,15],[55,0,58,12,"type"],[55,8,58,12,"type"],[55,12,58,16],[55,14,58,18],[55,19,57,15],[56,0,59,12,"loc"],[56,8,59,12,"loc"],[56,11,59,15],[56,13,59,17],[56,18,59,22,"getLocation"],[56,29,59,17],[56,30,59,34,"start"],[56,35,59,17],[56,37,59,41],[56,42,59,46,"scanner"],[56,49,59,41],[56,50,59,54,"tokenStart"],[56,60,59,17],[56,61,57,15],[57,0,60,12,"value"],[57,8,60,12,"value"],[57,13,60,17],[57,15,60,19,"value"],[58,0,57,15],[58,7,57,8],[59,0,62,5],[59,5,10,17],[60,0,63,4,"generate"],[60,4,63,4,"generate"],[60,12,63,12],[60,14,63,14],[60,32,63,23,"node"],[60,36,63,14],[60,38,63,29],[61,0,64,8],[61,11,64,13,"chunk"],[61,16,64,8],[61,17,64,19],[61,22,64,8],[62,0,65,8],[62,11,65,13,"chunk"],[62,16,65,8],[62,17,65,19],[62,20,65,8],[63,0,66,8],[63,11,66,13,"node"],[63,15,66,8],[63,16,66,18,"node"],[63,20,66,22],[63,21,66,23,"value"],[63,26,66,8],[64,0,67,8],[64,11,67,13,"chunk"],[64,16,67,8],[64,17,67,19],[64,20,67,8],[65,0,68,5],[66,0,10,17],[66,3,10,0]],"functionMap":{"names":["<global>","module.exports.parse","module.exports.generate"],"mappings":"AAA;WCc;KD+C;cEC;KFK"}},"type":"js/module"}]}