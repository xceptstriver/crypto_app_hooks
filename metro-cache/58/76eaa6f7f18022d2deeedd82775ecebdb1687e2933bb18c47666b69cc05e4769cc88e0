{"dependencies":[{"name":"./utils","data":{"asyncType":null,"locs":[{"start":{"line":36,"column":17},"end":{"line":36,"column":46}},{"start":{"line":44,"column":21},"end":{"line":44,"column":48}},{"start":{"line":65,"column":17},"end":{"line":65,"column":44}},{"start":{"line":69,"column":12},"end":{"line":69,"column":58}},{"start":{"line":71,"column":21},"end":{"line":71,"column":58}},{"start":{"line":133,"column":34},"end":{"line":133,"column":72}},{"start":{"line":150,"column":34},"end":{"line":150,"column":80}},{"start":{"line":155,"column":33},"end":{"line":155,"column":63}},{"start":{"line":175,"column":17},"end":{"line":175,"column":50}},{"start":{"line":196,"column":29},"end":{"line":196,"column":62}},{"start":{"line":210,"column":29},"end":{"line":210,"column":66}},{"start":{"line":224,"column":29},"end":{"line":224,"column":66}},{"start":{"line":233,"column":33},"end":{"line":233,"column":63}},{"start":{"line":239,"column":29},"end":{"line":239,"column":66}},{"start":{"line":279,"column":25},"end":{"line":279,"column":62}},{"start":{"line":301,"column":29},"end":{"line":301,"column":60}},{"start":{"line":445,"column":29},"end":{"line":445,"column":60}},{"start":{"line":587,"column":0},"end":{"line":587,"column":18}},{"start":{"line":588,"column":20},"end":{"line":588,"column":30}}]}},{"name":"./char-code-definitions","data":{"asyncType":null,"locs":[{"start":{"line":39,"column":12},"end":{"line":39,"column":100}},{"start":{"line":116,"column":20},"end":{"line":116,"column":42}},{"start":{"line":124,"column":21},"end":{"line":124,"column":41}},{"start":{"line":129,"column":21},"end":{"line":129,"column":48}},{"start":{"line":130,"column":24},"end":{"line":130,"column":39}},{"start":{"line":149,"column":24},"end":{"line":149,"column":43}},{"start":{"line":151,"column":31},"end":{"line":151,"column":60}},{"start":{"line":181,"column":20},"end":{"line":181,"column":42}},{"start":{"line":189,"column":21},"end":{"line":189,"column":41}},{"start":{"line":194,"column":21},"end":{"line":194,"column":48}},{"start":{"line":221,"column":21},"end":{"line":221,"column":50}},{"start":{"line":232,"column":24},"end":{"line":232,"column":68}},{"start":{"line":260,"column":16},"end":{"line":260,"column":37}},{"start":{"line":274,"column":16},"end":{"line":274,"column":38}},{"start":{"line":276,"column":17},"end":{"line":276,"column":44}},{"start":{"line":291,"column":20},"end":{"line":291,"column":51}},{"start":{"line":291,"column":55},"end":{"line":291,"column":118}},{"start":{"line":335,"column":20},"end":{"line":335,"column":89}},{"start":{"line":355,"column":20},"end":{"line":355,"column":89}},{"start":{"line":365,"column":28},"end":{"line":365,"column":101}},{"start":{"line":380,"column":20},"end":{"line":380,"column":89}},{"start":{"line":442,"column":20},"end":{"line":442,"column":112}},{"start":{"line":464,"column":20},"end":{"line":464,"column":64}},{"start":{"line":496,"column":17},"end":{"line":496,"column":39}},{"start":{"line":502,"column":17},"end":{"line":502,"column":43}},{"start":{"line":508,"column":17},"end":{"line":508,"column":37}},{"start":{"line":584,"column":0},"end":{"line":584,"column":32}},{"start":{"line":585,"column":20},"end":{"line":585,"column":44}}]}},{"name":"./const","data":{"asyncType":null,"locs":[{"start":{"line":43,"column":19},"end":{"line":43,"column":33}},{"start":{"line":51,"column":19},"end":{"line":51,"column":34}},{"start":{"line":57,"column":15},"end":{"line":57,"column":26}},{"start":{"line":78,"column":23},"end":{"line":78,"column":36}},{"start":{"line":91,"column":19},"end":{"line":91,"column":32}},{"start":{"line":97,"column":15},"end":{"line":97,"column":25}},{"start":{"line":110,"column":15},"end":{"line":110,"column":26}},{"start":{"line":134,"column":31},"end":{"line":134,"column":45}},{"start":{"line":172,"column":15},"end":{"line":172,"column":23}},{"start":{"line":211,"column":27},"end":{"line":211,"column":38}},{"start":{"line":225,"column":27},"end":{"line":225,"column":38}},{"start":{"line":240,"column":27},"end":{"line":240,"column":38}},{"start":{"line":278,"column":23},"end":{"line":278,"column":38}},{"start":{"line":293,"column":27},"end":{"line":293,"column":36}},{"start":{"line":306,"column":27},"end":{"line":306,"column":37}},{"start":{"line":321,"column":23},"end":{"line":321,"column":43}},{"start":{"line":328,"column":23},"end":{"line":328,"column":44}},{"start":{"line":340,"column":27},"end":{"line":340,"column":37}},{"start":{"line":348,"column":23},"end":{"line":348,"column":33}},{"start":{"line":361,"column":31},"end":{"line":361,"column":39}},{"start":{"line":370,"column":35},"end":{"line":370,"column":45}},{"start":{"line":385,"column":27},"end":{"line":385,"column":37}},{"start":{"line":397,"column":27},"end":{"line":397,"column":39}},{"start":{"line":403,"column":27},"end":{"line":403,"column":37}},{"start":{"line":411,"column":23},"end":{"line":411,"column":33}},{"start":{"line":418,"column":23},"end":{"line":418,"column":37}},{"start":{"line":429,"column":27},"end":{"line":429,"column":35}},{"start":{"line":433,"column":27},"end":{"line":433,"column":37}},{"start":{"line":444,"column":27},"end":{"line":444,"column":41}},{"start":{"line":448,"column":27},"end":{"line":448,"column":37}},{"start":{"line":457,"column":23},"end":{"line":457,"column":45}},{"start":{"line":469,"column":27},"end":{"line":469,"column":37}},{"start":{"line":477,"column":23},"end":{"line":477,"column":46}},{"start":{"line":484,"column":23},"end":{"line":484,"column":44}},{"start":{"line":491,"column":23},"end":{"line":491,"column":45}},{"start":{"line":515,"column":23},"end":{"line":515,"column":33}},{"start":{"line":533,"column":17},"end":{"line":533,"column":37}},{"start":{"line":534,"column":17},"end":{"line":534,"column":30}},{"start":{"line":536,"column":35},"end":{"line":536,"column":56}},{"start":{"line":540,"column":17},"end":{"line":540,"column":39}},{"start":{"line":542,"column":35},"end":{"line":542,"column":58}},{"start":{"line":546,"column":17},"end":{"line":546,"column":38}},{"start":{"line":548,"column":35},"end":{"line":548,"column":57}},{"start":{"line":557,"column":33},"end":{"line":557,"column":41}},{"start":{"line":579,"column":0},"end":{"line":579,"column":22}},{"start":{"line":580,"column":20},"end":{"line":580,"column":34}}]}},{"name":"../common/TokenStream","data":{"asyncType":null,"locs":[{"start":{"line":250,"column":17},"end":{"line":250,"column":34}}]}},{"name":"../common/adopt-buffer","data":{"asyncType":null,"locs":[{"start":{"line":257,"column":24},"end":{"line":257,"column":75}},{"start":{"line":258,"column":18},"end":{"line":258,"column":63}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var OFFSET_MASK = 0x00FFFFFF;\n  var TYPE_SHIFT = 24;\n\n  function tokenize(source, stream) {\n    function getCharCode(offset) {\n      return offset < sourceLength ? source.charCodeAt(offset) : 0;\n    }\n\n    function consumeNumericToken() {\n      offset = _$$_REQUIRE(_dependencyMap[0], \"./utils\").consumeNumber(source, offset);\n\n      if (_$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").isIdentifierStart(getCharCode(offset), getCharCode(offset + 1), getCharCode(offset + 2))) {\n        type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Dimension;\n        offset = _$$_REQUIRE(_dependencyMap[0], \"./utils\").consumeName(source, offset);\n        return;\n      }\n\n      if (getCharCode(offset) === 0x0025) {\n        type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Percentage;\n        offset++;\n        return;\n      }\n\n      type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Number;\n    }\n\n    function consumeIdentLikeToken() {\n      var nameStartOffset = offset;\n      offset = _$$_REQUIRE(_dependencyMap[0], \"./utils\").consumeName(source, offset);\n\n      if (_$$_REQUIRE(_dependencyMap[0], \"./utils\").cmpStr(source, nameStartOffset, offset, 'url') && getCharCode(offset) === 0x0028) {\n        offset = _$$_REQUIRE(_dependencyMap[0], \"./utils\").findWhiteSpaceEnd(source, offset + 1);\n\n        if (getCharCode(offset) === 0x0022 || getCharCode(offset) === 0x0027) {\n          type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Function;\n          offset = nameStartOffset + 4;\n          return;\n        }\n\n        consumeUrlToken();\n        return;\n      }\n\n      if (getCharCode(offset) === 0x0028) {\n        type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Function;\n        offset++;\n        return;\n      }\n\n      type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Ident;\n    }\n\n    function consumeStringToken(endingCodePoint) {\n      if (!endingCodePoint) {\n        endingCodePoint = getCharCode(offset++);\n      }\n\n      type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.String;\n\n      for (; offset < source.length; offset++) {\n        var code = source.charCodeAt(offset);\n\n        switch (_$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").charCodeCategory(code)) {\n          case endingCodePoint:\n            offset++;\n            return;\n\n          case _$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").charCodeCategory.Eof:\n            return;\n\n          case _$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").charCodeCategory.WhiteSpace:\n            if (_$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").isNewline(code)) {\n              offset += _$$_REQUIRE(_dependencyMap[0], \"./utils\").getNewlineLength(source, offset, code);\n              type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.BadString;\n              return;\n            }\n\n            break;\n\n          case 0x005C:\n            if (offset === source.length - 1) {\n              break;\n            }\n\n            var nextCode = getCharCode(offset + 1);\n\n            if (_$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").isNewline(nextCode)) {\n              offset += _$$_REQUIRE(_dependencyMap[0], \"./utils\").getNewlineLength(source, offset + 1, nextCode);\n            } else if (_$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").isValidEscape(code, nextCode)) {\n              offset = _$$_REQUIRE(_dependencyMap[0], \"./utils\").consumeEscaped(source, offset) - 1;\n            }\n\n            break;\n        }\n      }\n    }\n\n    function consumeUrlToken() {\n      type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Url;\n      offset = _$$_REQUIRE(_dependencyMap[0], \"./utils\").findWhiteSpaceEnd(source, offset);\n\n      for (; offset < source.length; offset++) {\n        var code = source.charCodeAt(offset);\n\n        switch (_$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").charCodeCategory(code)) {\n          case 0x0029:\n            offset++;\n            return;\n\n          case _$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").charCodeCategory.Eof:\n            return;\n\n          case _$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").charCodeCategory.WhiteSpace:\n            offset = _$$_REQUIRE(_dependencyMap[0], \"./utils\").findWhiteSpaceEnd(source, offset);\n\n            if (getCharCode(offset) === 0x0029 || offset >= source.length) {\n              if (offset < source.length) {\n                offset++;\n              }\n\n              return;\n            }\n\n            offset = _$$_REQUIRE(_dependencyMap[0], \"./utils\").consumeBadUrlRemnants(source, offset);\n            type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.BadUrl;\n            return;\n\n          case 0x0022:\n          case 0x0027:\n          case 0x0028:\n          case _$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").charCodeCategory.NonPrintable:\n            offset = _$$_REQUIRE(_dependencyMap[0], \"./utils\").consumeBadUrlRemnants(source, offset);\n            type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.BadUrl;\n            return;\n\n          case 0x005C:\n            if (_$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").isValidEscape(code, getCharCode(offset + 1))) {\n              offset = _$$_REQUIRE(_dependencyMap[0], \"./utils\").consumeEscaped(source, offset) - 1;\n              break;\n            }\n\n            offset = _$$_REQUIRE(_dependencyMap[0], \"./utils\").consumeBadUrlRemnants(source, offset);\n            type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.BadUrl;\n            return;\n        }\n      }\n    }\n\n    if (!stream) {\n      stream = new (_$$_REQUIRE(_dependencyMap[3], \"../common/TokenStream\"))();\n    }\n\n    source = String(source || '');\n    var sourceLength = source.length;\n\n    var offsetAndType = _$$_REQUIRE(_dependencyMap[4], \"../common/adopt-buffer\")(stream.offsetAndType, sourceLength + 1);\n\n    var balance = _$$_REQUIRE(_dependencyMap[4], \"../common/adopt-buffer\")(stream.balance, sourceLength + 1);\n\n    var tokenCount = 0;\n\n    var start = _$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").isBOM(getCharCode(0));\n\n    var offset = start;\n    var balanceCloseType = 0;\n    var balanceStart = 0;\n    var balancePrev = 0;\n\n    while (offset < sourceLength) {\n      var code = source.charCodeAt(offset);\n      var type = 0;\n      balance[tokenCount] = sourceLength;\n\n      switch (_$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").charCodeCategory(code)) {\n        case _$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").charCodeCategory.WhiteSpace:\n          type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.WhiteSpace;\n          offset = _$$_REQUIRE(_dependencyMap[0], \"./utils\").findWhiteSpaceEnd(source, offset + 1);\n          break;\n\n        case 0x0022:\n          consumeStringToken();\n          break;\n\n        case 0x0023:\n          if (_$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").isName(getCharCode(offset + 1)) || _$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").isValidEscape(getCharCode(offset + 1), getCharCode(offset + 2))) {\n            type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Hash;\n            offset = _$$_REQUIRE(_dependencyMap[0], \"./utils\").consumeName(source, offset + 1);\n          } else {\n            type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Delim;\n            offset++;\n          }\n\n          break;\n\n        case 0x0027:\n          consumeStringToken();\n          break;\n\n        case 0x0028:\n          type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.LeftParenthesis;\n          offset++;\n          break;\n\n        case 0x0029:\n          type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.RightParenthesis;\n          offset++;\n          break;\n\n        case 0x002B:\n          if (_$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n            consumeNumericToken();\n          } else {\n            type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Delim;\n            offset++;\n          }\n\n          break;\n\n        case 0x002C:\n          type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Comma;\n          offset++;\n          break;\n\n        case 0x002D:\n          if (_$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n            consumeNumericToken();\n          } else {\n            if (getCharCode(offset + 1) === 0x002D && getCharCode(offset + 2) === 0x003E) {\n              type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.CDC;\n              offset = offset + 3;\n            } else {\n              if (_$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").isIdentifierStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                consumeIdentLikeToken();\n              } else {\n                type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Delim;\n                offset++;\n              }\n            }\n          }\n\n          break;\n\n        case 0x002E:\n          if (_$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n            consumeNumericToken();\n          } else {\n            type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Delim;\n            offset++;\n          }\n\n          break;\n\n        case 0x002F:\n          if (getCharCode(offset + 1) === 0x002A) {\n            type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Comment;\n            offset = source.indexOf('*/', offset + 2) + 2;\n\n            if (offset === 1) {\n              offset = source.length;\n            }\n          } else {\n            type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Delim;\n            offset++;\n          }\n\n          break;\n\n        case 0x003A:\n          type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Colon;\n          offset++;\n          break;\n\n        case 0x003B:\n          type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Semicolon;\n          offset++;\n          break;\n\n        case 0x003C:\n          if (getCharCode(offset + 1) === 0x0021 && getCharCode(offset + 2) === 0x002D && getCharCode(offset + 3) === 0x002D) {\n            type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.CDO;\n            offset = offset + 4;\n          } else {\n            type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Delim;\n            offset++;\n          }\n\n          break;\n\n        case 0x0040:\n          if (_$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\n            type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.AtKeyword;\n            offset = _$$_REQUIRE(_dependencyMap[0], \"./utils\").consumeName(source, offset + 1);\n          } else {\n            type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Delim;\n            offset++;\n          }\n\n          break;\n\n        case 0x005B:\n          type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.LeftSquareBracket;\n          offset++;\n          break;\n\n        case 0x005C:\n          if (_$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").isValidEscape(code, getCharCode(offset + 1))) {\n            consumeIdentLikeToken();\n          } else {\n            type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Delim;\n            offset++;\n          }\n\n          break;\n\n        case 0x005D:\n          type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.RightSquareBracket;\n          offset++;\n          break;\n\n        case 0x007B:\n          type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.LeftCurlyBracket;\n          offset++;\n          break;\n\n        case 0x007D:\n          type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.RightCurlyBracket;\n          offset++;\n          break;\n\n        case _$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").charCodeCategory.Digit:\n          consumeNumericToken();\n          break;\n\n        case _$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").charCodeCategory.NameStart:\n          consumeIdentLikeToken();\n          break;\n\n        case _$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\").charCodeCategory.Eof:\n          break;\n\n        default:\n          type = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Delim;\n          offset++;\n      }\n\n      switch (type) {\n        case balanceCloseType:\n          balancePrev = balanceStart & OFFSET_MASK;\n          balanceStart = balance[balancePrev];\n          balanceCloseType = balanceStart >> TYPE_SHIFT;\n          balance[tokenCount] = balancePrev;\n          balance[balancePrev++] = tokenCount;\n\n          for (; balancePrev < tokenCount; balancePrev++) {\n            if (balance[balancePrev] === sourceLength) {\n              balance[balancePrev] = tokenCount;\n            }\n          }\n\n          break;\n\n        case _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.LeftParenthesis:\n        case _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.Function:\n          balance[tokenCount] = balanceStart;\n          balanceCloseType = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.RightParenthesis;\n          balanceStart = balanceCloseType << TYPE_SHIFT | tokenCount;\n          break;\n\n        case _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.LeftSquareBracket:\n          balance[tokenCount] = balanceStart;\n          balanceCloseType = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.RightSquareBracket;\n          balanceStart = balanceCloseType << TYPE_SHIFT | tokenCount;\n          break;\n\n        case _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.LeftCurlyBracket:\n          balance[tokenCount] = balanceStart;\n          balanceCloseType = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.RightCurlyBracket;\n          balanceStart = balanceCloseType << TYPE_SHIFT | tokenCount;\n          break;\n      }\n\n      offsetAndType[tokenCount++] = type << TYPE_SHIFT | offset;\n    }\n\n    offsetAndType[tokenCount] = _$$_REQUIRE(_dependencyMap[2], \"./const\").TYPE.EOF << TYPE_SHIFT | offset;\n    balance[tokenCount] = sourceLength;\n    balance[sourceLength] = sourceLength;\n\n    while (balanceStart !== 0) {\n      balancePrev = balanceStart & OFFSET_MASK;\n      balanceStart = balance[balancePrev];\n      balance[balancePrev] = sourceLength;\n    }\n\n    stream.source = source;\n    stream.firstCharOffset = start;\n    stream.offsetAndType = offsetAndType;\n    stream.tokenCount = tokenCount;\n    stream.balance = balance;\n    stream.reset();\n    stream.next();\n    return stream;\n  }\n\n  Object.keys(_$$_REQUIRE(_dependencyMap[2], \"./const\")).forEach(function (key) {\n    tokenize[key] = _$$_REQUIRE(_dependencyMap[2], \"./const\")[key];\n  });\n  Object.keys(_$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\")).forEach(function (key) {\n    tokenize[key] = _$$_REQUIRE(_dependencyMap[1], \"./char-code-definitions\")[key];\n  });\n  Object.keys(_$$_REQUIRE(_dependencyMap[0], \"./utils\")).forEach(function (key) {\n    tokenize[key] = _$$_REQUIRE(_dependencyMap[0], \"./utils\")[key];\n  });\n  module.exports = tokenize;\n});","lineCount":416,"map":[[2,0,25,0],[2,6,25,4,"OFFSET_MASK"],[2,17,25,15],[2,20,25,18],[2,30,25,0],[3,0,26,0],[3,6,26,4,"TYPE_SHIFT"],[3,16,26,14],[3,19,26,17],[3,21,26,0],[5,0,28,0],[5,11,28,9,"tokenize"],[5,19,28,0],[5,20,28,18,"source"],[5,26,28,0],[5,28,28,26,"stream"],[5,34,28,0],[5,36,28,34],[6,0,29,4],[6,13,29,13,"getCharCode"],[6,24,29,4],[6,25,29,25,"offset"],[6,31,29,4],[6,33,29,33],[7,0,30,8],[7,13,30,15,"offset"],[7,19,30,21],[7,22,30,24,"sourceLength"],[7,34,30,15],[7,37,30,39,"source"],[7,43,30,45],[7,44,30,46,"charCodeAt"],[7,54,30,39],[7,55,30,57,"offset"],[7,61,30,39],[7,62,30,15],[7,65,30,67],[7,66,30,8],[8,0,31,5],[10,0,34,4],[10,13,34,13,"consumeNumericToken"],[10,32,34,4],[10,35,34,35],[11,0,36,8,"offset"],[11,6,36,8,"offset"],[11,12,36,14],[11,15,36,17],[11,71,36,31,"source"],[11,77,36,17],[11,79,36,39,"offset"],[11,85,36,17],[11,86,36,8],[13,0,39,8],[13,10,39,12],[13,86,39,30,"getCharCode"],[13,97,39,41],[13,98,39,42,"offset"],[13,104,39,41],[13,105,39,12],[13,107,39,51,"getCharCode"],[13,118,39,62],[13,119,39,63,"offset"],[13,125,39,69],[13,128,39,72],[13,129,39,62],[13,130,39,12],[13,132,39,76,"getCharCode"],[13,143,39,87],[13,144,39,88,"offset"],[13,150,39,94],[13,153,39,97],[13,154,39,87],[13,155,39,12],[13,156,39,8],[13,158,39,102],[14,0,43,12,"type"],[14,8,43,12,"type"],[14,12,43,16],[14,15,43,19],[14,62,43,24,"Dimension"],[14,71,43,12],[15,0,44,12,"offset"],[15,8,44,12,"offset"],[15,14,44,18],[15,17,44,21],[15,71,44,33,"source"],[15,77,44,21],[15,79,44,41,"offset"],[15,85,44,21],[15,86,44,12],[16,0,45,12],[17,0,46,9],[19,0,49,8],[19,10,49,12,"getCharCode"],[19,21,49,23],[19,22,49,24,"offset"],[19,28,49,23],[19,29,49,12],[19,34,49,36],[19,40,49,8],[19,42,49,44],[20,0,51,12,"type"],[20,8,51,12,"type"],[20,12,51,16],[20,15,51,19],[20,62,51,24,"Percentage"],[20,72,51,12],[21,0,52,12,"offset"],[21,8,52,12,"offset"],[21,14,52,18],[22,0,53,12],[23,0,54,9],[25,0,57,8,"type"],[25,6,57,8,"type"],[25,10,57,12],[25,13,57,15],[25,60,57,20,"Number"],[25,66,57,8],[26,0,58,5],[28,0,61,4],[28,13,61,13,"consumeIdentLikeToken"],[28,34,61,4],[28,37,61,37],[29,0,62,8],[29,10,62,14,"nameStartOffset"],[29,25,62,29],[29,28,62,32,"offset"],[29,34,62,8],[30,0,65,8,"offset"],[30,6,65,8,"offset"],[30,12,65,14],[30,15,65,17],[30,69,65,29,"source"],[30,75,65,17],[30,77,65,37,"offset"],[30,83,65,17],[30,84,65,8],[32,0,69,8],[32,10,69,12],[32,59,69,19,"source"],[32,65,69,12],[32,67,69,27,"nameStartOffset"],[32,82,69,12],[32,84,69,44,"offset"],[32,90,69,12],[32,92,69,52],[32,97,69,12],[32,102,69,62,"getCharCode"],[32,113,69,73],[32,114,69,74,"offset"],[32,120,69,73],[32,121,69,62],[32,126,69,86],[32,132,69,8],[32,134,69,94],[33,0,71,12,"offset"],[33,8,71,12,"offset"],[33,14,71,18],[33,17,71,21],[33,77,71,39,"source"],[33,83,71,21],[33,85,71,47,"offset"],[33,91,71,53],[33,94,71,56],[33,95,71,21],[33,96,71,12],[35,0,76,12],[35,12,76,16,"getCharCode"],[35,23,76,27],[35,24,76,28,"offset"],[35,30,76,27],[35,31,76,16],[35,36,76,40],[35,42,76,16],[35,46,77,16,"getCharCode"],[35,57,77,27],[35,58,77,28,"offset"],[35,64,77,27],[35,65,77,16],[35,70,77,40],[35,76,76,12],[35,78,77,48],[36,0,78,16,"type"],[36,10,78,16,"type"],[36,14,78,20],[36,17,78,23],[36,64,78,28,"Function"],[36,72,78,16],[37,0,79,16,"offset"],[37,10,79,16,"offset"],[37,16,79,22],[37,19,79,25,"nameStartOffset"],[37,34,79,40],[37,37,79,43],[37,38,79,16],[38,0,80,16],[39,0,81,13],[41,0,84,12,"consumeUrlToken"],[41,8,84,12,"consumeUrlToken"],[41,23,84,27],[42,0,85,12],[43,0,86,9],[45,0,90,8],[45,10,90,12,"getCharCode"],[45,21,90,23],[45,22,90,24,"offset"],[45,28,90,23],[45,29,90,12],[45,34,90,36],[45,40,90,8],[45,42,90,44],[46,0,91,12,"type"],[46,8,91,12,"type"],[46,12,91,16],[46,15,91,19],[46,62,91,24,"Function"],[46,70,91,12],[47,0,92,12,"offset"],[47,8,92,12,"offset"],[47,14,92,18],[48,0,93,12],[49,0,94,9],[51,0,97,8,"type"],[51,6,97,8,"type"],[51,10,97,12],[51,13,97,15],[51,60,97,20,"Ident"],[51,65,97,8],[52,0,98,5],[54,0,101,4],[54,13,101,13,"consumeStringToken"],[54,31,101,4],[54,32,101,32,"endingCodePoint"],[54,47,101,4],[54,49,101,49],[55,0,105,8],[55,10,105,12],[55,11,105,13,"endingCodePoint"],[55,26,105,8],[55,28,105,30],[56,0,106,12,"endingCodePoint"],[56,8,106,12,"endingCodePoint"],[56,23,106,27],[56,26,106,30,"getCharCode"],[56,37,106,41],[56,38,106,42,"offset"],[56,44,106,48],[56,46,106,41],[56,47,106,12],[57,0,107,9],[59,0,110,8,"type"],[59,6,110,8,"type"],[59,10,110,12],[59,13,110,15],[59,60,110,20,"String"],[59,66,110,8],[61,0,113,8],[61,13,113,15,"offset"],[61,19,113,21],[61,22,113,24,"source"],[61,28,113,30],[61,29,113,31,"length"],[61,35,113,8],[61,37,113,39,"offset"],[61,43,113,45],[61,45,113,8],[61,47,113,49],[62,0,114,12],[62,12,114,16,"code"],[62,16,114,20],[62,19,114,23,"source"],[62,25,114,29],[62,26,114,30,"charCodeAt"],[62,36,114,23],[62,37,114,41,"offset"],[62,43,114,23],[62,44,114,12],[64,0,116,12],[64,16,116,20],[64,91,116,37,"code"],[64,95,116,20],[64,96,116,12],[65,0,118,16],[65,15,118,21,"endingCodePoint"],[65,30,118,16],[66,0,120,20,"offset"],[66,12,120,20,"offset"],[66,18,120,26],[67,0,121,20],[69,0,124,16],[69,15,124,21],[69,90,124,38,"Eof"],[69,93,124,16],[70,0,126,20],[72,0,129,16],[72,15,129,21],[72,90,129,38,"WhiteSpace"],[72,100,129,16],[73,0,130,20],[73,16,130,24],[73,84,130,34,"code"],[73,88,130,24],[73,89,130,20],[73,91,130,41],[74,0,133,24,"offset"],[74,14,133,24,"offset"],[74,20,133,30],[74,24,133,34],[74,83,133,51,"source"],[74,89,133,34],[74,91,133,59,"offset"],[74,97,133,34],[74,99,133,67,"code"],[74,103,133,34],[74,104,133,24],[75,0,134,24,"type"],[75,14,134,24,"type"],[75,18,134,28],[75,21,134,31],[75,68,134,36,"BadString"],[75,77,134,24],[76,0,135,24],[77,0,136,21],[79,0,137,20],[81,0,140,16],[81,15,140,21],[81,21,140,16],[82,0,142,20],[82,16,142,24,"offset"],[82,22,142,30],[82,27,142,35,"source"],[82,33,142,41],[82,34,142,42,"length"],[82,40,142,35],[82,43,142,51],[82,44,142,20],[82,46,142,54],[83,0,143,24],[84,0,144,21],[86,0,146,20],[86,16,146,24,"nextCode"],[86,24,146,32],[86,27,146,35,"getCharCode"],[86,38,146,46],[86,39,146,47,"offset"],[86,45,146,53],[86,48,146,56],[86,49,146,46],[86,50,146,20],[88,0,149,20],[88,16,149,24],[88,84,149,34,"nextCode"],[88,92,149,24],[88,93,149,20],[88,95,149,45],[89,0,150,24,"offset"],[89,14,150,24,"offset"],[89,20,150,30],[89,24,150,34],[89,83,150,51,"source"],[89,89,150,34],[89,91,150,59,"offset"],[89,97,150,65],[89,100,150,68],[89,101,150,34],[89,103,150,71,"nextCode"],[89,111,150,34],[89,112,150,24],[90,0,151,21],[90,13,149,20],[90,19,151,27],[90,23,151,31],[90,95,151,45,"code"],[90,99,151,31],[90,101,151,51,"nextCode"],[90,109,151,31],[90,110,151,27],[90,112,151,62],[91,0,155,24,"offset"],[91,14,155,24,"offset"],[91,20,155,30],[91,23,155,33],[91,80,155,48,"source"],[91,86,155,33],[91,88,155,56,"offset"],[91,94,155,33],[91,98,155,66],[91,99,155,24],[92,0,156,21],[94,0,157,20],[95,0,116,12],[96,0,162,9],[97,0,163,5],[99,0,170,4],[99,13,170,13,"consumeUrlToken"],[99,28,170,4],[99,31,170,31],[100,0,172,8,"type"],[100,6,172,8,"type"],[100,10,172,12],[100,13,172,15],[100,60,172,20,"Url"],[100,63,172,8],[101,0,175,8,"offset"],[101,6,175,8,"offset"],[101,12,175,14],[101,15,175,17],[101,75,175,35,"source"],[101,81,175,17],[101,83,175,43,"offset"],[101,89,175,17],[101,90,175,8],[103,0,178,8],[103,13,178,15,"offset"],[103,19,178,21],[103,22,178,24,"source"],[103,28,178,30],[103,29,178,31,"length"],[103,35,178,8],[103,37,178,39,"offset"],[103,43,178,45],[103,45,178,8],[103,47,178,49],[104,0,179,12],[104,12,179,16,"code"],[104,16,179,20],[104,19,179,23,"source"],[104,25,179,29],[104,26,179,30,"charCodeAt"],[104,36,179,23],[104,37,179,41,"offset"],[104,43,179,23],[104,44,179,12],[106,0,181,12],[106,16,181,20],[106,91,181,37,"code"],[106,95,181,20],[106,96,181,12],[107,0,183,16],[107,15,183,21],[107,21,183,16],[108,0,185,20,"offset"],[108,12,185,20,"offset"],[108,18,185,26],[109,0,186,20],[111,0,189,16],[111,15,189,21],[111,90,189,38,"Eof"],[111,93,189,16],[112,0,191,20],[114,0,194,16],[114,15,194,21],[114,90,194,38,"WhiteSpace"],[114,100,194,16],[115,0,196,20,"offset"],[115,12,196,20,"offset"],[115,18,196,26],[115,21,196,29],[115,81,196,47,"source"],[115,87,196,29],[115,89,196,55,"offset"],[115,95,196,29],[115,96,196,20],[117,0,201,20],[117,16,201,24,"getCharCode"],[117,27,201,35],[117,28,201,36,"offset"],[117,34,201,35],[117,35,201,24],[117,40,201,48],[117,46,201,24],[117,50,201,58,"offset"],[117,56,201,64],[117,60,201,68,"source"],[117,66,201,74],[117,67,201,75,"length"],[117,73,201,20],[117,75,201,83],[118,0,202,24],[118,18,202,28,"offset"],[118,24,202,34],[118,27,202,37,"source"],[118,33,202,43],[118,34,202,44,"length"],[118,40,202,24],[118,42,202,52],[119,0,203,28,"offset"],[119,16,203,28,"offset"],[119,22,203,34],[120,0,204,25],[122,0,205,24],[123,0,206,21],[125,0,210,20,"offset"],[125,12,210,20,"offset"],[125,18,210,26],[125,21,210,29],[125,85,210,51,"source"],[125,91,210,29],[125,93,210,59,"offset"],[125,99,210,29],[125,100,210,20],[126,0,211,20,"type"],[126,12,211,20,"type"],[126,16,211,24],[126,19,211,27],[126,66,211,32,"BadUrl"],[126,72,211,20],[127,0,212,20],[129,0,218,16],[129,15,218,21],[129,21,218,16],[130,0,219,16],[130,15,219,21],[130,21,219,16],[131,0,220,16],[131,15,220,21],[131,21,220,16],[132,0,221,16],[132,15,221,21],[132,90,221,38,"NonPrintable"],[132,102,221,16],[133,0,224,20,"offset"],[133,12,224,20,"offset"],[133,18,224,26],[133,21,224,29],[133,85,224,51,"source"],[133,91,224,29],[133,93,224,59,"offset"],[133,99,224,29],[133,100,224,20],[134,0,225,20,"type"],[134,12,225,20,"type"],[134,16,225,24],[134,19,225,27],[134,66,225,32,"BadUrl"],[134,72,225,20],[135,0,226,20],[137,0,229,16],[137,15,229,21],[137,21,229,16],[138,0,232,20],[138,16,232,24],[138,88,232,38,"code"],[138,92,232,24],[138,94,232,44,"getCharCode"],[138,105,232,55],[138,106,232,56,"offset"],[138,112,232,62],[138,115,232,65],[138,116,232,55],[138,117,232,24],[138,118,232,20],[138,120,232,70],[139,0,233,24,"offset"],[139,14,233,24,"offset"],[139,20,233,30],[139,23,233,33],[139,80,233,48,"source"],[139,86,233,33],[139,88,233,56,"offset"],[139,94,233,33],[139,98,233,66],[139,99,233,24],[140,0,234,24],[141,0,235,21],[143,0,239,20,"offset"],[143,12,239,20,"offset"],[143,18,239,26],[143,21,239,29],[143,85,239,51,"source"],[143,91,239,29],[143,93,239,59,"offset"],[143,99,239,29],[143,100,239,20],[144,0,240,20,"type"],[144,12,240,20,"type"],[144,16,240,24],[144,19,240,27],[144,66,240,32,"BadUrl"],[144,72,240,20],[145,0,241,20],[146,0,181,12],[147,0,246,9],[148,0,247,5],[150,0,249,4],[150,8,249,8],[150,9,249,9,"stream"],[150,15,249,4],[150,17,249,17],[151,0,250,8,"stream"],[151,6,250,8,"stream"],[151,12,250,14],[151,15,250,17],[151,78,250,8],[152,0,251,5],[154,0,254,4,"source"],[154,4,254,4,"source"],[154,10,254,10],[154,13,254,13,"String"],[154,19,254,19],[154,20,254,20,"source"],[154,26,254,26],[154,30,254,30],[154,32,254,19],[154,33,254,4],[155,0,256,4],[155,8,256,8,"sourceLength"],[155,20,256,20],[155,23,256,23,"source"],[155,29,256,29],[155,30,256,30,"length"],[155,36,256,4],[157,0,257,4],[157,8,257,8,"offsetAndType"],[157,21,257,21],[157,24,257,24],[157,81,257,36,"stream"],[157,87,257,42],[157,88,257,43,"offsetAndType"],[157,101,257,24],[157,103,257,58,"sourceLength"],[157,115,257,70],[157,118,257,73],[157,119,257,24],[157,120,257,4],[159,0,258,4],[159,8,258,8,"balance"],[159,15,258,15],[159,18,258,18],[159,75,258,30,"stream"],[159,81,258,36],[159,82,258,37,"balance"],[159,89,258,18],[159,91,258,46,"sourceLength"],[159,103,258,58],[159,106,258,61],[159,107,258,18],[159,108,258,4],[161,0,259,4],[161,8,259,8,"tokenCount"],[161,18,259,18],[161,21,259,21],[161,22,259,4],[163,0,260,4],[163,8,260,8,"start"],[163,13,260,13],[163,16,260,16],[163,80,260,22,"getCharCode"],[163,91,260,33],[163,92,260,34],[163,93,260,33],[163,94,260,16],[163,95,260,4],[165,0,261,4],[165,8,261,8,"offset"],[165,14,261,14],[165,17,261,17,"start"],[165,22,261,4],[166,0,262,4],[166,8,262,8,"balanceCloseType"],[166,24,262,24],[166,27,262,27],[166,28,262,4],[167,0,263,4],[167,8,263,8,"balanceStart"],[167,20,263,20],[167,23,263,23],[167,24,263,4],[168,0,264,4],[168,8,264,8,"balancePrev"],[168,19,264,19],[168,22,264,22],[168,23,264,4],[170,0,268,4],[170,11,268,11,"offset"],[170,17,268,17],[170,20,268,20,"sourceLength"],[170,32,268,4],[170,34,268,34],[171,0,269,8],[171,10,269,12,"code"],[171,14,269,16],[171,17,269,19,"source"],[171,23,269,25],[171,24,269,26,"charCodeAt"],[171,34,269,19],[171,35,269,37,"offset"],[171,41,269,19],[171,42,269,8],[172,0,270,8],[172,10,270,12,"type"],[172,14,270,16],[172,17,270,19],[172,18,270,8],[173,0,272,8,"balance"],[173,6,272,8,"balance"],[173,13,272,15],[173,14,272,16,"tokenCount"],[173,24,272,15],[173,25,272,8],[173,28,272,30,"sourceLength"],[173,40,272,8],[175,0,274,8],[175,14,274,16],[175,89,274,33,"code"],[175,93,274,16],[175,94,274,8],[176,0,276,12],[176,13,276,17],[176,88,276,34,"WhiteSpace"],[176,98,276,12],[177,0,278,16,"type"],[177,10,278,16,"type"],[177,14,278,20],[177,17,278,23],[177,64,278,28,"WhiteSpace"],[177,74,278,16],[178,0,279,16,"offset"],[178,10,279,16,"offset"],[178,16,279,22],[178,19,279,25],[178,79,279,43,"source"],[178,85,279,25],[178,87,279,51,"offset"],[178,93,279,57],[178,96,279,60],[178,97,279,25],[178,98,279,16],[179,0,280,16],[181,0,283,12],[181,13,283,17],[181,19,283,12],[182,0,285,16,"consumeStringToken"],[182,10,285,16,"consumeStringToken"],[182,28,285,34],[183,0,286,16],[185,0,289,12],[185,13,289,17],[185,19,289,12],[186,0,291,16],[186,14,291,20],[186,79,291,27,"getCharCode"],[186,90,291,38],[186,91,291,39,"offset"],[186,97,291,45],[186,100,291,48],[186,101,291,38],[186,102,291,20],[186,107,291,55],[186,179,291,69,"getCharCode"],[186,190,291,80],[186,191,291,81,"offset"],[186,197,291,87],[186,200,291,90],[186,201,291,80],[186,202,291,55],[186,204,291,94,"getCharCode"],[186,215,291,105],[186,216,291,106,"offset"],[186,222,291,112],[186,225,291,115],[186,226,291,105],[186,227,291,55],[186,228,291,16],[186,230,291,120],[187,0,293,20,"type"],[187,12,293,20,"type"],[187,16,293,24],[187,19,293,27],[187,66,293,32,"Hash"],[187,70,293,20],[188,0,301,20,"offset"],[188,12,301,20,"offset"],[188,18,301,26],[188,21,301,29],[188,75,301,41,"source"],[188,81,301,29],[188,83,301,49,"offset"],[188,89,301,55],[188,92,301,58],[188,93,301,29],[188,94,301,20],[189,0,304,17],[189,11,291,16],[189,17,304,23],[190,0,306,20,"type"],[190,12,306,20,"type"],[190,16,306,24],[190,19,306,27],[190,66,306,32,"Delim"],[190,71,306,20],[191,0,307,20,"offset"],[191,12,307,20,"offset"],[191,18,307,26],[192,0,308,17],[194,0,310,16],[196,0,313,12],[196,13,313,17],[196,19,313,12],[197,0,315,16,"consumeStringToken"],[197,10,315,16,"consumeStringToken"],[197,28,315,34],[198,0,316,16],[200,0,319,12],[200,13,319,17],[200,19,319,12],[201,0,321,16,"type"],[201,10,321,16,"type"],[201,14,321,20],[201,17,321,23],[201,64,321,28,"LeftParenthesis"],[201,79,321,16],[202,0,322,16,"offset"],[202,10,322,16,"offset"],[202,16,322,22],[203,0,323,16],[205,0,326,12],[205,13,326,17],[205,19,326,12],[206,0,328,16,"type"],[206,10,328,16,"type"],[206,14,328,20],[206,17,328,23],[206,64,328,28,"RightParenthesis"],[206,80,328,16],[207,0,329,16,"offset"],[207,10,329,16,"offset"],[207,16,329,22],[208,0,330,16],[210,0,333,12],[210,13,333,17],[210,19,333,12],[211,0,335,16],[211,14,335,20],[211,86,335,34,"code"],[211,90,335,20],[211,92,335,40,"getCharCode"],[211,103,335,51],[211,104,335,52,"offset"],[211,110,335,58],[211,113,335,61],[211,114,335,51],[211,115,335,20],[211,117,335,65,"getCharCode"],[211,128,335,76],[211,129,335,77,"offset"],[211,135,335,83],[211,138,335,86],[211,139,335,76],[211,140,335,20],[211,141,335,16],[211,143,335,91],[212,0,337,20,"consumeNumericToken"],[212,12,337,20,"consumeNumericToken"],[212,31,337,39],[213,0,338,17],[213,11,335,16],[213,17,338,23],[214,0,340,20,"type"],[214,12,340,20,"type"],[214,16,340,24],[214,19,340,27],[214,66,340,32,"Delim"],[214,71,340,20],[215,0,341,20,"offset"],[215,12,341,20,"offset"],[215,18,341,26],[216,0,342,17],[218,0,343,16],[220,0,346,12],[220,13,346,17],[220,19,346,12],[221,0,348,16,"type"],[221,10,348,16,"type"],[221,14,348,20],[221,17,348,23],[221,64,348,28,"Comma"],[221,69,348,16],[222,0,349,16,"offset"],[222,10,349,16,"offset"],[222,16,349,22],[223,0,350,16],[225,0,353,12],[225,13,353,17],[225,19,353,12],[226,0,355,16],[226,14,355,20],[226,86,355,34,"code"],[226,90,355,20],[226,92,355,40,"getCharCode"],[226,103,355,51],[226,104,355,52,"offset"],[226,110,355,58],[226,113,355,61],[226,114,355,51],[226,115,355,20],[226,117,355,65,"getCharCode"],[226,128,355,76],[226,129,355,77,"offset"],[226,135,355,83],[226,138,355,86],[226,139,355,76],[226,140,355,20],[226,141,355,16],[226,143,355,91],[227,0,356,20,"consumeNumericToken"],[227,12,356,20,"consumeNumericToken"],[227,31,356,39],[228,0,357,17],[228,11,355,16],[228,17,357,23],[229,0,359,20],[229,16,359,24,"getCharCode"],[229,27,359,35],[229,28,359,36,"offset"],[229,34,359,42],[229,37,359,45],[229,38,359,35],[229,39,359,24],[229,44,359,52],[229,50,359,24],[229,54,360,24,"getCharCode"],[229,65,360,35],[229,66,360,36,"offset"],[229,72,360,42],[229,75,360,45],[229,76,360,35],[229,77,360,24],[229,82,360,52],[229,88,359,20],[229,90,360,60],[230,0,361,24,"type"],[230,14,361,24,"type"],[230,18,361,28],[230,21,361,31],[230,68,361,36,"CDC"],[230,71,361,24],[231,0,362,24,"offset"],[231,14,362,24,"offset"],[231,20,362,30],[231,23,362,33,"offset"],[231,29,362,39],[231,32,362,42],[231,33,362,24],[232,0,363,21],[232,13,359,20],[232,19,363,27],[233,0,365,24],[233,18,365,28],[233,94,365,46,"code"],[233,98,365,28],[233,100,365,52,"getCharCode"],[233,111,365,63],[233,112,365,64,"offset"],[233,118,365,70],[233,121,365,73],[233,122,365,63],[233,123,365,28],[233,125,365,77,"getCharCode"],[233,136,365,88],[233,137,365,89,"offset"],[233,143,365,95],[233,146,365,98],[233,147,365,88],[233,148,365,28],[233,149,365,24],[233,151,365,103],[234,0,367,28,"consumeIdentLikeToken"],[234,16,367,28,"consumeIdentLikeToken"],[234,37,367,49],[235,0,368,25],[235,15,365,24],[235,21,368,31],[236,0,370,28,"type"],[236,16,370,28,"type"],[236,20,370,32],[236,23,370,35],[236,70,370,40,"Delim"],[236,75,370,28],[237,0,371,28,"offset"],[237,16,371,28,"offset"],[237,22,371,34],[238,0,372,25],[239,0,373,21],[240,0,374,17],[242,0,375,16],[244,0,378,12],[244,13,378,17],[244,19,378,12],[245,0,380,16],[245,14,380,20],[245,86,380,34,"code"],[245,90,380,20],[245,92,380,40,"getCharCode"],[245,103,380,51],[245,104,380,52,"offset"],[245,110,380,58],[245,113,380,61],[245,114,380,51],[245,115,380,20],[245,117,380,65,"getCharCode"],[245,128,380,76],[245,129,380,77,"offset"],[245,135,380,83],[245,138,380,86],[245,139,380,76],[245,140,380,20],[245,141,380,16],[245,143,380,91],[246,0,382,20,"consumeNumericToken"],[246,12,382,20,"consumeNumericToken"],[246,31,382,39],[247,0,383,17],[247,11,380,16],[247,17,383,23],[248,0,385,20,"type"],[248,12,385,20,"type"],[248,16,385,24],[248,19,385,27],[248,66,385,32,"Delim"],[248,71,385,20],[249,0,386,20,"offset"],[249,12,386,20,"offset"],[249,18,386,26],[250,0,387,17],[252,0,389,16],[254,0,392,12],[254,13,392,17],[254,19,392,12],[255,0,394,16],[255,14,394,20,"getCharCode"],[255,25,394,31],[255,26,394,32,"offset"],[255,32,394,38],[255,35,394,41],[255,36,394,31],[255,37,394,20],[255,42,394,48],[255,48,394,16],[255,50,394,56],[256,0,397,20,"type"],[256,12,397,20,"type"],[256,16,397,24],[256,19,397,27],[256,66,397,32,"Comment"],[256,73,397,20],[257,0,398,20,"offset"],[257,12,398,20,"offset"],[257,18,398,26],[257,21,398,29,"source"],[257,27,398,35],[257,28,398,36,"indexOf"],[257,35,398,29],[257,36,398,44],[257,40,398,29],[257,42,398,50,"offset"],[257,48,398,56],[257,51,398,59],[257,52,398,29],[257,56,398,64],[257,57,398,20],[259,0,399,20],[259,16,399,24,"offset"],[259,22,399,30],[259,27,399,35],[259,28,399,20],[259,30,399,38],[260,0,400,24,"offset"],[260,14,400,24,"offset"],[260,20,400,30],[260,23,400,33,"source"],[260,29,400,39],[260,30,400,40,"length"],[260,36,400,24],[261,0,401,21],[262,0,402,17],[262,11,394,16],[262,17,402,23],[263,0,403,20,"type"],[263,12,403,20,"type"],[263,16,403,24],[263,19,403,27],[263,66,403,32,"Delim"],[263,71,403,20],[264,0,404,20,"offset"],[264,12,404,20,"offset"],[264,18,404,26],[265,0,405,17],[267,0,406,16],[269,0,409,12],[269,13,409,17],[269,19,409,12],[270,0,411,16,"type"],[270,10,411,16,"type"],[270,14,411,20],[270,17,411,23],[270,64,411,28,"Colon"],[270,69,411,16],[271,0,412,16,"offset"],[271,10,412,16,"offset"],[271,16,412,22],[272,0,413,16],[274,0,416,12],[274,13,416,17],[274,19,416,12],[275,0,418,16,"type"],[275,10,418,16,"type"],[275,14,418,20],[275,17,418,23],[275,64,418,28,"Semicolon"],[275,73,418,16],[276,0,419,16,"offset"],[276,10,419,16,"offset"],[276,16,419,22],[277,0,420,16],[279,0,423,12],[279,13,423,17],[279,19,423,12],[280,0,425,16],[280,14,425,20,"getCharCode"],[280,25,425,31],[280,26,425,32,"offset"],[280,32,425,38],[280,35,425,41],[280,36,425,31],[280,37,425,20],[280,42,425,48],[280,48,425,20],[280,52,426,20,"getCharCode"],[280,63,426,31],[280,64,426,32,"offset"],[280,70,426,38],[280,73,426,41],[280,74,426,31],[280,75,426,20],[280,80,426,48],[280,86,425,20],[280,90,427,20,"getCharCode"],[280,101,427,31],[280,102,427,32,"offset"],[280,108,427,38],[280,111,427,41],[280,112,427,31],[280,113,427,20],[280,118,427,48],[280,124,425,16],[280,126,427,56],[281,0,429,20,"type"],[281,12,429,20,"type"],[281,16,429,24],[281,19,429,27],[281,66,429,32,"CDO"],[281,69,429,20],[282,0,430,20,"offset"],[282,12,430,20,"offset"],[282,18,430,26],[282,21,430,29,"offset"],[282,27,430,35],[282,30,430,38],[282,31,430,20],[283,0,431,17],[283,11,425,16],[283,17,431,23],[284,0,433,20,"type"],[284,12,433,20,"type"],[284,16,433,24],[284,19,433,27],[284,66,433,32,"Delim"],[284,71,433,20],[285,0,434,20,"offset"],[285,12,434,20,"offset"],[285,18,434,26],[286,0,435,17],[288,0,437,16],[290,0,440,12],[290,13,440,17],[290,19,440,12],[291,0,442,16],[291,14,442,20],[291,90,442,38,"getCharCode"],[291,101,442,49],[291,102,442,50,"offset"],[291,108,442,56],[291,111,442,59],[291,112,442,49],[291,113,442,20],[291,115,442,63,"getCharCode"],[291,126,442,74],[291,127,442,75,"offset"],[291,133,442,81],[291,136,442,84],[291,137,442,74],[291,138,442,20],[291,140,442,88,"getCharCode"],[291,151,442,99],[291,152,442,100,"offset"],[291,158,442,106],[291,161,442,109],[291,162,442,99],[291,163,442,20],[291,164,442,16],[291,166,442,114],[292,0,444,20,"type"],[292,12,444,20,"type"],[292,16,444,24],[292,19,444,27],[292,66,444,32,"AtKeyword"],[292,75,444,20],[293,0,445,20,"offset"],[293,12,445,20,"offset"],[293,18,445,26],[293,21,445,29],[293,75,445,41,"source"],[293,81,445,29],[293,83,445,49,"offset"],[293,89,445,55],[293,92,445,58],[293,93,445,29],[293,94,445,20],[294,0,446,17],[294,11,442,16],[294,17,446,23],[295,0,448,20,"type"],[295,12,448,20,"type"],[295,16,448,24],[295,19,448,27],[295,66,448,32,"Delim"],[295,71,448,20],[296,0,449,20,"offset"],[296,12,449,20,"offset"],[296,18,449,26],[297,0,450,17],[299,0,452,16],[301,0,455,12],[301,13,455,17],[301,19,455,12],[302,0,457,16,"type"],[302,10,457,16,"type"],[302,14,457,20],[302,17,457,23],[302,64,457,28,"LeftSquareBracket"],[302,81,457,16],[303,0,458,16,"offset"],[303,10,458,16,"offset"],[303,16,458,22],[304,0,459,16],[306,0,462,12],[306,13,462,17],[306,19,462,12],[307,0,464,16],[307,14,464,20],[307,86,464,34,"code"],[307,90,464,20],[307,92,464,40,"getCharCode"],[307,103,464,51],[307,104,464,52,"offset"],[307,110,464,58],[307,113,464,61],[307,114,464,51],[307,115,464,20],[307,116,464,16],[307,118,464,66],[308,0,466,20,"consumeIdentLikeToken"],[308,12,466,20,"consumeIdentLikeToken"],[308,33,466,41],[309,0,467,17],[309,11,464,16],[309,17,467,23],[310,0,469,20,"type"],[310,12,469,20,"type"],[310,16,469,24],[310,19,469,27],[310,66,469,32,"Delim"],[310,71,469,20],[311,0,470,20,"offset"],[311,12,470,20,"offset"],[311,18,470,26],[312,0,471,17],[314,0,472,16],[316,0,475,12],[316,13,475,17],[316,19,475,12],[317,0,477,16,"type"],[317,10,477,16,"type"],[317,14,477,20],[317,17,477,23],[317,64,477,28,"RightSquareBracket"],[317,82,477,16],[318,0,478,16,"offset"],[318,10,478,16,"offset"],[318,16,478,22],[319,0,479,16],[321,0,482,12],[321,13,482,17],[321,19,482,12],[322,0,484,16,"type"],[322,10,484,16,"type"],[322,14,484,20],[322,17,484,23],[322,64,484,28,"LeftCurlyBracket"],[322,80,484,16],[323,0,485,16,"offset"],[323,10,485,16,"offset"],[323,16,485,22],[324,0,486,16],[326,0,489,12],[326,13,489,17],[326,19,489,12],[327,0,491,16,"type"],[327,10,491,16,"type"],[327,14,491,20],[327,17,491,23],[327,64,491,28,"RightCurlyBracket"],[327,81,491,16],[328,0,492,16,"offset"],[328,10,492,16,"offset"],[328,16,492,22],[329,0,493,16],[331,0,496,12],[331,13,496,17],[331,88,496,34,"Digit"],[331,93,496,12],[332,0,498,16,"consumeNumericToken"],[332,10,498,16,"consumeNumericToken"],[332,29,498,35],[333,0,499,16],[335,0,502,12],[335,13,502,17],[335,88,502,34,"NameStart"],[335,97,502,12],[336,0,504,16,"consumeIdentLikeToken"],[336,10,504,16,"consumeIdentLikeToken"],[336,31,504,37],[337,0,505,16],[339,0,508,12],[339,13,508,17],[339,88,508,34,"Eof"],[339,91,508,12],[340,0,510,16],[342,0,513,12],[343,0,515,16,"type"],[343,10,515,16,"type"],[343,14,515,20],[343,17,515,23],[343,64,515,28,"Delim"],[343,69,515,16],[344,0,516,16,"offset"],[344,10,516,16,"offset"],[344,16,516,22],[345,0,274,8],[347,0,519,8],[347,14,519,16,"type"],[347,18,519,8],[348,0,520,12],[348,13,520,17,"balanceCloseType"],[348,29,520,12],[349,0,521,16,"balancePrev"],[349,10,521,16,"balancePrev"],[349,21,521,27],[349,24,521,30,"balanceStart"],[349,36,521,42],[349,39,521,45,"OFFSET_MASK"],[349,50,521,16],[350,0,522,16,"balanceStart"],[350,10,522,16,"balanceStart"],[350,22,522,28],[350,25,522,31,"balance"],[350,32,522,38],[350,33,522,39,"balancePrev"],[350,44,522,38],[350,45,522,16],[351,0,523,16,"balanceCloseType"],[351,10,523,16,"balanceCloseType"],[351,26,523,32],[351,29,523,35,"balanceStart"],[351,41,523,47],[351,45,523,51,"TYPE_SHIFT"],[351,55,523,16],[352,0,524,16,"balance"],[352,10,524,16,"balance"],[352,17,524,23],[352,18,524,24,"tokenCount"],[352,28,524,23],[352,29,524,16],[352,32,524,38,"balancePrev"],[352,43,524,16],[353,0,525,16,"balance"],[353,10,525,16,"balance"],[353,17,525,23],[353,18,525,24,"balancePrev"],[353,29,525,35],[353,31,525,23],[353,32,525,16],[353,35,525,41,"tokenCount"],[353,45,525,16],[355,0,526,16],[355,17,526,23,"balancePrev"],[355,28,526,34],[355,31,526,37,"tokenCount"],[355,41,526,16],[355,43,526,49,"balancePrev"],[355,54,526,60],[355,56,526,16],[355,58,526,64],[356,0,527,20],[356,16,527,24,"balance"],[356,23,527,31],[356,24,527,32,"balancePrev"],[356,35,527,31],[356,36,527,24],[356,41,527,49,"sourceLength"],[356,53,527,20],[356,55,527,63],[357,0,528,24,"balance"],[357,14,528,24,"balance"],[357,21,528,31],[357,22,528,32,"balancePrev"],[357,33,528,31],[357,34,528,24],[357,37,528,47,"tokenCount"],[357,47,528,24],[358,0,529,21],[359,0,530,17],[361,0,531,16],[363,0,533,12],[363,13,533,17],[363,60,533,22,"LeftParenthesis"],[363,75,533,12],[364,0,534,12],[364,13,534,17],[364,60,534,22,"Function"],[364,68,534,12],[365,0,535,16,"balance"],[365,10,535,16,"balance"],[365,17,535,23],[365,18,535,24,"tokenCount"],[365,28,535,23],[365,29,535,16],[365,32,535,38,"balanceStart"],[365,44,535,16],[366,0,536,16,"balanceCloseType"],[366,10,536,16,"balanceCloseType"],[366,26,536,32],[366,29,536,35],[366,76,536,40,"RightParenthesis"],[366,92,536,16],[367,0,537,16,"balanceStart"],[367,10,537,16,"balanceStart"],[367,22,537,28],[367,25,537,32,"balanceCloseType"],[367,41,537,48],[367,45,537,52,"TYPE_SHIFT"],[367,55,537,31],[367,58,537,66,"tokenCount"],[367,68,537,16],[368,0,538,16],[370,0,540,12],[370,13,540,17],[370,60,540,22,"LeftSquareBracket"],[370,77,540,12],[371,0,541,16,"balance"],[371,10,541,16,"balance"],[371,17,541,23],[371,18,541,24,"tokenCount"],[371,28,541,23],[371,29,541,16],[371,32,541,38,"balanceStart"],[371,44,541,16],[372,0,542,16,"balanceCloseType"],[372,10,542,16,"balanceCloseType"],[372,26,542,32],[372,29,542,35],[372,76,542,40,"RightSquareBracket"],[372,94,542,16],[373,0,543,16,"balanceStart"],[373,10,543,16,"balanceStart"],[373,22,543,28],[373,25,543,32,"balanceCloseType"],[373,41,543,48],[373,45,543,52,"TYPE_SHIFT"],[373,55,543,31],[373,58,543,66,"tokenCount"],[373,68,543,16],[374,0,544,16],[376,0,546,12],[376,13,546,17],[376,60,546,22,"LeftCurlyBracket"],[376,76,546,12],[377,0,547,16,"balance"],[377,10,547,16,"balance"],[377,17,547,23],[377,18,547,24,"tokenCount"],[377,28,547,23],[377,29,547,16],[377,32,547,38,"balanceStart"],[377,44,547,16],[378,0,548,16,"balanceCloseType"],[378,10,548,16,"balanceCloseType"],[378,26,548,32],[378,29,548,35],[378,76,548,40,"RightCurlyBracket"],[378,93,548,16],[379,0,549,16,"balanceStart"],[379,10,549,16,"balanceStart"],[379,22,549,28],[379,25,549,32,"balanceCloseType"],[379,41,549,48],[379,45,549,52,"TYPE_SHIFT"],[379,55,549,31],[379,58,549,66,"tokenCount"],[379,68,549,16],[380,0,550,16],[381,0,519,8],[383,0,553,8,"offsetAndType"],[383,6,553,8,"offsetAndType"],[383,19,553,21],[383,20,553,22,"tokenCount"],[383,30,553,32],[383,32,553,21],[383,33,553,8],[383,36,553,39,"type"],[383,40,553,43],[383,44,553,47,"TYPE_SHIFT"],[383,54,553,38],[383,57,553,61,"offset"],[383,63,553,8],[384,0,554,5],[386,0,557,4,"offsetAndType"],[386,4,557,4,"offsetAndType"],[386,17,557,17],[386,18,557,18,"tokenCount"],[386,28,557,17],[386,29,557,4],[386,32,557,33],[386,79,557,38,"EOF"],[386,82,557,33],[386,86,557,45,"TYPE_SHIFT"],[386,96,557,32],[386,99,557,59,"offset"],[386,105,557,4],[387,0,558,4,"balance"],[387,4,558,4,"balance"],[387,11,558,11],[387,12,558,12,"tokenCount"],[387,22,558,11],[387,23,558,4],[387,26,558,26,"sourceLength"],[387,38,558,4],[388,0,559,4,"balance"],[388,4,559,4,"balance"],[388,11,559,11],[388,12,559,12,"sourceLength"],[388,24,559,11],[388,25,559,4],[388,28,559,28,"sourceLength"],[388,40,559,4],[390,0,560,4],[390,11,560,11,"balanceStart"],[390,23,560,23],[390,28,560,28],[390,29,560,4],[390,31,560,31],[391,0,561,8,"balancePrev"],[391,6,561,8,"balancePrev"],[391,17,561,19],[391,20,561,22,"balanceStart"],[391,32,561,34],[391,35,561,37,"OFFSET_MASK"],[391,46,561,8],[392,0,562,8,"balanceStart"],[392,6,562,8,"balanceStart"],[392,18,562,20],[392,21,562,23,"balance"],[392,28,562,30],[392,29,562,31,"balancePrev"],[392,40,562,30],[392,41,562,8],[393,0,563,8,"balance"],[393,6,563,8,"balance"],[393,13,563,15],[393,14,563,16,"balancePrev"],[393,25,563,15],[393,26,563,8],[393,29,563,31,"sourceLength"],[393,41,563,8],[394,0,564,5],[396,0,567,4,"stream"],[396,4,567,4,"stream"],[396,10,567,10],[396,11,567,11,"source"],[396,17,567,4],[396,20,567,20,"source"],[396,26,567,4],[397,0,568,4,"stream"],[397,4,568,4,"stream"],[397,10,568,10],[397,11,568,11,"firstCharOffset"],[397,26,568,4],[397,29,568,29,"start"],[397,34,568,4],[398,0,569,4,"stream"],[398,4,569,4,"stream"],[398,10,569,10],[398,11,569,11,"offsetAndType"],[398,24,569,4],[398,27,569,27,"offsetAndType"],[398,40,569,4],[399,0,570,4,"stream"],[399,4,570,4,"stream"],[399,10,570,10],[399,11,570,11,"tokenCount"],[399,21,570,4],[399,24,570,24,"tokenCount"],[399,34,570,4],[400,0,571,4,"stream"],[400,4,571,4,"stream"],[400,10,571,10],[400,11,571,11,"balance"],[400,18,571,4],[400,21,571,21,"balance"],[400,28,571,4],[401,0,572,4,"stream"],[401,4,572,4,"stream"],[401,10,572,10],[401,11,572,11,"reset"],[401,16,572,4],[402,0,573,4,"stream"],[402,4,573,4,"stream"],[402,10,573,10],[402,11,573,11,"next"],[402,15,573,4],[403,0,575,4],[403,11,575,11,"stream"],[403,17,575,4],[404,0,576,1],[406,0,579,0,"Object"],[406,2,579,0,"Object"],[406,8,579,6],[406,9,579,7,"keys"],[406,13,579,0],[406,57,579,23,"forEach"],[406,64,579,0],[406,65,579,31],[406,75,579,40,"key"],[406,78,579,31],[406,80,579,45],[407,0,580,4,"tokenize"],[407,4,580,4,"tokenize"],[407,12,580,12],[407,13,580,13,"key"],[407,16,580,12],[407,17,580,4],[407,20,580,20],[407,62,580,30,"key"],[407,65,580,20],[407,66,580,4],[408,0,581,1],[408,3,579,0],[409,0,584,0,"Object"],[409,2,584,0,"Object"],[409,8,584,6],[409,9,584,7,"keys"],[409,13,584,0],[409,73,584,33,"forEach"],[409,80,584,0],[409,81,584,41],[409,91,584,50,"key"],[409,94,584,41],[409,96,584,55],[410,0,585,4,"tokenize"],[410,4,585,4,"tokenize"],[410,12,585,12],[410,13,585,13,"key"],[410,16,585,12],[410,17,585,4],[410,20,585,20],[410,78,585,40,"key"],[410,81,585,20],[410,82,585,4],[411,0,586,1],[411,3,584,0],[412,0,587,0,"Object"],[412,2,587,0,"Object"],[412,8,587,6],[412,9,587,7,"keys"],[412,13,587,0],[412,57,587,19,"forEach"],[412,64,587,0],[412,65,587,27],[412,75,587,36,"key"],[412,78,587,27],[412,80,587,41],[413,0,588,4,"tokenize"],[413,4,588,4,"tokenize"],[413,12,588,12],[413,13,588,13,"key"],[413,16,588,12],[413,17,588,4],[413,20,588,20],[413,62,588,26,"key"],[413,65,588,20],[413,66,588,4],[414,0,589,1],[414,3,587,0],[415,0,591,0,"module"],[415,2,591,0,"module"],[415,8,591,6],[415,9,591,7,"exports"],[415,16,591,0],[415,19,591,17,"tokenize"],[415,27,591,0]],"functionMap":{"names":["<global>","tokenize","getCharCode","consumeNumericToken","consumeIdentLikeToken","consumeStringToken","consumeUrlToken","Object.keys.forEach$argument_0"],"mappings":"AAA;AC2B;ICC;KDE;IEG;KFwB;IGG;KHqC;IIG;KJ8D;IKO;KL6E;CDyU;+BOG;CPE;yCOG;CPE;2BOC;CPE"}},"type":"js/module"}]}