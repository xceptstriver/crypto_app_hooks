{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0},"end":{"line":23,"column":58}}]}},{"name":"../core/InternalAnimatedValue","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0},"end":{"line":23,"column":58}}]}},{"name":"../base","data":{"asyncType":null,"locs":[{"start":{"line":28,"column":19},"end":{"line":28,"column":23},"identifierName":"cond"},{"start":{"line":30,"column":20},"end":{"line":30,"column":23},"identifierName":"min"},{"start":{"line":30,"column":24},"end":{"line":30,"column":27},"identifierName":"sub"},{"start":{"line":36,"column":13},"end":{"line":36,"column":21},"identifierName":"multiply"},{"start":{"line":37,"column":13},"end":{"line":37,"column":16},"identifierName":"sub"},{"start":{"line":39,"column":15},"end":{"line":39,"column":21},"identifierName":"divide"},{"start":{"line":39,"column":25},"end":{"line":39,"column":33},"identifierName":"multiply"},{"start":{"line":39,"column":37},"end":{"line":39,"column":41},"identifierName":"sqrt"},{"start":{"line":39,"column":42},"end":{"line":39,"column":50},"identifierName":"multiply"},{"start":{"line":40,"column":17},"end":{"line":40,"column":21},"identifierName":"sqrt"},{"start":{"line":40,"column":22},"end":{"line":40,"column":28},"identifierName":"divide"},{"start":{"line":41,"column":17},"end":{"line":41,"column":25},"identifierName":"multiply"},{"start":{"line":41,"column":34},"end":{"line":41,"column":38},"identifierName":"sqrt"},{"start":{"line":41,"column":39},"end":{"line":41,"column":42},"identifierName":"sub"},{"start":{"line":41,"column":46},"end":{"line":41,"column":54},"identifierName":"multiply"},{"start":{"line":43,"column":12},"end":{"line":43,"column":18},"identifierName":"divide"},{"start":{"line":45,"column":15},"end":{"line":45,"column":18},"identifierName":"sin"},{"start":{"line":45,"column":19},"end":{"line":45,"column":27},"identifierName":"multiply"},{"start":{"line":46,"column":15},"end":{"line":46,"column":18},"identifierName":"cos"},{"start":{"line":46,"column":19},"end":{"line":46,"column":27},"identifierName":"multiply"},{"start":{"line":49,"column":30},"end":{"line":49,"column":33},"identifierName":"exp"},{"start":{"line":49,"column":34},"end":{"line":49,"column":42},"identifierName":"multiply"},{"start":{"line":50,"column":27},"end":{"line":50,"column":35},"identifierName":"multiply"},{"start":{"line":52,"column":4},"end":{"line":52,"column":7},"identifierName":"add"},{"start":{"line":53,"column":6},"end":{"line":53,"column":14},"identifierName":"multiply"},{"start":{"line":53,"column":21},"end":{"line":53,"column":27},"identifierName":"divide"},{"start":{"line":53,"column":28},"end":{"line":53,"column":31},"identifierName":"add"},{"start":{"line":53,"column":36},"end":{"line":53,"column":44},"identifierName":"multiply"},{"start":{"line":54,"column":6},"end":{"line":54,"column":14},"identifierName":"multiply"},{"start":{"line":57,"column":30},"end":{"line":57,"column":33},"identifierName":"sub"},{"start":{"line":59,"column":30},"end":{"line":59,"column":33},"identifierName":"sub"},{"start":{"line":60,"column":4},"end":{"line":60,"column":12},"identifierName":"multiply"},{"start":{"line":61,"column":4},"end":{"line":61,"column":12},"identifierName":"multiply"},{"start":{"line":63,"column":6},"end":{"line":63,"column":9},"identifierName":"sub"},{"start":{"line":64,"column":8},"end":{"line":64,"column":16},"identifierName":"multiply"},{"start":{"line":64,"column":23},"end":{"line":64,"column":26},"identifierName":"add"},{"start":{"line":64,"column":31},"end":{"line":64,"column":39},"identifierName":"multiply"},{"start":{"line":65,"column":8},"end":{"line":65,"column":16},"identifierName":"multiply"},{"start":{"line":71,"column":35},"end":{"line":71,"column":38},"identifierName":"exp"},{"start":{"line":71,"column":39},"end":{"line":71,"column":47},"identifierName":"multiply"},{"start":{"line":72,"column":35},"end":{"line":72,"column":38},"identifierName":"sub"},{"start":{"line":74,"column":4},"end":{"line":74,"column":12},"identifierName":"multiply"},{"start":{"line":76,"column":6},"end":{"line":76,"column":9},"identifierName":"add"},{"start":{"line":76,"column":14},"end":{"line":76,"column":22},"identifierName":"multiply"},{"start":{"line":76,"column":23},"end":{"line":76,"column":26},"identifierName":"add"},{"start":{"line":76,"column":31},"end":{"line":76,"column":39},"identifierName":"multiply"},{"start":{"line":79,"column":35},"end":{"line":79,"column":43},"identifierName":"multiply"},{"start":{"line":81,"column":4},"end":{"line":81,"column":7},"identifierName":"add"},{"start":{"line":82,"column":6},"end":{"line":82,"column":14},"identifierName":"multiply"},{"start":{"line":82,"column":19},"end":{"line":82,"column":22},"identifierName":"sub"},{"start":{"line":82,"column":23},"end":{"line":82,"column":31},"identifierName":"multiply"},{"start":{"line":83,"column":6},"end":{"line":83,"column":14},"identifierName":"multiply"},{"start":{"line":92,"column":25},"end":{"line":92,"column":29},"identifierName":"cond"},{"start":{"line":93,"column":4},"end":{"line":93,"column":7},"identifierName":"and"},{"start":{"line":93,"column":34},"end":{"line":93,"column":37},"identifierName":"neq"},{"start":{"line":94,"column":4},"end":{"line":94,"column":8},"identifierName":"cond"},{"start":{"line":95,"column":6},"end":{"line":95,"column":14},"identifierName":"lessThan"},{"start":{"line":96,"column":6},"end":{"line":96,"column":17},"identifierName":"greaterThan"},{"start":{"line":97,"column":6},"end":{"line":97,"column":14},"identifierName":"lessThan"},{"start":{"line":100,"column":21},"end":{"line":100,"column":29},"identifierName":"lessThan"},{"start":{"line":100,"column":30},"end":{"line":100,"column":33},"identifierName":"abs"},{"start":{"line":101,"column":25},"end":{"line":101,"column":27},"identifierName":"or"},{"start":{"line":102,"column":4},"end":{"line":102,"column":6},"identifierName":"eq"},{"start":{"line":103,"column":4},"end":{"line":103,"column":12},"identifierName":"lessThan"},{"start":{"line":104,"column":6},"end":{"line":104,"column":9},"identifierName":"abs"},{"start":{"line":104,"column":10},"end":{"line":104,"column":13},"identifierName":"sub"},{"start":{"line":109,"column":9},"end":{"line":109,"column":14},"identifierName":"block"},{"start":{"line":110,"column":4},"end":{"line":110,"column":7},"identifierName":"set"},{"start":{"line":111,"column":4},"end":{"line":111,"column":8},"identifierName":"cond"},{"start":{"line":112,"column":6},"end":{"line":112,"column":14},"identifierName":"lessThan"},{"start":{"line":114,"column":8},"end":{"line":114,"column":11},"identifierName":"set"},{"start":{"line":115,"column":8},"end":{"line":115,"column":11},"identifierName":"set"},{"start":{"line":118,"column":8},"end":{"line":118,"column":11},"identifierName":"set"},{"start":{"line":119,"column":8},"end":{"line":119,"column":11},"identifierName":"set"},{"start":{"line":122,"column":4},"end":{"line":122,"column":7},"identifierName":"set"},{"start":{"line":123,"column":4},"end":{"line":123,"column":8},"identifierName":"cond"},{"start":{"line":123,"column":9},"end":{"line":123,"column":11},"identifierName":"or"},{"start":{"line":123,"column":28},"end":{"line":123,"column":31},"identifierName":"and"},{"start":{"line":124,"column":6},"end":{"line":124,"column":10},"identifierName":"cond"},{"start":{"line":124,"column":11},"end":{"line":124,"column":14},"identifierName":"neq"},{"start":{"line":125,"column":8},"end":{"line":125,"column":11},"identifierName":"set"},{"start":{"line":126,"column":8},"end":{"line":126,"column":11},"identifierName":"set"},{"start":{"line":128,"column":6},"end":{"line":128,"column":9},"identifierName":"set"},{"start":{"line":133,"column":19},"end":{"line":133,"column":23},"identifierName":"proc"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = springAnimation;\n\n  var _InternalAnimatedValue = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"../core/InternalAnimatedValue\"));\n\n  var MAX_STEPS_MS = 64;\n\n  function spring(clock, state, config) {\n    var lastTime = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").cond)(state.time, state.time, clock);\n    var deltaTime = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").min)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").sub)(clock, lastTime), MAX_STEPS_MS);\n    var c = config.damping;\n    var m = config.mass;\n    var k = config.stiffness;\n    var v0 = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(-1, state.velocity);\n    var x0 = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").sub)(config.toValue, state.position);\n    var zeta = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").divide)(c, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(2, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").sqrt)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(k, m))));\n    var omega0 = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").sqrt)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").divide)(k, m));\n    var omega1 = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(omega0, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").sqrt)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").sub)(1, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(zeta, zeta))));\n    var t = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").divide)(deltaTime, 1000);\n    var sin1 = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").sin)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(omega1, t));\n    var cos1 = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").cos)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(omega1, t));\n    var underDampedEnvelope = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").exp)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(-1, zeta, omega0, t));\n    var underDampedFrag1 = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(underDampedEnvelope, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").add)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(sin1, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").divide)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").add)(v0, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(zeta, omega0, x0)), omega1)), (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(x0, cos1)));\n    var underDampedPosition = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").sub)(config.toValue, underDampedFrag1);\n    var underDampedVelocity = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").sub)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(zeta, omega0, underDampedFrag1), (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(underDampedEnvelope, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").sub)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(cos1, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").add)(v0, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(zeta, omega0, x0))), (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(omega1, x0, sin1))));\n    var criticallyDampedEnvelope = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").exp)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(-1, omega0, t));\n    var criticallyDampedPosition = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").sub)(config.toValue, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(criticallyDampedEnvelope, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").add)(x0, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").add)(v0, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(omega0, x0)), t))));\n    var criticallyDampedVelocity = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(criticallyDampedEnvelope, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").add)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(v0, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").sub)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(t, omega0), 1)), (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").multiply)(t, x0, omega0, omega0)));\n    var prevPosition = state.prevPosition ? state.prevPosition : new _InternalAnimatedValue.default(0);\n    var isOvershooting = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").cond)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").and)(config.overshootClamping, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").neq)(config.stiffness, 0)), (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").cond)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").lessThan)(prevPosition, config.toValue), (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").greaterThan)(state.position, config.toValue), (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").lessThan)(state.position, config.toValue)));\n    var isVelocity = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").lessThan)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").abs)(state.velocity), config.restSpeedThreshold);\n    var isDisplacement = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").or)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").eq)(config.stiffness, 0), (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").lessThan)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").abs)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").sub)(config.toValue, state.position)), config.restDisplacementThreshold));\n    return (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").block)([(0, _$$_REQUIRE(_dependencyMap[2], \"../base\").set)(prevPosition, state.position), (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").cond)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").lessThan)(zeta, 1), [(0, _$$_REQUIRE(_dependencyMap[2], \"../base\").set)(state.position, underDampedPosition), (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").set)(state.velocity, underDampedVelocity)], [(0, _$$_REQUIRE(_dependencyMap[2], \"../base\").set)(state.position, criticallyDampedPosition), (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").set)(state.velocity, criticallyDampedVelocity)]), (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").set)(state.time, clock), (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").cond)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").or)(isOvershooting, (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").and)(isVelocity, isDisplacement)), [(0, _$$_REQUIRE(_dependencyMap[2], \"../base\").cond)((0, _$$_REQUIRE(_dependencyMap[2], \"../base\").neq)(config.stiffness, 0), [(0, _$$_REQUIRE(_dependencyMap[2], \"../base\").set)(state.velocity, 0), (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").set)(state.position, config.toValue)]), (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").set)(state.finished, 1)])]);\n  }\n\n  var procSpring = (0, _$$_REQUIRE(_dependencyMap[2], \"../base\").proc)(function (finished, velocity, position, time, prevPosition, toValue, damping, mass, stiffness, overshootClamping, restSpeedThreshold, restDisplacementThreshold, clock) {\n    return spring(clock, {\n      finished: finished,\n      velocity: velocity,\n      position: position,\n      time: time,\n      prevPosition: prevPosition\n    }, {\n      toValue: toValue,\n      damping: damping,\n      mass: mass,\n      stiffness: stiffness,\n      overshootClamping: overshootClamping,\n      restDisplacementThreshold: restDisplacementThreshold,\n      restSpeedThreshold: restSpeedThreshold\n    });\n  });\n\n  function springAnimation(clock, _ref, _ref2) {\n    var finished = _ref.finished,\n        velocity = _ref.velocity,\n        position = _ref.position,\n        time = _ref.time,\n        prevPosition = _ref.prevPosition;\n    var toValue = _ref2.toValue,\n        damping = _ref2.damping,\n        mass = _ref2.mass,\n        stiffness = _ref2.stiffness,\n        overshootClamping = _ref2.overshootClamping,\n        restDisplacementThreshold = _ref2.restDisplacementThreshold,\n        restSpeedThreshold = _ref2.restSpeedThreshold;\n    return procSpring(finished, velocity, position, time, prevPosition, toValue, damping, mass, stiffness, overshootClamping, restSpeedThreshold, restDisplacementThreshold, clock);\n  }\n});","lineCount":72,"map":[[7,0,23,0],[9,0,25,0],[9,6,25,6,"MAX_STEPS_MS"],[9,18,25,18],[9,21,25,21],[9,23,25,0],[11,0,27,0],[11,11,27,9,"spring"],[11,17,27,0],[11,18,27,16,"clock"],[11,23,27,0],[11,25,27,23,"state"],[11,30,27,0],[11,32,27,30,"config"],[11,38,27,0],[11,40,27,38],[12,0,28,2],[12,8,28,8,"lastTime"],[12,16,28,16],[12,19,28,19],[12,71,28,24,"state"],[12,76,28,29],[12,77,28,30,"time"],[12,81,28,19],[12,83,28,36,"state"],[12,88,28,41],[12,89,28,42,"time"],[12,93,28,19],[12,95,28,48,"clock"],[12,100,28,19],[12,101,28,2],[13,0,30,2],[13,8,30,8,"deltaTime"],[13,17,30,17],[13,20,30,20],[13,71,30,24],[13,122,30,28,"clock"],[13,127,30,24],[13,129,30,35,"lastTime"],[13,137,30,24],[13,138,30,20],[13,140,30,46,"MAX_STEPS_MS"],[13,152,30,20],[13,153,30,2],[14,0,32,2],[14,8,32,8,"c"],[14,9,32,9],[14,12,32,12,"config"],[14,18,32,18],[14,19,32,19,"damping"],[14,26,32,2],[15,0,33,2],[15,8,33,8,"m"],[15,9,33,9],[15,12,33,12,"config"],[15,18,33,18],[15,19,33,19,"mass"],[15,23,33,2],[16,0,34,2],[16,8,34,8,"k"],[16,9,34,9],[16,12,34,12,"config"],[16,18,34,18],[16,19,34,19,"stiffness"],[16,28,34,2],[17,0,36,2],[17,8,36,8,"v0"],[17,10,36,10],[17,13,36,13],[17,69,36,22],[17,70,36,23],[17,71,36,13],[17,73,36,26,"state"],[17,78,36,31],[17,79,36,32,"velocity"],[17,87,36,13],[17,88,36,2],[18,0,37,2],[18,8,37,8,"x0"],[18,10,37,10],[18,13,37,13],[18,64,37,17,"config"],[18,70,37,23],[18,71,37,24,"toValue"],[18,78,37,13],[18,80,37,33,"state"],[18,85,37,38],[18,86,37,39,"position"],[18,94,37,13],[18,95,37,2],[19,0,39,2],[19,8,39,8,"zeta"],[19,12,39,12],[19,15,39,15],[19,69,39,22,"c"],[19,70,39,15],[19,72,39,25],[19,128,39,34],[19,129,39,25],[19,131,39,37],[19,183,39,42],[19,239,39,51,"k"],[19,240,39,42],[19,242,39,54,"m"],[19,243,39,42],[19,244,39,37],[19,245,39,25],[19,246,39,15],[19,247,39,2],[20,0,40,2],[20,8,40,8,"omega0"],[20,14,40,14],[20,17,40,17],[20,69,40,22],[20,123,40,29,"k"],[20,124,40,22],[20,126,40,32,"m"],[20,127,40,22],[20,128,40,17],[20,129,40,2],[21,0,41,2],[21,8,41,8,"omega1"],[21,14,41,14],[21,17,41,17],[21,73,41,26,"omega0"],[21,79,41,17],[21,81,41,34],[21,133,41,39],[21,184,41,43],[21,185,41,39],[21,187,41,46],[21,243,41,55,"zeta"],[21,247,41,46],[21,249,41,61,"zeta"],[21,253,41,46],[21,254,41,39],[21,255,41,34],[21,256,41,17],[21,257,41,2],[22,0,43,2],[22,8,43,8,"t"],[22,9,43,9],[22,12,43,12],[22,66,43,19,"deltaTime"],[22,75,43,12],[22,77,43,30],[22,81,43,12],[22,82,43,2],[23,0,45,2],[23,8,45,8,"sin1"],[23,12,45,12],[23,15,45,15],[23,66,45,19],[23,122,45,28,"omega1"],[23,128,45,19],[23,130,45,36,"t"],[23,131,45,19],[23,132,45,15],[23,133,45,2],[24,0,46,2],[24,8,46,8,"cos1"],[24,12,46,12],[24,15,46,15],[24,66,46,19],[24,122,46,28,"omega1"],[24,128,46,19],[24,130,46,36,"t"],[24,131,46,19],[24,132,46,15],[24,133,46,2],[25,0,49,2],[25,8,49,8,"underDampedEnvelope"],[25,27,49,27],[25,30,49,30],[25,81,49,34],[25,137,49,43],[25,138,49,44],[25,139,49,34],[25,141,49,47,"zeta"],[25,145,49,34],[25,147,49,53,"omega0"],[25,153,49,34],[25,155,49,61,"t"],[25,156,49,34],[25,157,49,30],[25,158,49,2],[26,0,50,2],[26,8,50,8,"underDampedFrag1"],[26,24,50,24],[26,27,50,27],[26,83,51,4,"underDampedEnvelope"],[26,102,50,27],[26,104,52,4],[26,155,53,6],[26,211,53,15,"sin1"],[26,215,53,6],[26,217,53,21],[26,271,53,28],[26,322,53,32,"v0"],[26,324,53,28],[26,326,53,36],[26,382,53,45,"zeta"],[26,386,53,36],[26,388,53,51,"omega0"],[26,394,53,36],[26,396,53,59,"x0"],[26,398,53,36],[26,399,53,28],[26,400,53,21],[26,402,53,65,"omega1"],[26,408,53,21],[26,409,53,6],[26,410,52,4],[26,412,54,6],[26,468,54,15,"x0"],[26,470,54,6],[26,472,54,19,"cos1"],[26,476,54,6],[26,477,52,4],[26,478,50,27],[26,479,50,2],[27,0,57,2],[27,8,57,8,"underDampedPosition"],[27,27,57,27],[27,30,57,30],[27,81,57,34,"config"],[27,87,57,40],[27,88,57,41,"toValue"],[27,95,57,30],[27,97,57,50,"underDampedFrag1"],[27,113,57,30],[27,114,57,2],[28,0,59,2],[28,8,59,8,"underDampedVelocity"],[28,27,59,27],[28,30,59,30],[28,81,60,4],[28,137,60,13,"zeta"],[28,141,60,4],[28,143,60,19,"omega0"],[28,149,60,4],[28,151,60,27,"underDampedFrag1"],[28,167,60,4],[28,168,59,30],[28,170,61,4],[28,226,62,6,"underDampedEnvelope"],[28,245,61,4],[28,247,63,6],[28,298,64,8],[28,354,64,17,"cos1"],[28,358,64,8],[28,360,64,23],[28,411,64,27,"v0"],[28,413,64,23],[28,415,64,31],[28,471,64,40,"zeta"],[28,475,64,31],[28,477,64,46,"omega0"],[28,483,64,31],[28,485,64,54,"x0"],[28,487,64,31],[28,488,64,23],[28,489,64,8],[28,490,63,6],[28,492,65,8],[28,548,65,17,"omega1"],[28,554,65,8],[28,556,65,25,"x0"],[28,558,65,8],[28,560,65,29,"sin1"],[28,564,65,8],[28,565,63,6],[28,566,61,4],[28,567,59,30],[28,568,59,2],[29,0,71,2],[29,8,71,8,"criticallyDampedEnvelope"],[29,32,71,32],[29,35,71,35],[29,86,71,39],[29,142,71,48],[29,143,71,49],[29,144,71,39],[29,146,71,52,"omega0"],[29,152,71,39],[29,154,71,60,"t"],[29,155,71,39],[29,156,71,35],[29,157,71,2],[30,0,72,2],[30,8,72,8,"criticallyDampedPosition"],[30,32,72,32],[30,35,72,35],[30,86,73,4,"config"],[30,92,73,10],[30,93,73,11,"toValue"],[30,100,72,35],[30,102,74,4],[30,158,75,6,"criticallyDampedEnvelope"],[30,182,74,4],[30,184,76,6],[30,235,76,10,"x0"],[30,237,76,6],[30,239,76,14],[30,295,76,23],[30,346,76,27,"v0"],[30,348,76,23],[30,350,76,31],[30,406,76,40,"omega0"],[30,412,76,31],[30,414,76,48,"x0"],[30,416,76,31],[30,417,76,23],[30,418,76,14],[30,420,76,54,"t"],[30,421,76,14],[30,422,76,6],[30,423,74,4],[30,424,72,35],[30,425,72,2],[31,0,79,2],[31,8,79,8,"criticallyDampedVelocity"],[31,32,79,32],[31,35,79,35],[31,91,80,4,"criticallyDampedEnvelope"],[31,115,79,35],[31,117,81,4],[31,168,82,6],[31,224,82,15,"v0"],[31,226,82,6],[31,228,82,19],[31,279,82,23],[31,335,82,32,"t"],[31,336,82,23],[31,338,82,35,"omega0"],[31,344,82,23],[31,345,82,19],[31,347,82,44],[31,348,82,19],[31,349,82,6],[31,350,81,4],[31,352,83,6],[31,408,83,15,"t"],[31,409,83,6],[31,411,83,18,"x0"],[31,413,83,6],[31,415,83,22,"omega0"],[31,421,83,6],[31,423,83,30,"omega0"],[31,429,83,6],[31,430,81,4],[31,431,79,35],[31,432,79,2],[32,0,88,2],[32,8,88,8,"prevPosition"],[32,20,88,20],[32,23,88,23,"state"],[32,28,88,28],[32,29,88,29,"prevPosition"],[32,41,88,23],[32,44,89,6,"state"],[32,49,89,11],[32,50,89,12,"prevPosition"],[32,62,88,23],[32,65,90,6],[32,69,90,10,"AnimatedValue"],[32,99,90,6],[32,100,90,24],[32,101,90,6],[32,102,88,2],[33,0,92,2],[33,8,92,8,"isOvershooting"],[33,22,92,22],[33,25,92,25],[33,77,93,4],[33,128,93,8,"config"],[33,134,93,14],[33,135,93,15,"overshootClamping"],[33,152,93,4],[33,154,93,34],[33,205,93,38,"config"],[33,211,93,44],[33,212,93,45,"stiffness"],[33,221,93,34],[33,223,93,56],[33,224,93,34],[33,225,93,4],[33,226,92,25],[33,228,94,4],[33,280,95,6],[33,336,95,15,"prevPosition"],[33,348,95,6],[33,350,95,29,"config"],[33,356,95,35],[33,357,95,36,"toValue"],[33,364,95,6],[33,365,94,4],[33,367,96,6],[33,426,96,18,"state"],[33,431,96,23],[33,432,96,24,"position"],[33,440,96,6],[33,442,96,34,"config"],[33,448,96,40],[33,449,96,41,"toValue"],[33,456,96,6],[33,457,94,4],[33,459,97,6],[33,515,97,15,"state"],[33,520,97,20],[33,521,97,21,"position"],[33,529,97,6],[33,531,97,31,"config"],[33,537,97,37],[33,538,97,38,"toValue"],[33,545,97,6],[33,546,94,4],[33,547,92,25],[33,548,92,2],[34,0,100,2],[34,8,100,8,"isVelocity"],[34,18,100,18],[34,21,100,21],[34,77,100,30],[34,128,100,34,"state"],[34,133,100,39],[34,134,100,40,"velocity"],[34,142,100,30],[34,143,100,21],[34,145,100,51,"config"],[34,151,100,57],[34,152,100,58,"restSpeedThreshold"],[34,170,100,21],[34,171,100,2],[35,0,101,2],[35,8,101,8,"isDisplacement"],[35,22,101,22],[35,25,101,25],[35,75,102,4],[35,125,102,7,"config"],[35,131,102,13],[35,132,102,14,"stiffness"],[35,141,102,4],[35,143,102,25],[35,144,102,4],[35,145,101,25],[35,147,103,4],[35,203,104,6],[35,254,104,10],[35,305,104,14,"config"],[35,311,104,20],[35,312,104,21,"toValue"],[35,319,104,10],[35,321,104,30,"state"],[35,326,104,35],[35,327,104,36,"position"],[35,335,104,10],[35,336,104,6],[35,337,103,4],[35,339,105,6,"config"],[35,345,105,12],[35,346,105,13,"restDisplacementThreshold"],[35,371,103,4],[35,372,101,25],[35,373,101,2],[36,0,109,2],[36,11,109,9],[36,64,109,15],[36,65,110,4],[36,116,110,8,"prevPosition"],[36,128,110,4],[36,130,110,22,"state"],[36,135,110,27],[36,136,110,28,"position"],[36,144,110,4],[36,145,109,15],[36,147,111,4],[36,199,112,6],[36,255,112,15,"zeta"],[36,259,112,6],[36,261,112,21],[36,262,112,6],[36,263,111,4],[36,265,113,6],[36,266,114,8],[36,317,114,12,"state"],[36,322,114,17],[36,323,114,18,"position"],[36,331,114,8],[36,333,114,28,"underDampedPosition"],[36,352,114,8],[36,353,113,6],[36,355,115,8],[36,406,115,12,"state"],[36,411,115,17],[36,412,115,18,"velocity"],[36,420,115,8],[36,422,115,28,"underDampedVelocity"],[36,441,115,8],[36,442,113,6],[36,443,111,4],[36,445,117,6],[36,446,118,8],[36,497,118,12,"state"],[36,502,118,17],[36,503,118,18,"position"],[36,511,118,8],[36,513,118,28,"criticallyDampedPosition"],[36,537,118,8],[36,538,117,6],[36,540,119,8],[36,591,119,12,"state"],[36,596,119,17],[36,597,119,18,"velocity"],[36,605,119,8],[36,607,119,28,"criticallyDampedVelocity"],[36,631,119,8],[36,632,117,6],[36,633,111,4],[36,634,109,15],[36,636,122,4],[36,687,122,8,"state"],[36,692,122,13],[36,693,122,14,"time"],[36,697,122,4],[36,699,122,20,"clock"],[36,704,122,4],[36,705,109,15],[36,707,123,4],[36,759,123,9],[36,809,123,12,"isOvershooting"],[36,823,123,9],[36,825,123,28],[36,876,123,32,"isVelocity"],[36,886,123,28],[36,888,123,44,"isDisplacement"],[36,902,123,28],[36,903,123,9],[36,904,123,4],[36,906,123,62],[36,907,124,6],[36,959,124,11],[36,1010,124,15,"config"],[36,1016,124,21],[36,1017,124,22,"stiffness"],[36,1026,124,11],[36,1028,124,33],[36,1029,124,11],[36,1030,124,6],[36,1032,124,37],[36,1033,125,8],[36,1084,125,12,"state"],[36,1089,125,17],[36,1090,125,18,"velocity"],[36,1098,125,8],[36,1100,125,28],[36,1101,125,8],[36,1102,124,37],[36,1104,126,8],[36,1155,126,12,"state"],[36,1160,126,17],[36,1161,126,18,"position"],[36,1169,126,8],[36,1171,126,28,"config"],[36,1177,126,34],[36,1178,126,35,"toValue"],[36,1185,126,8],[36,1186,124,37],[36,1187,124,6],[36,1188,123,62],[36,1190,128,6],[36,1241,128,10,"state"],[36,1246,128,15],[36,1247,128,16,"finished"],[36,1255,128,6],[36,1257,128,26],[36,1258,128,6],[36,1259,123,62],[36,1260,123,4],[36,1261,109,15],[36,1262,109,9],[36,1263,109,2],[37,0,131,1],[39,0,133,0],[39,6,133,6,"procSpring"],[39,16,133,16],[39,19,133,19],[39,71,134,2],[39,81,135,4,"finished"],[39,89,134,2],[39,91,136,4,"velocity"],[39,99,134,2],[39,101,137,4,"position"],[39,109,134,2],[39,111,138,4,"time"],[39,115,134,2],[39,117,139,4,"prevPosition"],[39,129,134,2],[39,131,140,4,"toValue"],[39,138,134,2],[39,140,141,4,"damping"],[39,147,134,2],[39,149,142,4,"mass"],[39,153,134,2],[39,155,143,4,"stiffness"],[39,164,134,2],[39,166,144,4,"overshootClamping"],[39,183,134,2],[39,185,145,4,"restSpeedThreshold"],[39,203,134,2],[39,205,146,4,"restDisplacementThreshold"],[39,230,134,2],[39,232,147,4,"clock"],[39,237,134,2],[40,0,134,2],[40,11,149,4,"spring"],[40,17,149,10],[40,18,150,6,"clock"],[40,23,149,10],[40,25,151,6],[41,0,152,8,"finished"],[41,6,152,8,"finished"],[41,14,152,16],[41,16,152,8,"finished"],[41,24,151,6],[42,0,153,8,"velocity"],[42,6,153,8,"velocity"],[42,14,153,16],[42,16,153,8,"velocity"],[42,24,151,6],[43,0,154,8,"position"],[43,6,154,8,"position"],[43,14,154,16],[43,16,154,8,"position"],[43,24,151,6],[44,0,155,8,"time"],[44,6,155,8,"time"],[44,10,155,12],[44,12,155,8,"time"],[44,16,151,6],[45,0,156,8,"prevPosition"],[45,6,156,8,"prevPosition"],[45,18,156,20],[45,20,156,8,"prevPosition"],[46,0,151,6],[46,5,149,10],[46,7,158,6],[47,0,159,8,"toValue"],[47,6,159,8,"toValue"],[47,13,159,15],[47,15,159,8,"toValue"],[47,22,158,6],[48,0,160,8,"damping"],[48,6,160,8,"damping"],[48,13,160,15],[48,15,160,8,"damping"],[48,22,158,6],[49,0,161,8,"mass"],[49,6,161,8,"mass"],[49,10,161,12],[49,12,161,8,"mass"],[49,16,158,6],[50,0,162,8,"stiffness"],[50,6,162,8,"stiffness"],[50,15,162,17],[50,17,162,8,"stiffness"],[50,26,158,6],[51,0,163,8,"overshootClamping"],[51,6,163,8,"overshootClamping"],[51,23,163,25],[51,25,163,8,"overshootClamping"],[51,42,158,6],[52,0,164,8,"restDisplacementThreshold"],[52,6,164,8,"restDisplacementThreshold"],[52,31,164,33],[52,33,164,8,"restDisplacementThreshold"],[52,58,158,6],[53,0,165,8,"restSpeedThreshold"],[53,6,165,8,"restSpeedThreshold"],[53,24,165,26],[53,26,165,8,"restSpeedThreshold"],[54,0,158,6],[54,5,149,10],[54,6,134,2],[55,0,134,2],[55,3,133,19],[55,4,133,0],[57,0,170,15],[57,11,170,24,"springAnimation"],[57,26,170,15],[57,27,171,2,"clock"],[57,32,170,15],[57,47,182,2],[58,0,182,2],[58,8,172,4,"finished"],[58,16,182,2],[58,24,172,4,"finished"],[58,32,182,2],[59,0,182,2],[59,8,172,14,"velocity"],[59,16,182,2],[59,24,172,14,"velocity"],[59,32,182,2],[60,0,182,2],[60,8,172,24,"position"],[60,16,182,2],[60,24,172,24,"position"],[60,32,182,2],[61,0,182,2],[61,8,172,34,"time"],[61,12,182,2],[61,20,172,34,"time"],[61,24,182,2],[62,0,182,2],[62,8,172,40,"prevPosition"],[62,20,182,2],[62,28,172,40,"prevPosition"],[62,40,182,2],[63,0,182,2],[63,8,174,4,"toValue"],[63,15,182,2],[63,24,174,4,"toValue"],[63,31,182,2],[64,0,182,2],[64,8,175,4,"damping"],[64,15,182,2],[64,24,175,4,"damping"],[64,31,182,2],[65,0,182,2],[65,8,176,4,"mass"],[65,12,182,2],[65,21,176,4,"mass"],[65,25,182,2],[66,0,182,2],[66,8,177,4,"stiffness"],[66,17,182,2],[66,26,177,4,"stiffness"],[66,35,182,2],[67,0,182,2],[67,8,178,4,"overshootClamping"],[67,25,182,2],[67,34,178,4,"overshootClamping"],[67,51,182,2],[68,0,182,2],[68,8,179,4,"restDisplacementThreshold"],[68,33,182,2],[68,42,179,4,"restDisplacementThreshold"],[68,67,182,2],[69,0,182,2],[69,8,180,4,"restSpeedThreshold"],[69,26,182,2],[69,35,180,4,"restSpeedThreshold"],[69,53,182,2],[70,0,183,2],[70,11,183,9,"procSpring"],[70,21,183,19],[70,22,184,4,"finished"],[70,30,183,19],[70,32,185,4,"velocity"],[70,40,183,19],[70,42,186,4,"position"],[70,50,183,19],[70,52,187,4,"time"],[70,56,183,19],[70,58,188,4,"prevPosition"],[70,70,183,19],[70,72,189,4,"toValue"],[70,79,183,19],[70,81,190,4,"damping"],[70,88,183,19],[70,90,191,4,"mass"],[70,94,183,19],[70,96,192,4,"stiffness"],[70,105,183,19],[70,107,193,4,"overshootClamping"],[70,124,183,19],[70,126,194,4,"restSpeedThreshold"],[70,144,183,19],[70,146,195,4,"restDisplacementThreshold"],[70,171,183,19],[70,173,196,4,"clock"],[70,178,183,19],[70,179,183,2],[71,0,198,1]],"functionMap":{"names":["<global>","spring","proc$argument_0","springAnimation"],"mappings":"AAA;AC0B;CDwG;EEG;KFiC;eGG;CH4B"}},"type":"js/module"}]}