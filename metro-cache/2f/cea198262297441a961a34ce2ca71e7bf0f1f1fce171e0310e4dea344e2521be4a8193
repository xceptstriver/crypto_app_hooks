{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":23},"end":{"line":4,"column":44}}]}},{"name":"./Raw","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":32},"end":{"line":7,"column":56}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var LEFTCURLYBRACKET = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.LeftCurlyBracket;\n\n  function consumeRaw(startToken) {\n    return this.Raw(startToken, _$$_REQUIRE(_dependencyMap[1], \"./Raw\").mode.leftCurlyBracket, true);\n  }\n\n  function consumePrelude() {\n    var prelude = this.SelectorList();\n\n    if (prelude.type !== 'Raw' && this.scanner.eof === false && this.scanner.tokenType !== LEFTCURLYBRACKET) {\n      this.error();\n    }\n\n    return prelude;\n  }\n\n  module.exports = {\n    name: 'Rule',\n    structure: {\n      prelude: ['SelectorList', 'Raw'],\n      block: ['Block']\n    },\n    parse: function parse() {\n      var startToken = this.scanner.tokenIndex;\n      var startOffset = this.scanner.tokenStart;\n      var prelude;\n      var block;\n\n      if (this.parseRulePrelude) {\n        prelude = this.parseWithFallback(consumePrelude, consumeRaw);\n      } else {\n        prelude = consumeRaw.call(this, startToken);\n      }\n\n      block = this.Block(true);\n      return {\n        type: 'Rule',\n        loc: this.getLocation(startOffset, this.scanner.tokenStart),\n        prelude: prelude,\n        block: block\n      };\n    },\n    generate: function generate(node) {\n      this.node(node.prelude);\n      this.node(node.block);\n    },\n    walkContext: 'rule'\n  };\n});","lineCount":50,"map":[[2,0,4,0],[2,6,4,4,"LEFTCURLYBRACKET"],[2,22,4,20],[2,25,4,23],[2,80,4,28,"LeftCurlyBracket"],[2,96,4,0],[4,0,6,0],[4,11,6,9,"consumeRaw"],[4,21,6,0],[4,22,6,20,"startToken"],[4,32,6,0],[4,34,6,32],[5,0,7,4],[5,11,7,11],[5,16,7,16,"Raw"],[5,19,7,11],[5,20,7,20,"startToken"],[5,30,7,11],[5,32,7,32],[5,77,7,40,"leftCurlyBracket"],[5,93,7,11],[5,95,7,58],[5,99,7,11],[5,100,7,4],[6,0,8,1],[8,0,10,0],[8,11,10,9,"consumePrelude"],[8,25,10,0],[8,28,10,26],[9,0,11,4],[9,8,11,8,"prelude"],[9,15,11,15],[9,18,11,18],[9,23,11,23,"SelectorList"],[9,35,11,18],[9,37,11,4],[11,0,13,4],[11,8,13,8,"prelude"],[11,15,13,15],[11,16,13,16,"type"],[11,20,13,8],[11,25,13,25],[11,30,13,8],[11,34,14,8],[11,39,14,13,"scanner"],[11,46,14,8],[11,47,14,21,"eof"],[11,50,14,8],[11,55,14,29],[11,60,13,8],[11,64,15,8],[11,69,15,13,"scanner"],[11,76,15,8],[11,77,15,21,"tokenType"],[11,86,15,8],[11,91,15,35,"LEFTCURLYBRACKET"],[11,107,13,4],[11,109,15,53],[12,0,16,8],[12,11,16,13,"error"],[12,16,16,8],[13,0,17,5],[15,0,19,4],[15,11,19,11,"prelude"],[15,18,19,4],[16,0,20,1],[18,0,22,0,"module"],[18,2,22,0,"module"],[18,8,22,6],[18,9,22,7,"exports"],[18,16,22,0],[18,19,22,17],[19,0,23,4,"name"],[19,4,23,4,"name"],[19,8,23,8],[19,10,23,10],[19,16,22,17],[20,0,24,4,"structure"],[20,4,24,4,"structure"],[20,13,24,13],[20,15,24,15],[21,0,25,8,"prelude"],[21,6,25,8,"prelude"],[21,13,25,15],[21,15,25,17],[21,16,25,18],[21,30,25,17],[21,32,25,34],[21,37,25,17],[21,38,24,15],[22,0,26,8,"block"],[22,6,26,8,"block"],[22,11,26,13],[22,13,26,15],[22,14,26,16],[22,21,26,15],[23,0,24,15],[23,5,22,17],[24,0,28,4,"parse"],[24,4,28,4,"parse"],[24,9,28,9],[24,11,28,11],[24,28,28,22],[25,0,29,8],[25,10,29,12,"startToken"],[25,20,29,22],[25,23,29,25],[25,28,29,30,"scanner"],[25,35,29,25],[25,36,29,38,"tokenIndex"],[25,46,29,8],[26,0,30,8],[26,10,30,12,"startOffset"],[26,21,30,23],[26,24,30,26],[26,29,30,31,"scanner"],[26,36,30,26],[26,37,30,39,"tokenStart"],[26,47,30,8],[27,0,31,8],[27,10,31,12,"prelude"],[27,17,31,8],[28,0,32,8],[28,10,32,12,"block"],[28,15,32,8],[30,0,34,8],[30,10,34,12],[30,15,34,17,"parseRulePrelude"],[30,31,34,8],[30,33,34,35],[31,0,35,12,"prelude"],[31,8,35,12,"prelude"],[31,15,35,19],[31,18,35,22],[31,23,35,27,"parseWithFallback"],[31,40,35,22],[31,41,35,45,"consumePrelude"],[31,55,35,22],[31,57,35,61,"consumeRaw"],[31,67,35,22],[31,68,35,12],[32,0,36,9],[32,7,34,8],[32,13,36,15],[33,0,37,12,"prelude"],[33,8,37,12,"prelude"],[33,15,37,19],[33,18,37,22,"consumeRaw"],[33,28,37,32],[33,29,37,33,"call"],[33,33,37,22],[33,34,37,38],[33,38,37,22],[33,40,37,44,"startToken"],[33,50,37,22],[33,51,37,12],[34,0,38,9],[36,0,40,8,"block"],[36,6,40,8,"block"],[36,11,40,13],[36,14,40,16],[36,19,40,21,"Block"],[36,24,40,16],[36,25,40,27],[36,29,40,16],[36,30,40,8],[37,0,42,8],[37,13,42,15],[38,0,43,12,"type"],[38,8,43,12,"type"],[38,12,43,16],[38,14,43,18],[38,20,42,15],[39,0,44,12,"loc"],[39,8,44,12,"loc"],[39,11,44,15],[39,13,44,17],[39,18,44,22,"getLocation"],[39,29,44,17],[39,30,44,34,"startOffset"],[39,41,44,17],[39,43,44,47],[39,48,44,52,"scanner"],[39,55,44,47],[39,56,44,60,"tokenStart"],[39,66,44,17],[39,67,42,15],[40,0,45,12,"prelude"],[40,8,45,12,"prelude"],[40,15,45,19],[40,17,45,21,"prelude"],[40,24,42,15],[41,0,46,12,"block"],[41,8,46,12,"block"],[41,13,46,17],[41,15,46,19,"block"],[42,0,42,15],[42,7,42,8],[43,0,48,5],[43,5,22,17],[44,0,49,4,"generate"],[44,4,49,4,"generate"],[44,12,49,12],[44,14,49,14],[44,32,49,23,"node"],[44,36,49,14],[44,38,49,29],[45,0,50,8],[45,11,50,13,"node"],[45,15,50,8],[45,16,50,18,"node"],[45,20,50,22],[45,21,50,23,"prelude"],[45,28,50,8],[46,0,51,8],[46,11,51,13,"node"],[46,15,51,8],[46,16,51,18,"node"],[46,20,51,22],[46,21,51,23,"block"],[46,26,51,8],[47,0,52,5],[47,5,22,17],[48,0,53,4,"walkContext"],[48,4,53,4,"walkContext"],[48,15,53,15],[48,17,53,17],[49,0,22,17],[49,3,22,0]],"functionMap":{"names":["<global>","consumeRaw","consumePrelude","module.exports.parse","module.exports.generate"],"mappings":"AAA;ACK;CDE;AEE;CFU;WGQ;KHoB;cIC;KJG"}},"type":"js/module"}]}