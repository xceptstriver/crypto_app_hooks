{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":200,"column":0}},{"start":{"line":1,"column":0},"end":{"line":200,"column":0}},{"start":{"line":12,"column":0},"end":{"line":12,"column":60}}]}},{"name":"@babel/runtime/helpers/extends","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":200,"column":0}}]}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":200,"column":0}}]}},{"name":"./../core/InternalAnimatedValue","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":0},"end":{"line":12,"column":60}}]}},{"name":"./../base","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":9},"end":{"line":23,"column":12},"identifierName":"add"},{"start":{"line":23,"column":13},"end":{"line":23,"column":21},"identifierName":"multiply"},{"start":{"line":23,"column":22},"end":{"line":23,"column":25},"identifierName":"sub"},{"start":{"line":27,"column":9},"end":{"line":27,"column":12},"identifierName":"add"},{"start":{"line":27,"column":13},"end":{"line":27,"column":21},"identifierName":"multiply"},{"start":{"line":27,"column":22},"end":{"line":27,"column":25},"identifierName":"sub"},{"start":{"line":55,"column":11},"end":{"line":55,"column":17},"identifierName":"divide"},{"start":{"line":55,"column":18},"end":{"line":55,"column":21},"identifierName":"sub"},{"start":{"line":55,"column":42},"end":{"line":55,"column":45},"identifierName":"sub"},{"start":{"line":59,"column":11},"end":{"line":59,"column":14},"identifierName":"add"},{"start":{"line":59,"column":22},"end":{"line":59,"column":30},"identifierName":"multiply"},{"start":{"line":59,"column":34},"end":{"line":59,"column":37},"identifierName":"sub"},{"start":{"line":63,"column":11},"end":{"line":63,"column":14},"identifierName":"add"},{"start":{"line":63,"column":15},"end":{"line":63,"column":23},"identifierName":"multiply"},{"start":{"line":63,"column":33},"end":{"line":63,"column":41},"identifierName":"multiply"},{"start":{"line":63,"column":42},"end":{"line":63,"column":45},"identifierName":"sub"},{"start":{"line":67,"column":31},"end":{"line":67,"column":34},"identifierName":"sub"},{"start":{"line":67,"column":35},"end":{"line":67,"column":43},"identifierName":"multiply"},{"start":{"line":67,"column":51},"end":{"line":67,"column":59},"identifierName":"multiply"},{"start":{"line":71,"column":11},"end":{"line":71,"column":14},"identifierName":"add"},{"start":{"line":72,"column":6},"end":{"line":72,"column":9},"identifierName":"sub"},{"start":{"line":72,"column":10},"end":{"line":72,"column":18},"identifierName":"multiply"},{"start":{"line":72,"column":27},"end":{"line":72,"column":30},"identifierName":"pow"},{"start":{"line":72,"column":39},"end":{"line":72,"column":47},"identifierName":"multiply"},{"start":{"line":72,"column":55},"end":{"line":72,"column":58},"identifierName":"pow"},{"start":{"line":73,"column":6},"end":{"line":73,"column":14},"identifierName":"multiply"},{"start":{"line":79,"column":11},"end":{"line":79,"column":14},"identifierName":"add"},{"start":{"line":80,"column":6},"end":{"line":80,"column":9},"identifierName":"sub"},{"start":{"line":80,"column":10},"end":{"line":80,"column":18},"identifierName":"multiply"},{"start":{"line":80,"column":29},"end":{"line":80,"column":32},"identifierName":"pow"},{"start":{"line":80,"column":41},"end":{"line":80,"column":49},"identifierName":"multiply"},{"start":{"line":80,"column":57},"end":{"line":80,"column":60},"identifierName":"pow"},{"start":{"line":81,"column":6},"end":{"line":81,"column":14},"identifierName":"multiply"},{"start":{"line":87,"column":11},"end":{"line":87,"column":14},"identifierName":"add"},{"start":{"line":88,"column":6},"end":{"line":88,"column":9},"identifierName":"sub"},{"start":{"line":88,"column":10},"end":{"line":88,"column":18},"identifierName":"multiply"},{"start":{"line":88,"column":31},"end":{"line":88,"column":34},"identifierName":"pow"},{"start":{"line":88,"column":43},"end":{"line":88,"column":51},"identifierName":"multiply"},{"start":{"line":88,"column":62},"end":{"line":88,"column":65},"identifierName":"pow"},{"start":{"line":89,"column":6},"end":{"line":89,"column":14},"identifierName":"multiply"},{"start":{"line":95,"column":11},"end":{"line":95,"column":15},"identifierName":"cond"},{"start":{"line":96,"column":6},"end":{"line":96,"column":14},"identifierName":"lessOrEq"},{"start":{"line":98,"column":6},"end":{"line":98,"column":10},"identifierName":"cond"},{"start":{"line":99,"column":8},"end":{"line":99,"column":11},"identifierName":"and"},{"start":{"line":99,"column":12},"end":{"line":99,"column":23},"identifierName":"greaterThan"},{"start":{"line":99,"column":38},"end":{"line":99,"column":46},"identifierName":"lessOrEq"},{"start":{"line":106,"column":20},"end":{"line":106,"column":26},"identifierName":"divide"},{"start":{"line":108,"column":22},"end":{"line":108,"column":28},"identifierName":"divide"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _extends2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\"));\n\n  var _objectWithoutProperties2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _InternalAnimatedValue = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"./../core/InternalAnimatedValue\"));\n\n  var _excluded = [\"tension\", \"friction\"],\n      _excluded2 = [\"bounciness\", \"speed\"];\n\n  function stiffnessFromOrigamiValue(oValue) {\n    return (oValue - 30) * 3.62 + 194;\n  }\n\n  function dampingFromOrigamiValue(oValue) {\n    return (oValue - 8) * 3 + 25;\n  }\n\n  function stiffnessFromOrigamiNode(oValue) {\n    return (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").add)((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").multiply)((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").sub)(oValue, 30), 3.62), 194);\n  }\n\n  function dampingFromOrigamiNode(oValue) {\n    return (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").add)((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").multiply)((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").sub)(oValue, 8), 3), 25);\n  }\n\n  function makeConfigFromOrigamiTensionAndFriction(prevConfig) {\n    var tension = prevConfig.tension,\n        friction = prevConfig.friction,\n        rest = (0, _objectWithoutProperties2.default)(prevConfig, _excluded);\n    return (0, _extends2.default)({}, rest, {\n      stiffness: typeof tension === 'number' ? stiffnessFromOrigamiValue(tension) : stiffnessFromOrigamiNode(tension),\n      damping: typeof friction === 'number' ? dampingFromOrigamiValue(friction) : dampingFromOrigamiNode(friction)\n    });\n  }\n\n  function makeConfigFromBouncinessAndSpeed(prevConfig) {\n    var bounciness = prevConfig.bounciness,\n        speed = prevConfig.speed,\n        rest = (0, _objectWithoutProperties2.default)(prevConfig, _excluded2);\n\n    if (typeof bounciness === 'number' && typeof speed === 'number') {\n      return fromBouncinessAndSpeedNumbers(bounciness, speed, rest);\n    }\n\n    return fromBouncinessAndSpeedNodes(bounciness, speed, rest);\n  }\n\n  function fromBouncinessAndSpeedNodes(bounciness, speed, rest) {\n    function normalize(value, startValue, endValue) {\n      return (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").divide)((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").sub)(value, startValue), (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").sub)(endValue, startValue));\n    }\n\n    function projectNormal(n, start, end) {\n      return (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").add)(start, (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").multiply)(n, (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").sub)(end, start)));\n    }\n\n    function linearInterpolation(t, start, end) {\n      return (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").add)((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").multiply)(t, end), (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").multiply)((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").sub)(1, t), start));\n    }\n\n    function quadraticOutInterpolation(t, start, end) {\n      return linearInterpolation((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").sub)((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").multiply)(2, t), (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").multiply)(t, t)), start, end);\n    }\n\n    function b3Friction1(x) {\n      return (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").add)((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").sub)((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").multiply)(0.0007, (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").pow)(x, 3)), (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").multiply)(0.031, (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").pow)(x, 2))), (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").multiply)(0.64, x), 1.28);\n    }\n\n    function b3Friction2(x) {\n      return (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").add)((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").sub)((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").multiply)(0.000044, (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").pow)(x, 3)), (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").multiply)(0.006, (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").pow)(x, 2))), (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").multiply)(0.36, x), 2);\n    }\n\n    function b3Friction3(x) {\n      return (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").add)((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").sub)((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").multiply)(0.00000045, (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").pow)(x, 3)), (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").multiply)(0.000332, (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").pow)(x, 2))), (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").multiply)(0.1078, x), 5.84);\n    }\n\n    function b3Nobounce(tension) {\n      return (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").cond)((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").lessOrEq)(tension, 18), b3Friction1(tension), (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").cond)((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").and)((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").greaterThan)(tension, 18), (0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").lessOrEq)(tension, 44)), b3Friction2(tension), b3Friction3(tension)));\n    }\n\n    var b = normalize((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").divide)(bounciness, 1.7), 0, 20);\n    b = projectNormal(b, 0, 0.8);\n    var s = normalize((0, _$$_REQUIRE(_dependencyMap[4], \"./../base\").divide)(speed, 1.7), 0, 20);\n    var bouncyTension = projectNormal(s, 0.5, 200);\n    var bouncyFriction = quadraticOutInterpolation(b, b3Nobounce(bouncyTension), 0.01);\n    return (0, _extends2.default)({}, rest, {\n      stiffness: stiffnessFromOrigamiNode(bouncyTension),\n      damping: dampingFromOrigamiNode(bouncyFriction)\n    });\n  }\n\n  function fromBouncinessAndSpeedNumbers(bounciness, speed, rest) {\n    function normalize(value, startValue, endValue) {\n      return (value - startValue) / (endValue - startValue);\n    }\n\n    function projectNormal(n, start, end) {\n      return start + n * (end - start);\n    }\n\n    function linearInterpolation(t, start, end) {\n      return t * end + (1 - t) * start;\n    }\n\n    function quadraticOutInterpolation(t, start, end) {\n      return linearInterpolation(2 * t - t * t, start, end);\n    }\n\n    function b3Friction1(x) {\n      return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;\n    }\n\n    function b3Friction2(x) {\n      return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;\n    }\n\n    function b3Friction3(x) {\n      return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;\n    }\n\n    function b3Nobounce(tension) {\n      if (tension <= 18) {\n        return b3Friction1(tension);\n      } else if (tension > 18 && tension <= 44) {\n        return b3Friction2(tension);\n      } else {\n        return b3Friction3(tension);\n      }\n    }\n\n    var b = normalize(bounciness / 1.7, 0, 20);\n    b = projectNormal(b, 0, 0.8);\n    var s = normalize(speed / 1.7, 0, 20);\n    var bouncyTension = projectNormal(s, 0.5, 200);\n    var bouncyFriction = quadraticOutInterpolation(b, b3Nobounce(bouncyTension), 0.01);\n    return (0, _extends2.default)({}, rest, {\n      stiffness: stiffnessFromOrigamiValue(bouncyTension),\n      damping: dampingFromOrigamiValue(bouncyFriction)\n    });\n  }\n\n  function makeDefaultConfig() {\n    return {\n      stiffness: new _InternalAnimatedValue.default(100),\n      mass: new _InternalAnimatedValue.default(1),\n      damping: new _InternalAnimatedValue.default(10),\n      overshootClamping: false,\n      restSpeedThreshold: 0.001,\n      restDisplacementThreshold: 0.001,\n      toValue: new _InternalAnimatedValue.default(0)\n    };\n  }\n\n  var _default = {\n    makeDefaultConfig: makeDefaultConfig,\n    makeConfigFromBouncinessAndSpeed: makeConfigFromBouncinessAndSpeed,\n    makeConfigFromOrigamiTensionAndFriction: makeConfigFromOrigamiTensionAndFriction\n  };\n  exports.default = _default;\n});","lineCount":166,"map":[[11,0,12,0],[16,0,14,0],[16,11,14,9,"stiffnessFromOrigamiValue"],[16,36,14,0],[16,37,14,35,"oValue"],[16,43,14,0],[16,45,14,43],[17,0,15,2],[17,11,15,9],[17,12,15,10,"oValue"],[17,18,15,16],[17,21,15,19],[17,23,15,9],[17,27,15,25],[17,31,15,9],[17,34,15,32],[17,37,15,2],[18,0,16,1],[20,0,18,0],[20,11,18,9,"dampingFromOrigamiValue"],[20,34,18,0],[20,35,18,33,"oValue"],[20,41,18,0],[20,43,18,41],[21,0,19,2],[21,11,19,9],[21,12,19,10,"oValue"],[21,18,19,16],[21,21,19,19],[21,22,19,9],[21,26,19,24],[21,27,19,9],[21,30,19,28],[21,32,19,2],[22,0,20,1],[24,0,22,0],[24,11,22,9,"stiffnessFromOrigamiNode"],[24,35,22,0],[24,36,22,34,"oValue"],[24,42,22,0],[24,44,22,42],[25,0,23,2],[25,11,23,9],[25,64,23,13],[25,122,23,22],[25,175,23,26,"oValue"],[25,181,23,22],[25,183,23,34],[25,185,23,22],[25,186,23,13],[25,188,23,39],[25,192,23,13],[25,193,23,9],[25,195,23,46],[25,198,23,9],[25,199,23,2],[26,0,24,1],[28,0,26,0],[28,11,26,9,"dampingFromOrigamiNode"],[28,33,26,0],[28,34,26,32,"oValue"],[28,40,26,0],[28,42,26,40],[29,0,27,2],[29,11,27,9],[29,64,27,13],[29,122,27,22],[29,175,27,26,"oValue"],[29,181,27,22],[29,183,27,34],[29,184,27,22],[29,185,27,13],[29,187,27,38],[29,188,27,13],[29,189,27,9],[29,191,27,42],[29,193,27,9],[29,194,27,2],[30,0,28,1],[32,0,30,0],[32,11,30,9,"makeConfigFromOrigamiTensionAndFriction"],[32,50,30,0],[32,51,30,49,"prevConfig"],[32,61,30,0],[32,63,30,61],[33,0,31,2],[33,8,31,10,"tension"],[33,15,31,2],[33,18,31,41,"prevConfig"],[33,28,31,2],[33,29,31,10,"tension"],[33,36,31,2],[34,0,31,2],[34,8,31,19,"friction"],[34,16,31,2],[34,19,31,41,"prevConfig"],[34,29,31,2],[34,30,31,19,"friction"],[34,38,31,2],[35,0,31,2],[35,8,31,32,"rest"],[35,12,31,2],[35,54,31,41,"prevConfig"],[35,64,31,2],[36,0,32,2],[36,38,33,7,"rest"],[36,42,32,2],[37,0,34,4,"stiffness"],[37,6,34,4,"stiffness"],[37,15,34,13],[37,17,35,6],[37,24,35,13,"tension"],[37,31,35,6],[37,36,35,25],[37,44,35,6],[37,47,36,10,"stiffnessFromOrigamiValue"],[37,72,36,35],[37,73,36,36,"tension"],[37,80,36,35],[37,81,35,6],[37,84,37,10,"stiffnessFromOrigamiNode"],[37,108,37,34],[37,109,37,35,"tension"],[37,116,37,34],[37,117,32,2],[38,0,38,4,"damping"],[38,6,38,4,"damping"],[38,13,38,11],[38,15,39,6],[38,22,39,13,"friction"],[38,30,39,6],[38,35,39,26],[38,43,39,6],[38,46,40,10,"dampingFromOrigamiValue"],[38,69,40,33],[38,70,40,34,"friction"],[38,78,40,33],[38,79,39,6],[38,82,41,10,"dampingFromOrigamiNode"],[38,104,41,32],[38,105,41,33,"friction"],[38,113,41,32],[39,0,32,2],[40,0,43,1],[42,0,45,0],[42,11,45,9,"makeConfigFromBouncinessAndSpeed"],[42,43,45,0],[42,44,45,42,"prevConfig"],[42,54,45,0],[42,56,45,54],[43,0,46,2],[43,8,46,10,"bounciness"],[43,18,46,2],[43,21,46,41,"prevConfig"],[43,31,46,2],[43,32,46,10,"bounciness"],[43,42,46,2],[44,0,46,2],[44,8,46,22,"speed"],[44,13,46,2],[44,16,46,41,"prevConfig"],[44,26,46,2],[44,27,46,22,"speed"],[44,32,46,2],[45,0,46,2],[45,8,46,32,"rest"],[45,12,46,2],[45,54,46,41,"prevConfig"],[45,64,46,2],[47,0,47,2],[47,8,47,6],[47,15,47,13,"bounciness"],[47,25,47,6],[47,30,47,28],[47,38,47,6],[47,42,47,40],[47,49,47,47,"speed"],[47,54,47,40],[47,59,47,57],[47,67,47,2],[47,69,47,67],[48,0,48,4],[48,13,48,11,"fromBouncinessAndSpeedNumbers"],[48,42,48,40],[48,43,48,41,"bounciness"],[48,53,48,40],[48,55,48,53,"speed"],[48,60,48,40],[48,62,48,60,"rest"],[48,66,48,40],[48,67,48,4],[49,0,49,3],[51,0,50,2],[51,11,50,9,"fromBouncinessAndSpeedNodes"],[51,38,50,36],[51,39,50,37,"bounciness"],[51,49,50,36],[51,51,50,49,"speed"],[51,56,50,36],[51,58,50,56,"rest"],[51,62,50,36],[51,63,50,2],[52,0,51,1],[54,0,53,0],[54,11,53,9,"fromBouncinessAndSpeedNodes"],[54,38,53,0],[54,39,53,37,"bounciness"],[54,49,53,0],[54,51,53,49,"speed"],[54,56,53,0],[54,58,53,56,"rest"],[54,62,53,0],[54,64,53,62],[55,0,54,2],[55,13,54,11,"normalize"],[55,22,54,2],[55,23,54,21,"value"],[55,28,54,2],[55,30,54,28,"startValue"],[55,40,54,2],[55,42,54,40,"endValue"],[55,50,54,2],[55,52,54,50],[56,0,55,4],[56,13,55,11],[56,69,55,18],[56,122,55,22,"value"],[56,127,55,18],[56,129,55,29,"startValue"],[56,139,55,18],[56,140,55,11],[56,142,55,42],[56,195,55,46,"endValue"],[56,203,55,42],[56,205,55,56,"startValue"],[56,215,55,42],[56,216,55,11],[56,217,55,4],[57,0,56,3],[59,0,58,2],[59,13,58,11,"projectNormal"],[59,26,58,2],[59,27,58,25,"n"],[59,28,58,2],[59,30,58,28,"start"],[59,35,58,2],[59,37,58,35,"end"],[59,40,58,2],[59,42,58,40],[60,0,59,4],[60,13,59,11],[60,66,59,15,"start"],[60,71,59,11],[60,73,59,22],[60,131,59,31,"n"],[60,132,59,22],[60,134,59,34],[60,187,59,38,"end"],[60,190,59,34],[60,192,59,43,"start"],[60,197,59,34],[60,198,59,22],[60,199,59,11],[60,200,59,4],[61,0,60,3],[63,0,62,2],[63,13,62,11,"linearInterpolation"],[63,32,62,2],[63,33,62,31,"t"],[63,34,62,2],[63,36,62,34,"start"],[63,41,62,2],[63,43,62,41,"end"],[63,46,62,2],[63,48,62,46],[64,0,63,4],[64,13,63,11],[64,66,63,15],[64,124,63,24,"t"],[64,125,63,15],[64,127,63,27,"end"],[64,130,63,15],[64,131,63,11],[64,133,63,33],[64,191,63,42],[64,244,63,46],[64,245,63,42],[64,247,63,49,"t"],[64,248,63,42],[64,249,63,33],[64,251,63,53,"start"],[64,256,63,33],[64,257,63,11],[64,258,63,4],[65,0,64,3],[67,0,66,2],[67,13,66,11,"quadraticOutInterpolation"],[67,38,66,2],[67,39,66,37,"t"],[67,40,66,2],[67,42,66,40,"start"],[67,47,66,2],[67,49,66,47,"end"],[67,52,66,2],[67,54,66,52],[68,0,67,4],[68,13,67,11,"linearInterpolation"],[68,32,67,30],[68,33,67,31],[68,86,67,35],[68,144,67,44],[68,145,67,35],[68,147,67,47,"t"],[68,148,67,35],[68,149,67,31],[68,151,67,51],[68,209,67,60,"t"],[68,210,67,51],[68,212,67,63,"t"],[68,213,67,51],[68,214,67,31],[68,215,67,30],[68,217,67,68,"start"],[68,222,67,30],[68,224,67,75,"end"],[68,227,67,30],[68,228,67,4],[69,0,68,3],[71,0,70,2],[71,13,70,11,"b3Friction1"],[71,24,70,2],[71,25,70,23,"x"],[71,26,70,2],[71,28,70,26],[72,0,71,4],[72,13,71,11],[72,66,72,6],[72,119,72,10],[72,177,72,19],[72,183,72,10],[72,185,72,27],[72,238,72,31,"x"],[72,239,72,27],[72,241,72,34],[72,242,72,27],[72,243,72,10],[72,244,72,6],[72,246,72,39],[72,304,72,48],[72,309,72,39],[72,311,72,55],[72,364,72,59,"x"],[72,365,72,55],[72,367,72,62],[72,368,72,55],[72,369,72,39],[72,370,72,6],[72,371,71,11],[72,373,73,6],[72,431,73,15],[72,435,73,6],[72,437,73,21,"x"],[72,438,73,6],[72,439,71,11],[72,441,74,6],[72,445,71,11],[72,446,71,4],[73,0,76,3],[75,0,78,2],[75,13,78,11,"b3Friction2"],[75,24,78,2],[75,25,78,23,"x"],[75,26,78,2],[75,28,78,26],[76,0,79,4],[76,13,79,11],[76,66,80,6],[76,119,80,10],[76,177,80,19],[76,185,80,10],[76,187,80,29],[76,240,80,33,"x"],[76,241,80,29],[76,243,80,36],[76,244,80,29],[76,245,80,10],[76,246,80,6],[76,248,80,41],[76,306,80,50],[76,311,80,41],[76,313,80,57],[76,366,80,61,"x"],[76,367,80,57],[76,369,80,64],[76,370,80,57],[76,371,80,41],[76,372,80,6],[76,373,79,11],[76,375,81,6],[76,433,81,15],[76,437,81,6],[76,439,81,21,"x"],[76,440,81,6],[76,441,79,11],[76,443,82,6],[76,444,79,11],[76,445,79,4],[77,0,84,3],[79,0,86,2],[79,13,86,11,"b3Friction3"],[79,24,86,2],[79,25,86,23,"x"],[79,26,86,2],[79,28,86,26],[80,0,87,4],[80,13,87,11],[80,66,88,6],[80,119,88,10],[80,177,88,19],[80,187,88,10],[80,189,88,31],[80,242,88,35,"x"],[80,243,88,31],[80,245,88,38],[80,246,88,31],[80,247,88,10],[80,248,88,6],[80,250,88,43],[80,308,88,52],[80,316,88,43],[80,318,88,62],[80,371,88,66,"x"],[80,372,88,62],[80,374,88,69],[80,375,88,62],[80,376,88,43],[80,377,88,6],[80,378,87,11],[80,380,89,6],[80,438,89,15],[80,444,89,6],[80,446,89,23,"x"],[80,447,89,6],[80,448,87,11],[80,450,90,6],[80,454,87,11],[80,455,87,4],[81,0,92,3],[83,0,94,2],[83,13,94,11,"b3Nobounce"],[83,23,94,2],[83,24,94,22,"tension"],[83,31,94,2],[83,33,94,31],[84,0,95,4],[84,13,95,11],[84,67,96,6],[84,125,96,15,"tension"],[84,132,96,6],[84,134,96,24],[84,136,96,6],[84,137,95,11],[84,139,97,6,"b3Friction1"],[84,150,97,17],[84,151,97,18,"tension"],[84,158,97,17],[84,159,95,11],[84,161,98,6],[84,215,99,8],[84,268,99,12],[84,329,99,24,"tension"],[84,336,99,12],[84,338,99,33],[84,340,99,12],[84,341,99,8],[84,343,99,38],[84,401,99,47,"tension"],[84,408,99,38],[84,410,99,56],[84,412,99,38],[84,413,99,8],[84,414,98,6],[84,416,100,8,"b3Friction2"],[84,427,100,19],[84,428,100,20,"tension"],[84,435,100,19],[84,436,98,6],[84,438,101,8,"b3Friction3"],[84,449,101,19],[84,450,101,20,"tension"],[84,457,101,19],[84,458,98,6],[84,459,95,11],[84,460,95,4],[85,0,104,3],[87,0,106,2],[87,8,106,6,"b"],[87,9,106,7],[87,12,106,10,"normalize"],[87,21,106,19],[87,22,106,20],[87,78,106,27,"bounciness"],[87,88,106,20],[87,90,106,39],[87,93,106,20],[87,94,106,19],[87,96,106,45],[87,97,106,19],[87,99,106,48],[87,101,106,19],[87,102,106,2],[88,0,107,2,"b"],[88,4,107,2,"b"],[88,5,107,3],[88,8,107,6,"projectNormal"],[88,21,107,19],[88,22,107,20,"b"],[88,23,107,19],[88,25,107,23],[88,26,107,19],[88,28,107,26],[88,31,107,19],[88,32,107,2],[89,0,108,2],[89,8,108,8,"s"],[89,9,108,9],[89,12,108,12,"normalize"],[89,21,108,21],[89,22,108,22],[89,78,108,29,"speed"],[89,83,108,22],[89,85,108,36],[89,88,108,22],[89,89,108,21],[89,91,108,42],[89,92,108,21],[89,94,108,45],[89,96,108,21],[89,97,108,2],[90,0,109,2],[90,8,109,8,"bouncyTension"],[90,21,109,21],[90,24,109,24,"projectNormal"],[90,37,109,37],[90,38,109,38,"s"],[90,39,109,37],[90,41,109,41],[90,44,109,37],[90,46,109,46],[90,49,109,37],[90,50,109,2],[91,0,110,2],[91,8,110,8,"bouncyFriction"],[91,22,110,22],[91,25,110,25,"quadraticOutInterpolation"],[91,50,110,50],[91,51,111,4,"b"],[91,52,110,50],[91,54,112,4,"b3Nobounce"],[91,64,112,14],[91,65,112,15,"bouncyTension"],[91,78,112,14],[91,79,110,50],[91,81,113,4],[91,85,110,50],[91,86,110,2],[92,0,115,2],[92,38,116,7,"rest"],[92,42,115,2],[93,0,117,4,"stiffness"],[93,6,117,4,"stiffness"],[93,15,117,13],[93,17,117,15,"stiffnessFromOrigamiNode"],[93,41,117,39],[93,42,117,40,"bouncyTension"],[93,55,117,39],[93,56,115,2],[94,0,118,4,"damping"],[94,6,118,4,"damping"],[94,13,118,11],[94,15,118,13,"dampingFromOrigamiNode"],[94,37,118,35],[94,38,118,36,"bouncyFriction"],[94,52,118,35],[95,0,115,2],[96,0,120,1],[98,0,122,0],[98,11,122,9,"fromBouncinessAndSpeedNumbers"],[98,40,122,0],[98,41,122,39,"bounciness"],[98,51,122,0],[98,53,122,51,"speed"],[98,58,122,0],[98,60,122,58,"rest"],[98,64,122,0],[98,66,122,64],[99,0,123,2],[99,13,123,11,"normalize"],[99,22,123,2],[99,23,123,21,"value"],[99,28,123,2],[99,30,123,28,"startValue"],[99,40,123,2],[99,42,123,40,"endValue"],[99,50,123,2],[99,52,123,50],[100,0,124,4],[100,13,124,11],[100,14,124,12,"value"],[100,19,124,17],[100,22,124,20,"startValue"],[100,32,124,11],[100,37,124,35,"endValue"],[100,45,124,43],[100,48,124,46,"startValue"],[100,58,124,11],[100,59,124,4],[101,0,125,3],[103,0,127,2],[103,13,127,11,"projectNormal"],[103,26,127,2],[103,27,127,25,"n"],[103,28,127,2],[103,30,127,28,"start"],[103,35,127,2],[103,37,127,35,"end"],[103,40,127,2],[103,42,127,40],[104,0,128,4],[104,13,128,11,"start"],[104,18,128,16],[104,21,128,19,"n"],[104,22,128,20],[104,26,128,24,"end"],[104,29,128,27],[104,32,128,30,"start"],[104,37,128,20],[104,38,128,4],[105,0,129,3],[107,0,131,2],[107,13,131,11,"linearInterpolation"],[107,32,131,2],[107,33,131,31,"t"],[107,34,131,2],[107,36,131,34,"start"],[107,41,131,2],[107,43,131,41,"end"],[107,46,131,2],[107,48,131,46],[108,0,132,4],[108,13,132,11,"t"],[108,14,132,12],[108,17,132,15,"end"],[108,20,132,11],[108,23,132,21],[108,24,132,22],[108,28,132,26,"t"],[108,29,132,21],[108,33,132,31,"start"],[108,38,132,4],[109,0,133,3],[111,0,135,2],[111,13,135,11,"quadraticOutInterpolation"],[111,38,135,2],[111,39,135,37,"t"],[111,40,135,2],[111,42,135,40,"start"],[111,47,135,2],[111,49,135,47,"end"],[111,52,135,2],[111,54,135,52],[112,0,136,4],[112,13,136,11,"linearInterpolation"],[112,32,136,30],[112,33,136,31],[112,37,136,35,"t"],[112,38,136,31],[112,41,136,39,"t"],[112,42,136,40],[112,45,136,43,"t"],[112,46,136,30],[112,48,136,46,"start"],[112,53,136,30],[112,55,136,53,"end"],[112,58,136,30],[112,59,136,4],[113,0,137,3],[115,0,139,2],[115,13,139,11,"b3Friction1"],[115,24,139,2],[115,25,139,23,"x"],[115,26,139,2],[115,28,139,26],[116,0,140,4],[116,13,140,11],[116,22,140,20,"Math"],[116,26,140,24],[116,27,140,25,"pow"],[116,30,140,20],[116,31,140,29,"x"],[116,32,140,20],[116,34,140,32],[116,35,140,20],[116,36,140,11],[116,39,140,37],[116,47,140,45,"Math"],[116,51,140,49],[116,52,140,50,"pow"],[116,55,140,45],[116,56,140,54,"x"],[116,57,140,45],[116,59,140,57],[116,60,140,45],[116,61,140,11],[116,64,140,62],[116,71,140,69,"x"],[116,72,140,11],[116,75,140,73],[116,79,140,4],[117,0,141,3],[119,0,143,2],[119,13,143,11,"b3Friction2"],[119,24,143,2],[119,25,143,23,"x"],[119,26,143,2],[119,28,143,26],[120,0,144,4],[120,13,144,11],[120,24,144,22,"Math"],[120,28,144,26],[120,29,144,27,"pow"],[120,32,144,22],[120,33,144,31,"x"],[120,34,144,22],[120,36,144,34],[120,37,144,22],[120,38,144,11],[120,41,144,39],[120,49,144,47,"Math"],[120,53,144,51],[120,54,144,52,"pow"],[120,57,144,47],[120,58,144,56,"x"],[120,59,144,47],[120,61,144,59],[120,62,144,47],[120,63,144,11],[120,66,144,64],[120,73,144,71,"x"],[120,74,144,11],[120,77,144,75],[120,78,144,4],[121,0,145,3],[123,0,147,2],[123,13,147,11,"b3Friction3"],[123,24,147,2],[123,25,147,23,"x"],[123,26,147,2],[123,28,147,26],[124,0,148,4],[124,13,149,6],[124,26,149,19,"Math"],[124,30,149,23],[124,31,149,24,"pow"],[124,34,149,19],[124,35,149,28,"x"],[124,36,149,19],[124,38,149,31],[124,39,149,19],[124,40,149,6],[124,43,150,6],[124,54,150,17,"Math"],[124,58,150,21],[124,59,150,22,"pow"],[124,62,150,17],[124,63,150,26,"x"],[124,64,150,17],[124,66,150,29],[124,67,150,17],[124,68,149,6],[124,71,151,6],[124,80,151,15,"x"],[124,81,149,6],[124,84,152,6],[124,88,148,4],[125,0,154,3],[127,0,156,2],[127,13,156,11,"b3Nobounce"],[127,23,156,2],[127,24,156,22,"tension"],[127,31,156,2],[127,33,156,31],[128,0,157,4],[128,10,157,8,"tension"],[128,17,157,15],[128,21,157,19],[128,23,157,4],[128,25,157,23],[129,0,158,6],[129,15,158,13,"b3Friction1"],[129,26,158,24],[129,27,158,25,"tension"],[129,34,158,24],[129,35,158,6],[130,0,159,5],[130,7,157,4],[130,13,159,11],[130,17,159,15,"tension"],[130,24,159,22],[130,27,159,25],[130,29,159,15],[130,33,159,31,"tension"],[130,40,159,38],[130,44,159,42],[130,46,159,11],[130,48,159,46],[131,0,160,6],[131,15,160,13,"b3Friction2"],[131,26,160,24],[131,27,160,25,"tension"],[131,34,160,24],[131,35,160,6],[132,0,161,5],[132,7,159,11],[132,13,161,11],[133,0,162,6],[133,15,162,13,"b3Friction3"],[133,26,162,24],[133,27,162,25,"tension"],[133,34,162,24],[133,35,162,6],[134,0,163,5],[135,0,164,3],[137,0,166,2],[137,8,166,6,"b"],[137,9,166,7],[137,12,166,10,"normalize"],[137,21,166,19],[137,22,166,20,"bounciness"],[137,32,166,30],[137,35,166,33],[137,38,166,19],[137,40,166,38],[137,41,166,19],[137,43,166,41],[137,45,166,19],[137,46,166,2],[138,0,167,2,"b"],[138,4,167,2,"b"],[138,5,167,3],[138,8,167,6,"projectNormal"],[138,21,167,19],[138,22,167,20,"b"],[138,23,167,19],[138,25,167,23],[138,26,167,19],[138,28,167,26],[138,31,167,19],[138,32,167,2],[139,0,168,2],[139,8,168,8,"s"],[139,9,168,9],[139,12,168,12,"normalize"],[139,21,168,21],[139,22,168,22,"speed"],[139,27,168,27],[139,30,168,30],[139,33,168,21],[139,35,168,35],[139,36,168,21],[139,38,168,38],[139,40,168,21],[139,41,168,2],[140,0,169,2],[140,8,169,8,"bouncyTension"],[140,21,169,21],[140,24,169,24,"projectNormal"],[140,37,169,37],[140,38,169,38,"s"],[140,39,169,37],[140,41,169,41],[140,44,169,37],[140,46,169,46],[140,49,169,37],[140,50,169,2],[141,0,170,2],[141,8,170,8,"bouncyFriction"],[141,22,170,22],[141,25,170,25,"quadraticOutInterpolation"],[141,50,170,50],[141,51,171,4,"b"],[141,52,170,50],[141,54,172,4,"b3Nobounce"],[141,64,172,14],[141,65,172,15,"bouncyTension"],[141,78,172,14],[141,79,170,50],[141,81,173,4],[141,85,170,50],[141,86,170,2],[142,0,176,2],[142,38,177,7,"rest"],[142,42,176,2],[143,0,178,4,"stiffness"],[143,6,178,4,"stiffness"],[143,15,178,13],[143,17,178,15,"stiffnessFromOrigamiValue"],[143,42,178,40],[143,43,178,41,"bouncyTension"],[143,56,178,40],[143,57,176,2],[144,0,179,4,"damping"],[144,6,179,4,"damping"],[144,13,179,11],[144,15,179,13,"dampingFromOrigamiValue"],[144,38,179,36],[144,39,179,37,"bouncyFriction"],[144,53,179,36],[145,0,176,2],[146,0,181,1],[148,0,183,0],[148,11,183,9,"makeDefaultConfig"],[148,28,183,0],[148,31,183,29],[149,0,184,2],[149,11,184,9],[150,0,185,4,"stiffness"],[150,6,185,4,"stiffness"],[150,15,185,13],[150,17,185,15],[150,21,185,19,"AnimatedValue"],[150,51,185,15],[150,52,185,33],[150,55,185,15],[150,56,184,9],[151,0,186,4,"mass"],[151,6,186,4,"mass"],[151,10,186,8],[151,12,186,10],[151,16,186,14,"AnimatedValue"],[151,46,186,10],[151,47,186,28],[151,48,186,10],[151,49,184,9],[152,0,187,4,"damping"],[152,6,187,4,"damping"],[152,13,187,11],[152,15,187,13],[152,19,187,17,"AnimatedValue"],[152,49,187,13],[152,50,187,31],[152,52,187,13],[152,53,184,9],[153,0,188,4,"overshootClamping"],[153,6,188,4,"overshootClamping"],[153,23,188,21],[153,25,188,23],[153,30,184,9],[154,0,189,4,"restSpeedThreshold"],[154,6,189,4,"restSpeedThreshold"],[154,24,189,22],[154,26,189,24],[154,31,184,9],[155,0,190,4,"restDisplacementThreshold"],[155,6,190,4,"restDisplacementThreshold"],[155,31,190,29],[155,33,190,31],[155,38,184,9],[156,0,191,4,"toValue"],[156,6,191,4,"toValue"],[156,13,191,11],[156,15,191,13],[156,19,191,17,"AnimatedValue"],[156,49,191,13],[156,50,191,31],[156,51,191,13],[157,0,184,9],[157,5,184,2],[158,0,193,1],[160,17,195,15],[161,0,196,2,"makeDefaultConfig"],[161,4,196,2,"makeDefaultConfig"],[161,21,196,19],[161,23,196,2,"makeDefaultConfig"],[161,40,195,15],[162,0,197,2,"makeConfigFromBouncinessAndSpeed"],[162,4,197,2,"makeConfigFromBouncinessAndSpeed"],[162,36,197,34],[162,38,197,2,"makeConfigFromBouncinessAndSpeed"],[162,70,195,15],[163,0,198,2,"makeConfigFromOrigamiTensionAndFriction"],[163,4,198,2,"makeConfigFromOrigamiTensionAndFriction"],[163,43,198,41],[163,45,198,2,"makeConfigFromOrigamiTensionAndFriction"],[164,0,195,15],[164,3]],"functionMap":{"names":["<global>","stiffnessFromOrigamiValue","dampingFromOrigamiValue","stiffnessFromOrigamiNode","dampingFromOrigamiNode","makeConfigFromOrigamiTensionAndFriction","makeConfigFromBouncinessAndSpeed","fromBouncinessAndSpeedNodes","normalize","projectNormal","linearInterpolation","quadraticOutInterpolation","b3Friction1","b3Friction2","b3Friction3","b3Nobounce","fromBouncinessAndSpeedNumbers","makeDefaultConfig"],"mappings":"AAA;ACa;CDE;AEE;CFE;AGE;CHE;AIE;CJE;AKE;CLa;AME;CNM;AOE;ECC;GDE;EEE;GFE;EGE;GHE;EIE;GJE;EKE;GLM;EME;GNM;EOE;GPM;EQE;GRU;CPgB;AgBE;ERC;GQE;EPE;GOE;ENE;GME;ELE;GKE;EJE;GIE;EHE;GGE;EFE;GEO;EDE;GCQ;ChBiB;AiBE;CjBU"}},"type":"js/module"}]}