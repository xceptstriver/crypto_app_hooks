{"dependencies":[{"name":"./maps/xml.json","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":33},"end":{"line":7,"column":59}}]}},{"name":"./maps/entities.json","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":38},"end":{"line":18,"column":69}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = void 0;\n\n  var xml_json_1 = __importDefault(_$$_REQUIRE(_dependencyMap[0], \"./maps/xml.json\"));\n\n  var inverseXML = getInverseObj(xml_json_1.default);\n  var xmlReplacer = getInverseReplacer(inverseXML);\n  exports.encodeXML = getASCIIEncoder(inverseXML);\n\n  var entities_json_1 = __importDefault(_$$_REQUIRE(_dependencyMap[1], \"./maps/entities.json\"));\n\n  var inverseHTML = getInverseObj(entities_json_1.default);\n  var htmlReplacer = getInverseReplacer(inverseHTML);\n  exports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\n  exports.encodeNonAsciiHTML = getASCIIEncoder(inverseHTML);\n\n  function getInverseObj(obj) {\n    return Object.keys(obj).sort().reduce(function (inverse, name) {\n      inverse[obj[name]] = \"&\" + name + \";\";\n      return inverse;\n    }, {});\n  }\n\n  function getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n\n    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n      var k = _a[_i];\n\n      if (k.length === 1) {\n        single.push(\"\\\\\" + k);\n      } else {\n        multiple.push(k);\n      }\n    }\n\n    single.sort();\n\n    for (var start = 0; start < single.length - 1; start++) {\n      var end = start;\n\n      while (end < single.length - 1 && single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n        end += 1;\n      }\n\n      var count = 1 + end - start;\n      if (count < 3) continue;\n      single.splice(start, count, single[start] + \"-\" + single[end]);\n    }\n\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n  }\n\n  var reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\n  var getCodePoint = String.prototype.codePointAt != null ? function (str) {\n    return str.codePointAt(0);\n  } : function (c) {\n    return (c.charCodeAt(0) - 0xd800) * 0x400 + c.charCodeAt(1) - 0xdc00 + 0x10000;\n  };\n\n  function singleCharReplacer(c) {\n    return \"&#x\" + (c.length > 1 ? getCodePoint(c) : c.charCodeAt(0)).toString(16).toUpperCase() + \";\";\n  }\n\n  function getInverse(inverse, re) {\n    return function (data) {\n      return data.replace(re, function (name) {\n        return inverse[name];\n      }).replace(reNonASCII, singleCharReplacer);\n    };\n  }\n\n  var reEscapeChars = new RegExp(xmlReplacer.source + \"|\" + reNonASCII.source, \"g\");\n\n  function escape(data) {\n    return data.replace(reEscapeChars, singleCharReplacer);\n  }\n\n  exports.escape = escape;\n\n  function escapeUTF8(data) {\n    return data.replace(xmlReplacer, singleCharReplacer);\n  }\n\n  exports.escapeUTF8 = escapeUTF8;\n\n  function getASCIIEncoder(obj) {\n    return function (data) {\n      return data.replace(reEscapeChars, function (c) {\n        return obj[c] || singleCharReplacer(c);\n      });\n    };\n  }\n});","lineCount":107,"map":[[2,0,1,0],[4,0,2,0],[4,6,2,4,"__importDefault"],[4,21,2,19],[4,24,2,23],[4,32,2,31],[4,37,2,36,"__importDefault"],[4,52,2,22],[4,56,2,56],[4,66,2,66,"mod"],[4,69,2,56],[4,71,2,71],[5,0,3,4],[5,11,3,12,"mod"],[5,14,3,15],[5,18,3,19,"mod"],[5,21,3,22],[5,22,3,23,"__esModule"],[5,32,3,11],[5,35,3,37,"mod"],[5,38,3,11],[5,41,3,43],[6,0,3,45],[6,17,3,56,"mod"],[7,0,3,43],[7,5,3,4],[8,0,4,1],[8,3,2,0],[10,0,5,0,"Object"],[10,2,5,0,"Object"],[10,8,5,6],[10,9,5,7,"defineProperty"],[10,23,5,0],[10,24,5,22,"exports"],[10,31,5,0],[10,33,5,31],[10,45,5,0],[10,47,5,45],[11,0,5,47,"value"],[11,4,5,47,"value"],[11,9,5,52],[11,11,5,54],[12,0,5,45],[12,3,5,0],[13,0,6,0,"exports"],[13,2,6,0,"exports"],[13,9,6,7],[13,10,6,8,"escapeUTF8"],[13,20,6,0],[13,23,6,21,"exports"],[13,30,6,28],[13,31,6,29,"escape"],[13,37,6,21],[13,40,6,38,"exports"],[13,47,6,45],[13,48,6,46,"encodeNonAsciiHTML"],[13,66,6,38],[13,69,6,67,"exports"],[13,76,6,74],[13,77,6,75,"encodeHTML"],[13,87,6,67],[13,90,6,88,"exports"],[13,97,6,95],[13,98,6,96,"encodeXML"],[13,107,6,88],[13,110,6,108],[13,115,6,113],[13,116,6,0],[15,0,7,0],[15,6,7,4,"xml_json_1"],[15,16,7,14],[15,19,7,17,"__importDefault"],[15,34,7,32],[15,35,7,33,"require"],[15,46,7,40],[15,84,7,32],[15,85,7,0],[17,0,8,0],[17,6,8,4,"inverseXML"],[17,16,8,14],[17,19,8,17,"getInverseObj"],[17,32,8,30],[17,33,8,31,"xml_json_1"],[17,43,8,41],[17,44,8,42,"default"],[17,51,8,30],[17,52,8,0],[18,0,9,0],[18,6,9,4,"xmlReplacer"],[18,17,9,15],[18,20,9,18,"getInverseReplacer"],[18,38,9,36],[18,39,9,37,"inverseXML"],[18,49,9,36],[18,50,9,0],[19,0,17,0,"exports"],[19,2,17,0,"exports"],[19,9,17,7],[19,10,17,8,"encodeXML"],[19,19,17,0],[19,22,17,20,"getASCIIEncoder"],[19,37,17,35],[19,38,17,36,"inverseXML"],[19,48,17,35],[19,49,17,0],[21,0,18,0],[21,6,18,4,"entities_json_1"],[21,21,18,19],[21,24,18,22,"__importDefault"],[21,39,18,37],[21,40,18,38,"require"],[21,51,18,45],[21,94,18,37],[21,95,18,0],[23,0,19,0],[23,6,19,4,"inverseHTML"],[23,17,19,15],[23,20,19,18,"getInverseObj"],[23,33,19,31],[23,34,19,32,"entities_json_1"],[23,49,19,47],[23,50,19,48,"default"],[23,57,19,31],[23,58,19,0],[24,0,20,0],[24,6,20,4,"htmlReplacer"],[24,18,20,16],[24,21,20,19,"getInverseReplacer"],[24,39,20,37],[24,40,20,38,"inverseHTML"],[24,51,20,37],[24,52,20,0],[25,0,31,0,"exports"],[25,2,31,0,"exports"],[25,9,31,7],[25,10,31,8,"encodeHTML"],[25,20,31,0],[25,23,31,21,"getInverse"],[25,33,31,31],[25,34,31,32,"inverseHTML"],[25,45,31,31],[25,47,31,45,"htmlReplacer"],[25,59,31,31],[25,60,31,0],[26,0,39,0,"exports"],[26,2,39,0,"exports"],[26,9,39,7],[26,10,39,8,"encodeNonAsciiHTML"],[26,28,39,0],[26,31,39,29,"getASCIIEncoder"],[26,46,39,44],[26,47,39,45,"inverseHTML"],[26,58,39,44],[26,59,39,0],[28,0,40,0],[28,11,40,9,"getInverseObj"],[28,24,40,0],[28,25,40,23,"obj"],[28,28,40,0],[28,30,40,28],[29,0,41,4],[29,11,41,11,"Object"],[29,17,41,17],[29,18,41,18,"keys"],[29,22,41,11],[29,23,41,23,"obj"],[29,26,41,11],[29,28,42,9,"sort"],[29,32,41,11],[29,35,43,9,"reduce"],[29,41,41,11],[29,42,43,16],[29,52,43,26,"inverse"],[29,59,43,16],[29,61,43,35,"name"],[29,65,43,16],[29,67,43,41],[30,0,44,8,"inverse"],[30,6,44,8,"inverse"],[30,13,44,15],[30,14,44,16,"obj"],[30,17,44,19],[30,18,44,20,"name"],[30,22,44,19],[30,23,44,15],[30,24,44,8],[30,27,44,29],[30,33,44,35,"name"],[30,37,44,29],[30,40,44,42],[30,43,44,8],[31,0,45,8],[31,13,45,15,"inverse"],[31,20,45,8],[32,0,46,5],[32,5,41,11],[32,7,46,7],[32,9,41,11],[32,10,41,4],[33,0,47,1],[35,0,48,0],[35,11,48,9,"getInverseReplacer"],[35,29,48,0],[35,30,48,28,"inverse"],[35,37,48,0],[35,39,48,37],[36,0,49,4],[36,8,49,8,"single"],[36,14,49,14],[36,17,49,17],[36,19,49,4],[37,0,50,4],[37,8,50,8,"multiple"],[37,16,50,16],[37,19,50,19],[37,21,50,4],[39,0,51,4],[39,9,51,9],[39,13,51,13,"_i"],[39,15,51,15],[39,18,51,18],[39,19,51,9],[39,21,51,21,"_a"],[39,23,51,23],[39,26,51,26,"Object"],[39,32,51,32],[39,33,51,33,"keys"],[39,37,51,26],[39,38,51,38,"inverse"],[39,45,51,26],[39,46,51,4],[39,48,51,48,"_i"],[39,50,51,50],[39,53,51,53,"_a"],[39,55,51,55],[39,56,51,56,"length"],[39,62,51,4],[39,64,51,64,"_i"],[39,66,51,66],[39,68,51,4],[39,70,51,70],[40,0,52,8],[40,10,52,12,"k"],[40,11,52,13],[40,14,52,16,"_a"],[40,16,52,18],[40,17,52,19,"_i"],[40,19,52,18],[40,20,52,8],[42,0,53,8],[42,10,53,12,"k"],[42,11,53,13],[42,12,53,14,"length"],[42,18,53,12],[42,23,53,25],[42,24,53,8],[42,26,53,28],[43,0,55,12,"single"],[43,8,55,12,"single"],[43,14,55,18],[43,15,55,19,"push"],[43,19,55,12],[43,20,55,24],[43,27,55,31,"k"],[43,28,55,12],[44,0,56,9],[44,7,53,8],[44,13,57,13],[45,0,59,12,"multiple"],[45,8,59,12,"multiple"],[45,16,59,20],[45,17,59,21,"push"],[45,21,59,12],[45,22,59,26,"k"],[45,23,59,12],[46,0,60,9],[47,0,61,5],[49,0,63,4,"single"],[49,4,63,4,"single"],[49,10,63,10],[49,11,63,11,"sort"],[49,15,63,4],[51,0,64,4],[51,9,64,9],[51,13,64,13,"start"],[51,18,64,18],[51,21,64,21],[51,22,64,4],[51,24,64,24,"start"],[51,29,64,29],[51,32,64,32,"single"],[51,38,64,38],[51,39,64,39,"length"],[51,45,64,32],[51,48,64,48],[51,49,64,4],[51,51,64,51,"start"],[51,56,64,56],[51,58,64,4],[51,60,64,60],[52,0,66,8],[52,10,66,12,"end"],[52,13,66,15],[52,16,66,18,"start"],[52,21,66,8],[54,0,67,8],[54,13,67,15,"end"],[54,16,67,18],[54,19,67,21,"single"],[54,25,67,27],[54,26,67,28,"length"],[54,32,67,21],[54,35,67,37],[54,36,67,15],[54,40,68,12,"single"],[54,46,68,18],[54,47,68,19,"end"],[54,50,68,18],[54,51,68,12],[54,52,68,24,"charCodeAt"],[54,62,68,12],[54,63,68,35],[54,64,68,12],[54,68,68,40],[54,69,68,12],[54,74,68,46,"single"],[54,80,68,52],[54,81,68,53,"end"],[54,84,68,56],[54,87,68,59],[54,88,68,52],[54,89,68,46],[54,90,68,62,"charCodeAt"],[54,100,68,46],[54,101,68,73],[54,102,68,46],[54,103,67,8],[54,105,68,77],[55,0,69,12,"end"],[55,8,69,12,"end"],[55,11,69,15],[55,15,69,19],[55,16,69,12],[56,0,70,9],[58,0,71,8],[58,10,71,12,"count"],[58,15,71,17],[58,18,71,20],[58,22,71,24,"end"],[58,25,71,20],[58,28,71,30,"start"],[58,33,71,8],[59,0,73,8],[59,10,73,12,"count"],[59,15,73,17],[59,18,73,20],[59,19,73,8],[59,21,74,12],[60,0,75,8,"single"],[60,6,75,8,"single"],[60,12,75,14],[60,13,75,15,"splice"],[60,19,75,8],[60,20,75,22,"start"],[60,25,75,8],[60,27,75,29,"count"],[60,32,75,8],[60,34,75,36,"single"],[60,40,75,42],[60,41,75,43,"start"],[60,46,75,42],[60,47,75,36],[60,50,75,52],[60,53,75,36],[60,56,75,58,"single"],[60,62,75,64],[60,63,75,65,"end"],[60,66,75,64],[60,67,75,8],[61,0,76,5],[63,0,77,4,"multiple"],[63,4,77,4,"multiple"],[63,12,77,12],[63,13,77,13,"unshift"],[63,20,77,4],[63,21,77,21],[63,27,77,27,"single"],[63,33,77,33],[63,34,77,34,"join"],[63,38,77,27],[63,39,77,39],[63,41,77,27],[63,42,77,21],[63,45,77,45],[63,48,77,4],[64,0,78,4],[64,11,78,11],[64,15,78,15,"RegExp"],[64,21,78,11],[64,22,78,22,"multiple"],[64,30,78,30],[64,31,78,31,"join"],[64,35,78,22],[64,36,78,36],[64,39,78,22],[64,40,78,11],[64,42,78,42],[64,45,78,11],[64,46,78,4],[65,0,79,1],[67,0,81,0],[67,6,81,4,"reNonASCII"],[67,16,81,14],[67,19,81,17],[67,156,81,0],[68,0,82,0],[68,6,82,4,"getCodePoint"],[68,18,82,16],[68,21,84,0,"String"],[68,27,84,6],[68,28,84,7,"prototype"],[68,37,84,0],[68,38,84,17,"codePointAt"],[68,49,84,0],[68,53,84,32],[68,57,84,0],[68,60,86,8],[68,70,86,18,"str"],[68,73,86,8],[68,75,86,23],[69,0,86,25],[69,11,86,32,"str"],[69,14,86,35],[69,15,86,36,"codePointAt"],[69,26,86,32],[69,27,86,48],[69,28,86,32],[69,29,86,25],[70,0,86,53],[70,3,84,0],[70,6,88,8],[70,16,88,18,"c"],[70,17,88,8],[70,19,88,21],[71,0,89,12],[71,11,89,19],[71,12,89,20,"c"],[71,13,89,21],[71,14,89,22,"charCodeAt"],[71,24,89,20],[71,25,89,33],[71,26,89,20],[71,30,89,38],[71,36,89,19],[71,40,89,48],[71,45,89,19],[71,48,90,16,"c"],[71,49,90,17],[71,50,90,18,"charCodeAt"],[71,60,90,16],[71,61,90,29],[71,62,90,16],[71,63,89,19],[71,66,91,16],[71,72,89,19],[71,75,92,16],[71,82,89,12],[72,0,93,9],[72,3,82,0],[74,0,94,0],[74,11,94,9,"singleCharReplacer"],[74,29,94,0],[74,30,94,28,"c"],[74,31,94,0],[74,33,94,31],[75,0,95,4],[75,11,95,11],[75,19,95,19],[75,20,95,20,"c"],[75,21,95,21],[75,22,95,22,"length"],[75,28,95,20],[75,31,95,31],[75,32,95,20],[75,35,95,35,"getCodePoint"],[75,47,95,47],[75,48,95,48,"c"],[75,49,95,47],[75,50,95,20],[75,53,95,53,"c"],[75,54,95,54],[75,55,95,55,"charCodeAt"],[75,65,95,53],[75,66,95,66],[75,67,95,53],[75,68,95,19],[75,70,96,9,"toString"],[75,78,95,19],[75,79,96,18],[75,81,95,19],[75,83,97,9,"toUpperCase"],[75,94,95,19],[75,96,95,11],[75,99,97,25],[75,102,95,4],[76,0,98,1],[78,0,99,0],[78,11,99,9,"getInverse"],[78,21,99,0],[78,22,99,20,"inverse"],[78,29,99,0],[78,31,99,29,"re"],[78,33,99,0],[78,35,99,33],[79,0,100,4],[79,11,100,11],[79,21,100,21,"data"],[79,25,100,11],[79,27,100,27],[80,0,101,8],[80,13,101,15,"data"],[80,17,101,19],[80,18,102,13,"replace"],[80,25,101,15],[80,26,102,21,"re"],[80,28,101,15],[80,30,102,25],[80,40,102,35,"name"],[80,44,102,25],[80,46,102,41],[81,0,102,43],[81,15,102,50,"inverse"],[81,22,102,57],[81,23,102,58,"name"],[81,27,102,57],[81,28,102,43],[82,0,102,66],[82,7,101,15],[82,9,103,13,"replace"],[82,16,101,15],[82,17,103,21,"reNonASCII"],[82,27,101,15],[82,29,103,33,"singleCharReplacer"],[82,47,101,15],[82,48,101,8],[83,0,104,5],[83,5,100,4],[84,0,105,1],[86,0,106,0],[86,6,106,4,"reEscapeChars"],[86,19,106,17],[86,22,106,20],[86,26,106,24,"RegExp"],[86,32,106,20],[86,33,106,31,"xmlReplacer"],[86,44,106,42],[86,45,106,43,"source"],[86,51,106,31],[86,54,106,52],[86,57,106,31],[86,60,106,58,"reNonASCII"],[86,70,106,68],[86,71,106,69,"source"],[86,77,106,20],[86,79,106,77],[86,82,106,20],[86,83,106,0],[88,0,116,0],[88,11,116,9,"escape"],[88,17,116,0],[88,18,116,16,"data"],[88,22,116,0],[88,24,116,22],[89,0,117,4],[89,11,117,11,"data"],[89,15,117,15],[89,16,117,16,"replace"],[89,23,117,11],[89,24,117,24,"reEscapeChars"],[89,37,117,11],[89,39,117,39,"singleCharReplacer"],[89,57,117,11],[89,58,117,4],[90,0,118,1],[92,0,119,0,"exports"],[92,2,119,0,"exports"],[92,9,119,7],[92,10,119,8,"escape"],[92,16,119,0],[92,19,119,17,"escape"],[92,25,119,0],[94,0,128,0],[94,11,128,9,"escapeUTF8"],[94,21,128,0],[94,22,128,20,"data"],[94,26,128,0],[94,28,128,26],[95,0,129,4],[95,11,129,11,"data"],[95,15,129,15],[95,16,129,16,"replace"],[95,23,129,11],[95,24,129,24,"xmlReplacer"],[95,35,129,11],[95,37,129,37,"singleCharReplacer"],[95,55,129,11],[95,56,129,4],[96,0,130,1],[98,0,131,0,"exports"],[98,2,131,0,"exports"],[98,9,131,7],[98,10,131,8,"escapeUTF8"],[98,20,131,0],[98,23,131,21,"escapeUTF8"],[98,33,131,0],[100,0,132,0],[100,11,132,9,"getASCIIEncoder"],[100,26,132,0],[100,27,132,25,"obj"],[100,30,132,0],[100,32,132,30],[101,0,133,4],[101,11,133,11],[101,21,133,21,"data"],[101,25,133,11],[101,27,133,27],[102,0,134,8],[102,13,134,15,"data"],[102,17,134,19],[102,18,134,20,"replace"],[102,25,134,15],[102,26,134,28,"reEscapeChars"],[102,39,134,15],[102,41,134,43],[102,51,134,53,"c"],[102,52,134,43],[102,54,134,56],[103,0,134,58],[103,15,134,65,"obj"],[103,18,134,68],[103,19,134,69,"c"],[103,20,134,68],[103,21,134,65],[103,25,134,75,"singleCharReplacer"],[103,43,134,93],[103,44,134,94,"c"],[103,45,134,93],[103,46,134,58],[104,0,134,99],[104,7,134,15],[104,8,134,8],[105,0,135,5],[105,5,133,4],[106,0,136,1]],"functionMap":{"names":["<global>","<anonymous>","getInverseObj","Object.keys.sort.reduce$argument_0","getInverseReplacer","singleCharReplacer","getInverse","data.replace$argument_1","escape","escapeUTF8","getASCIIEncoder"],"mappings":"AAA;wDCC;CDE;AEoC;gBCG;KDG;CFC;AIC;CJ+B;QCO,6CD;QCE;SDK;AKC;CLI;AMC;WLC;yBME,yCN;KKE;CNC;AQW;CRE;ASU;CTE;AUE;WTC;2CMC,wDN;KSC;CVC"}},"type":"js/module"}]}