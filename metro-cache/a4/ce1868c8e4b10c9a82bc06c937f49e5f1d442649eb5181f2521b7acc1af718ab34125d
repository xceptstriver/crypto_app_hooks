{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":28,"column":0}}]}},{"name":"@babel/runtime/regenerator","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":28,"column":0}}]}},{"name":"redux-saga/effects","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":32},"end":{"line":12,"column":36},"identifierName":"call"},{"start":{"line":16,"column":12},"end":{"line":16,"column":15},"identifierName":"put"},{"start":{"line":18,"column":12},"end":{"line":18,"column":15},"identifierName":"put"},{"start":{"line":21,"column":10},"end":{"line":21,"column":13},"identifierName":"put"},{"start":{"line":25,"column":15},"end":{"line":25,"column":19},"identifierName":"fork"},{"start":{"line":26,"column":8},"end":{"line":26,"column":17},"identifierName":"takeEvery"}]}},{"name":"../services/exchange","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":37},"end":{"line":12,"column":48},"identifierName":"getExchange"}]}},{"name":"../redux/actions/exchange","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":16},"end":{"line":16,"column":35},"identifierName":"failedFetchExchange"},{"start":{"line":18,"column":16},"end":{"line":18,"column":31},"identifierName":"fetchedExchange"},{"start":{"line":21,"column":14},"end":{"line":21,"column":33},"identifierName":"failedFetchExchange"}]}},{"name":"../redux/constants/exchange","data":{"asyncType":null,"locs":[{"start":{"line":26,"column":18},"end":{"line":26,"column":34},"identifierName":"EXCHANGE_ACTIONS"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _regenerator = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _marked = _regenerator.default.mark(fetchExchanges);\n\n  function fetchExchanges(_ref) {\n    var params, _yield$call, data, error;\n\n    return _regenerator.default.wrap(function fetchExchanges$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            params = _ref.payload.params;\n            _context.prev = 1;\n            _context.next = 4;\n            return (0, _$$_REQUIRE(_dependencyMap[2], \"redux-saga/effects\").call)(_$$_REQUIRE(_dependencyMap[3], \"../services/exchange\").getExchange, params);\n\n          case 4:\n            _yield$call = _context.sent;\n            data = _yield$call.data;\n            error = _yield$call.error;\n            console.log('bhosidk', data);\n\n            if (!error) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 11;\n            return (0, _$$_REQUIRE(_dependencyMap[2], \"redux-saga/effects\").put)((0, _$$_REQUIRE(_dependencyMap[4], \"../redux/actions/exchange\").failedFetchExchange)(error));\n\n          case 11:\n            _context.next = 15;\n            break;\n\n          case 13:\n            _context.next = 15;\n            return (0, _$$_REQUIRE(_dependencyMap[2], \"redux-saga/effects\").put)((0, _$$_REQUIRE(_dependencyMap[4], \"../redux/actions/exchange\").fetchedExchange)(data, params));\n\n          case 15:\n            _context.next = 21;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](1);\n            _context.next = 21;\n            return (0, _$$_REQUIRE(_dependencyMap[2], \"redux-saga/effects\").put)((0, _$$_REQUIRE(_dependencyMap[4], \"../redux/actions/exchange\").failedFetchExchange)(_context.t0));\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _marked, null, [[1, 17]]);\n  }\n\n  var _default = _c2 = (0, _$$_REQUIRE(_dependencyMap[2], \"redux-saga/effects\").fork)(_c = _regenerator.default.mark(function _c() {\n    return _regenerator.default.wrap(function _c$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return (0, _$$_REQUIRE(_dependencyMap[2], \"redux-saga/effects\").takeEvery)(_$$_REQUIRE(_dependencyMap[5], \"../redux/constants/exchange\").EXCHANGE_ACTIONS.FETCH_EXCHANGE, fetchExchanges);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _c);\n  }));\n\n  exports.default = _default;\n\n  var _c, _c2;\n\n  $RefreshReg$(_c, \"%default%$fork\");\n  $RefreshReg$(_c2, \"%default%\");\n});","lineCount":85,"map":[[9,42,10,10,"fetchExchanges"],[9,56],[11,0,10,0],[11,11,10,10,"fetchExchanges"],[11,25,10,0],[12,0,10,0],[14,0,10,0],[15,0,10,0],[16,0,10,0],[17,0,10,0],[18,0,10,36,"params"],[18,12,10,36,"params"],[18,18,10,0],[18,26,10,26,"payload"],[18,33,10,0],[18,34,10,36,"params"],[18,40,10,0],[19,0,10,0],[20,0,10,0],[21,0,12,26],[21,19,12,32],[21,82,12,37,"getExchange"],[21,148,12,32],[21,150,12,50,"params"],[21,156,12,32],[21,157,12,26],[23,0,10,0],[24,0,10,0],[25,0,12,11,"data"],[25,12,12,11,"data"],[25,16,10,0],[25,31,12,11,"data"],[25,35,10,0],[26,0,12,17,"error"],[26,12,12,17,"error"],[26,17,10,0],[26,32,12,17,"error"],[26,37,10,0],[27,0,13,4,"console"],[27,12,13,4,"console"],[27,19,13,11],[27,20,13,12,"log"],[27,23,13,4],[27,24,13,16],[27,33,13,4],[27,35,13,27,"data"],[27,39,13,4],[29,0,10,0],[29,17,15,8,"error"],[29,22,10,0],[30,0,10,0],[31,0,10,0],[32,0,10,0],[34,0,10,0],[35,0,16,6],[35,19,16,12],[35,81,16,16],[35,166,16,36,"error"],[35,171,16,16],[35,172,16,12],[35,173,16,6],[37,0,10,0],[38,0,10,0],[39,0,10,0],[41,0,10,0],[42,0,10,0],[43,0,18,6],[43,19,18,12],[43,81,18,16],[43,162,18,32,"data"],[43,166,18,16],[43,168,18,38,"params"],[43,174,18,16],[43,175,18,12],[43,176,18,6],[45,0,10,0],[46,0,10,0],[47,0,10,0],[49,0,10,0],[50,0,10,0],[51,0,10,0],[52,0,10,0],[53,0,21,4],[53,19,21,10],[53,81,21,14],[53,178,21,10],[53,179,21,4],[55,0,10,0],[56,0,10,0],[57,0,10,0],[58,0,10,0],[59,0,10,0],[60,0,10,0],[61,0,10,0],[63,23,25,15],[63,117,25,20],[64,0,25,20],[65,0,25,20],[66,0,25,20],[67,0,25,20],[68,0,25,20],[69,0,26,2],[69,19,26,8],[69,87,26,18,"EXCHANGE_ACTIONS"],[69,166,26,35,"FETCH_EXCHANGE"],[69,180,26,8],[69,182,26,51,"fetchExchanges"],[69,196,26,8],[69,197,26,2],[71,0,25,20],[72,0,25,20],[73,0,25,20],[74,0,25,20],[75,0,25,20],[76,0,25,20],[77,0,25,20],[77,3,25,15],[77,5]],"functionMap":{"names":["<global>","fetchExchanges","fork$argument_0"],"mappings":"AAA;ACS;CDa;oBEE;CFE"}},"type":"js/module"}]}