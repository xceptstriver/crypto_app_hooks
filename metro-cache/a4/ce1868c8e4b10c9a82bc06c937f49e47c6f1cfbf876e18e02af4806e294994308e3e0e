{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":28,"column":0}}]}},{"name":"@babel/runtime/regenerator","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":28,"column":0}}]}},{"name":"redux-saga/effects","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":32},"end":{"line":12,"column":36},"identifierName":"call"},{"start":{"line":16,"column":12},"end":{"line":16,"column":15},"identifierName":"put"},{"start":{"line":18,"column":12},"end":{"line":18,"column":15},"identifierName":"put"},{"start":{"line":21,"column":10},"end":{"line":21,"column":13},"identifierName":"put"},{"start":{"line":25,"column":15},"end":{"line":25,"column":19},"identifierName":"fork"},{"start":{"line":26,"column":8},"end":{"line":26,"column":17},"identifierName":"takeEvery"}]}},{"name":"../services/exchange","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":37},"end":{"line":12,"column":48},"identifierName":"getExchange"}]}},{"name":"../redux/actions/exchange","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":16},"end":{"line":16,"column":35},"identifierName":"failedFetchExchange"},{"start":{"line":18,"column":16},"end":{"line":18,"column":31},"identifierName":"fetchedExchange"},{"start":{"line":21,"column":14},"end":{"line":21,"column":33},"identifierName":"failedFetchExchange"}]}},{"name":"../redux/constants/exchange","data":{"asyncType":null,"locs":[{"start":{"line":26,"column":18},"end":{"line":26,"column":34},"identifierName":"EXCHANGE_ACTIONS"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _regenerator = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _marked = _regenerator.default.mark(fetchExchanges);\n\n  function fetchExchanges() {\n    var _yield$call, data, error;\n\n    return _regenerator.default.wrap(function fetchExchanges$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return (0, _$$_REQUIRE(_dependencyMap[2], \"redux-saga/effects\").call)(_$$_REQUIRE(_dependencyMap[3], \"../services/exchange\").getExchange);\n\n          case 3:\n            _yield$call = _context.sent;\n            data = _yield$call.data;\n            error = _yield$call.error;\n            console.log('bhosidk', data);\n\n            if (!error) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 10;\n            return (0, _$$_REQUIRE(_dependencyMap[2], \"redux-saga/effects\").put)((0, _$$_REQUIRE(_dependencyMap[4], \"../redux/actions/exchange\").failedFetchExchange)(error));\n\n          case 10:\n            _context.next = 14;\n            break;\n\n          case 12:\n            _context.next = 14;\n            return (0, _$$_REQUIRE(_dependencyMap[2], \"redux-saga/effects\").put)((0, _$$_REQUIRE(_dependencyMap[4], \"../redux/actions/exchange\").fetchedExchange)(data));\n\n          case 14:\n            _context.next = 20;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](0);\n            _context.next = 20;\n            return (0, _$$_REQUIRE(_dependencyMap[2], \"redux-saga/effects\").put)((0, _$$_REQUIRE(_dependencyMap[4], \"../redux/actions/exchange\").failedFetchExchange)(_context.t0));\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _marked, null, [[0, 16]]);\n  }\n\n  var _default = _c2 = (0, _$$_REQUIRE(_dependencyMap[2], \"redux-saga/effects\").fork)(_c = _regenerator.default.mark(function _c() {\n    return _regenerator.default.wrap(function _c$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return (0, _$$_REQUIRE(_dependencyMap[2], \"redux-saga/effects\").takeEvery)(_$$_REQUIRE(_dependencyMap[5], \"../redux/constants/exchange\").EXCHANGE_ACTIONS.FETCH_EXCHANGE, fetchExchanges);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _c);\n  }));\n\n  exports.default = _default;\n\n  var _c, _c2;\n\n  $RefreshReg$(_c, \"%default%$fork\");\n  $RefreshReg$(_c2, \"%default%\");\n});","lineCount":84,"map":[[9,42,10,10,"fetchExchanges"],[9,56],[11,0,10,0],[11,11,10,10,"fetchExchanges"],[11,25,10,0],[12,0,10,0],[14,0,10,0],[15,0,10,0],[16,0,10,0],[17,0,10,0],[18,0,10,0],[19,0,10,0],[20,0,12,26],[20,19,12,32],[20,82,12,37,"getExchange"],[20,148,12,32],[20,149,12,26],[22,0,10,0],[23,0,10,0],[24,0,12,11,"data"],[24,12,12,11,"data"],[24,16,10,0],[24,31,12,11,"data"],[24,35,10,0],[25,0,12,17,"error"],[25,12,12,17,"error"],[25,17,10,0],[25,32,12,17,"error"],[25,37,10,0],[26,0,13,4,"console"],[26,12,13,4,"console"],[26,19,13,11],[26,20,13,12,"log"],[26,23,13,4],[26,24,13,16],[26,33,13,4],[26,35,13,27,"data"],[26,39,13,4],[28,0,10,0],[28,17,15,8,"error"],[28,22,10,0],[29,0,10,0],[30,0,10,0],[31,0,10,0],[33,0,10,0],[34,0,16,6],[34,19,16,12],[34,81,16,16],[34,166,16,36,"error"],[34,171,16,16],[34,172,16,12],[34,173,16,6],[36,0,10,0],[37,0,10,0],[38,0,10,0],[40,0,10,0],[41,0,10,0],[42,0,18,6],[42,19,18,12],[42,81,18,16],[42,162,18,32,"data"],[42,166,18,16],[42,167,18,12],[42,168,18,6],[44,0,10,0],[45,0,10,0],[46,0,10,0],[48,0,10,0],[49,0,10,0],[50,0,10,0],[51,0,10,0],[52,0,21,4],[52,19,21,10],[52,81,21,14],[52,178,21,10],[52,179,21,4],[54,0,10,0],[55,0,10,0],[56,0,10,0],[57,0,10,0],[58,0,10,0],[59,0,10,0],[60,0,10,0],[62,23,25,15],[62,117,25,20],[63,0,25,20],[64,0,25,20],[65,0,25,20],[66,0,25,20],[67,0,25,20],[68,0,26,2],[68,19,26,8],[68,87,26,18,"EXCHANGE_ACTIONS"],[68,166,26,35,"FETCH_EXCHANGE"],[68,180,26,8],[68,182,26,51,"fetchExchanges"],[68,196,26,8],[68,197,26,2],[70,0,25,20],[71,0,25,20],[72,0,25,20],[73,0,25,20],[74,0,25,20],[75,0,25,20],[76,0,25,20],[76,3,25,15],[76,5]],"functionMap":{"names":["<global>","fetchExchanges","fork$argument_0"],"mappings":"AAA;ACS;CDa;oBEE;CFE"}},"type":"js/module"}]}