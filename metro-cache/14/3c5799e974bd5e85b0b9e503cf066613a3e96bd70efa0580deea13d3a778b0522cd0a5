{"dependencies":[],"output":[{"data":{"code":"__d(function(global, require, _importDefaultUnused, _importAllUnused, module, exports, _dependencyMapUnused) {\n  module.exports = {\n  \"absolute-size\": {\n    \"syntax\": \"xx-small | x-small | small | medium | large | x-large | xx-large | xxx-large\"\n  },\n  \"alpha-value\": {\n    \"syntax\": \"<number> | <percentage>\"\n  },\n  \"angle-percentage\": {\n    \"syntax\": \"<angle> | <percentage>\"\n  },\n  \"angular-color-hint\": {\n    \"syntax\": \"<angle-percentage>\"\n  },\n  \"angular-color-stop\": {\n    \"syntax\": \"<color> && <color-stop-angle>?\"\n  },\n  \"angular-color-stop-list\": {\n    \"syntax\": \"[ <angular-color-stop> [, <angular-color-hint>]? ]# , <angular-color-stop>\"\n  },\n  \"animateable-feature\": {\n    \"syntax\": \"scroll-position | contents | <custom-ident>\"\n  },\n  \"attachment\": {\n    \"syntax\": \"scroll | fixed | local\"\n  },\n  \"attr()\": {\n    \"syntax\": \"attr( <attr-name> <type-or-unit>? [, <attr-fallback> ]? )\"\n  },\n  \"attr-matcher\": {\n    \"syntax\": \"[ '~' | '|' | '^' | '$' | '*' ]? '='\"\n  },\n  \"attr-modifier\": {\n    \"syntax\": \"i | s\"\n  },\n  \"attribute-selector\": {\n    \"syntax\": \"'[' <wq-name> ']' | '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'\"\n  },\n  \"auto-repeat\": {\n    \"syntax\": \"repeat( [ auto-fill | auto-fit ] , [ <line-names>? <fixed-size> ]+ <line-names>? )\"\n  },\n  \"auto-track-list\": {\n    \"syntax\": \"[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>? <auto-repeat>\\n[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>?\"\n  },\n  \"baseline-position\": {\n    \"syntax\": \"[ first | last ]? baseline\"\n  },\n  \"basic-shape\": {\n    \"syntax\": \"<inset()> | <circle()> | <ellipse()> | <polygon()> | <path()>\"\n  },\n  \"bg-image\": {\n    \"syntax\": \"none | <image>\"\n  },\n  \"bg-layer\": {\n    \"syntax\": \"<bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>\"\n  },\n  \"bg-position\": {\n    \"syntax\": \"[ [ left | center | right | top | bottom | <length-percentage> ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ] | [ center | [ left | right ] <length-percentage>? ] && [ center | [ top | bottom ] <length-percentage>? ] ]\"\n  },\n  \"bg-size\": {\n    \"syntax\": \"[ <length-percentage> | auto ]{1,2} | cover | contain\"\n  },\n  \"blur()\": {\n    \"syntax\": \"blur( <length> )\"\n  },\n  \"blend-mode\": {\n    \"syntax\": \"normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity\"\n  },\n  \"box\": {\n    \"syntax\": \"border-box | padding-box | content-box\"\n  },\n  \"brightness()\": {\n    \"syntax\": \"brightness( <number-percentage> )\"\n  },\n  \"calc()\": {\n    \"syntax\": \"calc( <calc-sum> )\"\n  },\n  \"calc-sum\": {\n    \"syntax\": \"<calc-product> [ [ '+' | '-' ] <calc-product> ]*\"\n  },\n  \"calc-product\": {\n    \"syntax\": \"<calc-value> [ '*' <calc-value> | '/' <number> ]*\"\n  },\n  \"calc-value\": {\n    \"syntax\": \"<number> | <dimension> | <percentage> | ( <calc-sum> )\"\n  },\n  \"cf-final-image\": {\n    \"syntax\": \"<image> | <color>\"\n  },\n  \"cf-mixing-image\": {\n    \"syntax\": \"<percentage>? && <image>\"\n  },\n  \"circle()\": {\n    \"syntax\": \"circle( [ <shape-radius> ]? [ at <position> ]? )\"\n  },\n  \"clamp()\": {\n    \"syntax\": \"clamp( <calc-sum>#{3} )\"\n  },\n  \"class-selector\": {\n    \"syntax\": \"'.' <ident-token>\"\n  },\n  \"clip-source\": {\n    \"syntax\": \"<url>\"\n  },\n  \"color\": {\n    \"syntax\": \"<rgb()> | <rgba()> | <hsl()> | <hsla()> | <hex-color> | <named-color> | currentcolor | <deprecated-system-color>\"\n  },\n  \"color-stop\": {\n    \"syntax\": \"<color-stop-length> | <color-stop-angle>\"\n  },\n  \"color-stop-angle\": {\n    \"syntax\": \"<angle-percentage>{1,2}\"\n  },\n  \"color-stop-length\": {\n    \"syntax\": \"<length-percentage>{1,2}\"\n  },\n  \"color-stop-list\": {\n    \"syntax\": \"[ <linear-color-stop> [, <linear-color-hint>]? ]# , <linear-color-stop>\"\n  },\n  \"combinator\": {\n    \"syntax\": \"'>' | '+' | '~' | [ '||' ]\"\n  },\n  \"common-lig-values\": {\n    \"syntax\": \"[ common-ligatures | no-common-ligatures ]\"\n  },\n  \"compat-auto\": {\n    \"syntax\": \"searchfield | textarea | push-button | slider-horizontal | checkbox | radio | square-button | menulist | listbox | meter | progress-bar | button\"\n  },\n  \"composite-style\": {\n    \"syntax\": \"clear | copy | source-over | source-in | source-out | source-atop | destination-over | destination-in | destination-out | destination-atop | xor\"\n  },\n  \"compositing-operator\": {\n    \"syntax\": \"add | subtract | intersect | exclude\"\n  },\n  \"compound-selector\": {\n    \"syntax\": \"[ <type-selector>? <subclass-selector>* [ <pseudo-element-selector> <pseudo-class-selector>* ]* ]!\"\n  },\n  \"compound-selector-list\": {\n    \"syntax\": \"<compound-selector>#\"\n  },\n  \"complex-selector\": {\n    \"syntax\": \"<compound-selector> [ <combinator>? <compound-selector> ]*\"\n  },\n  \"complex-selector-list\": {\n    \"syntax\": \"<complex-selector>#\"\n  },\n  \"conic-gradient()\": {\n    \"syntax\": \"conic-gradient( [ from <angle> ]? [ at <position> ]?, <angular-color-stop-list> )\"\n  },\n  \"contextual-alt-values\": {\n    \"syntax\": \"[ contextual | no-contextual ]\"\n  },\n  \"content-distribution\": {\n    \"syntax\": \"space-between | space-around | space-evenly | stretch\"\n  },\n  \"content-list\": {\n    \"syntax\": \"[ <string> | contents | <image> | <quote> | <target> | <leader()> ]+\"\n  },\n  \"content-position\": {\n    \"syntax\": \"center | start | end | flex-start | flex-end\"\n  },\n  \"content-replacement\": {\n    \"syntax\": \"<image>\"\n  },\n  \"contrast()\": {\n    \"syntax\": \"contrast( [ <number-percentage> ] )\"\n  },\n  \"counter()\": {\n    \"syntax\": \"counter( <custom-ident>, <counter-style>? )\"\n  },\n  \"counter-style\": {\n    \"syntax\": \"<counter-style-name> | symbols()\"\n  },\n  \"counter-style-name\": {\n    \"syntax\": \"<custom-ident>\"\n  },\n  \"counters()\": {\n    \"syntax\": \"counters( <custom-ident>, <string>, <counter-style>? )\"\n  },\n  \"cross-fade()\": {\n    \"syntax\": \"cross-fade( <cf-mixing-image> , <cf-final-image>? )\"\n  },\n  \"cubic-bezier-timing-function\": {\n    \"syntax\": \"ease | ease-in | ease-out | ease-in-out | cubic-bezier(<number [0,1]>, <number>, <number [0,1]>, <number>)\"\n  },\n  \"deprecated-system-color\": {\n    \"syntax\": \"ActiveBorder | ActiveCaption | AppWorkspace | Background | ButtonFace | ButtonHighlight | ButtonShadow | ButtonText | CaptionText | GrayText | Highlight | HighlightText | InactiveBorder | InactiveCaption | InactiveCaptionText | InfoBackground | InfoText | Menu | MenuText | Scrollbar | ThreeDDarkShadow | ThreeDFace | ThreeDHighlight | ThreeDLightShadow | ThreeDShadow | Window | WindowFrame | WindowText\"\n  },\n  \"discretionary-lig-values\": {\n    \"syntax\": \"[ discretionary-ligatures | no-discretionary-ligatures ]\"\n  },\n  \"display-box\": {\n    \"syntax\": \"contents | none\"\n  },\n  \"display-inside\": {\n    \"syntax\": \"flow | flow-root | table | flex | grid | ruby\"\n  },\n  \"display-internal\": {\n    \"syntax\": \"table-row-group | table-header-group | table-footer-group | table-row | table-cell | table-column-group | table-column | table-caption | ruby-base | ruby-text | ruby-base-container | ruby-text-container\"\n  },\n  \"display-legacy\": {\n    \"syntax\": \"inline-block | inline-list-item | inline-table | inline-flex | inline-grid\"\n  },\n  \"display-listitem\": {\n    \"syntax\": \"<display-outside>? && [ flow | flow-root ]? && list-item\"\n  },\n  \"display-outside\": {\n    \"syntax\": \"block | inline | run-in\"\n  },\n  \"drop-shadow()\": {\n    \"syntax\": \"drop-shadow( <length>{2,3} <color>? )\"\n  },\n  \"east-asian-variant-values\": {\n    \"syntax\": \"[ jis78 | jis83 | jis90 | jis04 | simplified | traditional ]\"\n  },\n  \"east-asian-width-values\": {\n    \"syntax\": \"[ full-width | proportional-width ]\"\n  },\n  \"element()\": {\n    \"syntax\": \"element( <id-selector> )\"\n  },\n  \"ellipse()\": {\n    \"syntax\": \"ellipse( [ <shape-radius>{2} ]? [ at <position> ]? )\"\n  },\n  \"ending-shape\": {\n    \"syntax\": \"circle | ellipse\"\n  },\n  \"env()\": {\n    \"syntax\": \"env( <custom-ident> , <declaration-value>? )\"\n  },\n  \"explicit-track-list\": {\n    \"syntax\": \"[ <line-names>? <track-size> ]+ <line-names>?\"\n  },\n  \"family-name\": {\n    \"syntax\": \"<string> | <custom-ident>+\"\n  },\n  \"feature-tag-value\": {\n    \"syntax\": \"<string> [ <integer> | on | off ]?\"\n  },\n  \"feature-type\": {\n    \"syntax\": \"@stylistic | @historical-forms | @styleset | @character-variant | @swash | @ornaments | @annotation\"\n  },\n  \"feature-value-block\": {\n    \"syntax\": \"<feature-type> '{' <feature-value-declaration-list> '}'\"\n  },\n  \"feature-value-block-list\": {\n    \"syntax\": \"<feature-value-block>+\"\n  },\n  \"feature-value-declaration\": {\n    \"syntax\": \"<custom-ident>: <integer>+;\"\n  },\n  \"feature-value-declaration-list\": {\n    \"syntax\": \"<feature-value-declaration>\"\n  },\n  \"feature-value-name\": {\n    \"syntax\": \"<custom-ident>\"\n  },\n  \"fill-rule\": {\n    \"syntax\": \"nonzero | evenodd\"\n  },\n  \"filter-function\": {\n    \"syntax\": \"<blur()> | <brightness()> | <contrast()> | <drop-shadow()> | <grayscale()> | <hue-rotate()> | <invert()> | <opacity()> | <saturate()> | <sepia()>\"\n  },\n  \"filter-function-list\": {\n    \"syntax\": \"[ <filter-function> | <url> ]+\"\n  },\n  \"final-bg-layer\": {\n    \"syntax\": \"<'background-color'> || <bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>\"\n  },\n  \"fit-content()\": {\n    \"syntax\": \"fit-content( [ <length> | <percentage> ] )\"\n  },\n  \"fixed-breadth\": {\n    \"syntax\": \"<length-percentage>\"\n  },\n  \"fixed-repeat\": {\n    \"syntax\": \"repeat( [ <positive-integer> ] , [ <line-names>? <fixed-size> ]+ <line-names>? )\"\n  },\n  \"fixed-size\": {\n    \"syntax\": \"<fixed-breadth> | minmax( <fixed-breadth> , <track-breadth> ) | minmax( <inflexible-breadth> , <fixed-breadth> )\"\n  },\n  \"font-stretch-absolute\": {\n    \"syntax\": \"normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded | <percentage>\"\n  },\n  \"font-variant-css21\": {\n    \"syntax\": \"[ normal | small-caps ]\"\n  },\n  \"font-weight-absolute\": {\n    \"syntax\": \"normal | bold | <number [1,1000]>\"\n  },\n  \"frequency-percentage\": {\n    \"syntax\": \"<frequency> | <percentage>\"\n  },\n  \"general-enclosed\": {\n    \"syntax\": \"[ <function-token> <any-value> ) ] | ( <ident> <any-value> )\"\n  },\n  \"generic-family\": {\n    \"syntax\": \"serif | sans-serif | cursive | fantasy | monospace\"\n  },\n  \"generic-name\": {\n    \"syntax\": \"serif | sans-serif | cursive | fantasy | monospace\"\n  },\n  \"geometry-box\": {\n    \"syntax\": \"<shape-box> | fill-box | stroke-box | view-box\"\n  },\n  \"gradient\": {\n    \"syntax\": \"<linear-gradient()> | <repeating-linear-gradient()> | <radial-gradient()> | <repeating-radial-gradient()> | <conic-gradient()>\"\n  },\n  \"grayscale()\": {\n    \"syntax\": \"grayscale( <number-percentage> )\"\n  },\n  \"grid-line\": {\n    \"syntax\": \"auto | <custom-ident> | [ <integer> && <custom-ident>? ] | [ span && [ <integer> || <custom-ident> ] ]\"\n  },\n  \"historical-lig-values\": {\n    \"syntax\": \"[ historical-ligatures | no-historical-ligatures ]\"\n  },\n  \"hsl()\": {\n    \"syntax\": \"hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )\"\n  },\n  \"hsla()\": {\n    \"syntax\": \"hsla( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )\"\n  },\n  \"hue\": {\n    \"syntax\": \"<number> | <angle>\"\n  },\n  \"hue-rotate()\": {\n    \"syntax\": \"hue-rotate( <angle> )\"\n  },\n  \"id-selector\": {\n    \"syntax\": \"<hash-token>\"\n  },\n  \"image\": {\n    \"syntax\": \"<url> | <image()> | <image-set()> | <element()> | <paint()> | <cross-fade()> | <gradient>\"\n  },\n  \"image()\": {\n    \"syntax\": \"image( <image-tags>? [ <image-src>? , <color>? ]! )\"\n  },\n  \"image-set()\": {\n    \"syntax\": \"image-set( <image-set-option># )\"\n  },\n  \"image-set-option\": {\n    \"syntax\": \"[ <image> | <string> ] <resolution>\"\n  },\n  \"image-src\": {\n    \"syntax\": \"<url> | <string>\"\n  },\n  \"image-tags\": {\n    \"syntax\": \"ltr | rtl\"\n  },\n  \"inflexible-breadth\": {\n    \"syntax\": \"<length> | <percentage> | min-content | max-content | auto\"\n  },\n  \"inset()\": {\n    \"syntax\": \"inset( <length-percentage>{1,4} [ round <'border-radius'> ]? )\"\n  },\n  \"invert()\": {\n    \"syntax\": \"invert( <number-percentage> )\"\n  },\n  \"keyframes-name\": {\n    \"syntax\": \"<custom-ident> | <string>\"\n  },\n  \"keyframe-block\": {\n    \"syntax\": \"<keyframe-selector># {\\n  <declaration-list>\\n}\"\n  },\n  \"keyframe-block-list\": {\n    \"syntax\": \"<keyframe-block>+\"\n  },\n  \"keyframe-selector\": {\n    \"syntax\": \"from | to | <percentage>\"\n  },\n  \"leader()\": {\n    \"syntax\": \"leader( <leader-type> )\"\n  },\n  \"leader-type\": {\n    \"syntax\": \"dotted | solid | space | <string>\"\n  },\n  \"length-percentage\": {\n    \"syntax\": \"<length> | <percentage>\"\n  },\n  \"line-names\": {\n    \"syntax\": \"'[' <custom-ident>* ']'\"\n  },\n  \"line-name-list\": {\n    \"syntax\": \"[ <line-names> | <name-repeat> ]+\"\n  },\n  \"line-style\": {\n    \"syntax\": \"none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset\"\n  },\n  \"line-width\": {\n    \"syntax\": \"<length> | thin | medium | thick\"\n  },\n  \"linear-color-hint\": {\n    \"syntax\": \"<length-percentage>\"\n  },\n  \"linear-color-stop\": {\n    \"syntax\": \"<color> <color-stop-length>?\"\n  },\n  \"linear-gradient()\": {\n    \"syntax\": \"linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )\"\n  },\n  \"mask-layer\": {\n    \"syntax\": \"<mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || <geometry-box> || [ <geometry-box> | no-clip ] || <compositing-operator> || <masking-mode>\"\n  },\n  \"mask-position\": {\n    \"syntax\": \"[ <length-percentage> | left | center | right ] [ <length-percentage> | top | center | bottom ]?\"\n  },\n  \"mask-reference\": {\n    \"syntax\": \"none | <image> | <mask-source>\"\n  },\n  \"mask-source\": {\n    \"syntax\": \"<url>\"\n  },\n  \"masking-mode\": {\n    \"syntax\": \"alpha | luminance | match-source\"\n  },\n  \"matrix()\": {\n    \"syntax\": \"matrix( <number>#{6} )\"\n  },\n  \"matrix3d()\": {\n    \"syntax\": \"matrix3d( <number>#{16} )\"\n  },\n  \"max()\": {\n    \"syntax\": \"max( <calc-sum># )\"\n  },\n  \"media-and\": {\n    \"syntax\": \"<media-in-parens> [ and <media-in-parens> ]+\"\n  },\n  \"media-condition\": {\n    \"syntax\": \"<media-not> | <media-and> | <media-or> | <media-in-parens>\"\n  },\n  \"media-condition-without-or\": {\n    \"syntax\": \"<media-not> | <media-and> | <media-in-parens>\"\n  },\n  \"media-feature\": {\n    \"syntax\": \"( [ <mf-plain> | <mf-boolean> | <mf-range> ] )\"\n  },\n  \"media-in-parens\": {\n    \"syntax\": \"( <media-condition> ) | <media-feature> | <general-enclosed>\"\n  },\n  \"media-not\": {\n    \"syntax\": \"not <media-in-parens>\"\n  },\n  \"media-or\": {\n    \"syntax\": \"<media-in-parens> [ or <media-in-parens> ]+\"\n  },\n  \"media-query\": {\n    \"syntax\": \"<media-condition> | [ not | only ]? <media-type> [ and <media-condition-without-or> ]?\"\n  },\n  \"media-query-list\": {\n    \"syntax\": \"<media-query>#\"\n  },\n  \"media-type\": {\n    \"syntax\": \"<ident>\"\n  },\n  \"mf-boolean\": {\n    \"syntax\": \"<mf-name>\"\n  },\n  \"mf-name\": {\n    \"syntax\": \"<ident>\"\n  },\n  \"mf-plain\": {\n    \"syntax\": \"<mf-name> : <mf-value>\"\n  },\n  \"mf-range\": {\n    \"syntax\": \"<mf-name> [ '<' | '>' ]? '='? <mf-value>\\n| <mf-value> [ '<' | '>' ]? '='? <mf-name>\\n| <mf-value> '<' '='? <mf-name> '<' '='? <mf-value>\\n| <mf-value> '>' '='? <mf-name> '>' '='? <mf-value>\"\n  },\n  \"mf-value\": {\n    \"syntax\": \"<number> | <dimension> | <ident> | <ratio>\"\n  },\n  \"min()\": {\n    \"syntax\": \"min( <calc-sum># )\"\n  },\n  \"minmax()\": {\n    \"syntax\": \"minmax( [ <length> | <percentage> | min-content | max-content | auto ] , [ <length> | <percentage> | <flex> | min-content | max-content | auto ] )\"\n  },\n  \"named-color\": {\n    \"syntax\": \"transparent | aliceblue | antiquewhite | aqua | aquamarine | azure | beige | bisque | black | blanchedalmond | blue | blueviolet | brown | burlywood | cadetblue | chartreuse | chocolate | coral | cornflowerblue | cornsilk | crimson | cyan | darkblue | darkcyan | darkgoldenrod | darkgray | darkgreen | darkgrey | darkkhaki | darkmagenta | darkolivegreen | darkorange | darkorchid | darkred | darksalmon | darkseagreen | darkslateblue | darkslategray | darkslategrey | darkturquoise | darkviolet | deeppink | deepskyblue | dimgray | dimgrey | dodgerblue | firebrick | floralwhite | forestgreen | fuchsia | gainsboro | ghostwhite | gold | goldenrod | gray | green | greenyellow | grey | honeydew | hotpink | indianred | indigo | ivory | khaki | lavender | lavenderblush | lawngreen | lemonchiffon | lightblue | lightcoral | lightcyan | lightgoldenrodyellow | lightgray | lightgreen | lightgrey | lightpink | lightsalmon | lightseagreen | lightskyblue | lightslategray | lightslategrey | lightsteelblue | lightyellow | lime | limegreen | linen | magenta | maroon | mediumaquamarine | mediumblue | mediumorchid | mediumpurple | mediumseagreen | mediumslateblue | mediumspringgreen | mediumturquoise | mediumvioletred | midnightblue | mintcream | mistyrose | moccasin | navajowhite | navy | oldlace | olive | olivedrab | orange | orangered | orchid | palegoldenrod | palegreen | paleturquoise | palevioletred | papayawhip | peachpuff | peru | pink | plum | powderblue | purple | rebeccapurple | red | rosybrown | royalblue | saddlebrown | salmon | sandybrown | seagreen | seashell | sienna | silver | skyblue | slateblue | slategray | slategrey | snow | springgreen | steelblue | tan | teal | thistle | tomato | turquoise | violet | wheat | white | whitesmoke | yellow | yellowgreen\"\n  },\n  \"namespace-prefix\": {\n    \"syntax\": \"<ident>\"\n  },\n  \"ns-prefix\": {\n    \"syntax\": \"[ <ident-token> | '*' ]? '|'\"\n  },\n  \"number-percentage\": {\n    \"syntax\": \"<number> | <percentage>\"\n  },\n  \"numeric-figure-values\": {\n    \"syntax\": \"[ lining-nums | oldstyle-nums ]\"\n  },\n  \"numeric-fraction-values\": {\n    \"syntax\": \"[ diagonal-fractions | stacked-fractions ]\"\n  },\n  \"numeric-spacing-values\": {\n    \"syntax\": \"[ proportional-nums | tabular-nums ]\"\n  },\n  \"nth\": {\n    \"syntax\": \"<an-plus-b> | even | odd\"\n  },\n  \"opacity()\": {\n    \"syntax\": \"opacity( [ <number-percentage> ] )\"\n  },\n  \"overflow-position\": {\n    \"syntax\": \"unsafe | safe\"\n  },\n  \"outline-radius\": {\n    \"syntax\": \"<length> | <percentage>\"\n  },\n  \"page-body\": {\n    \"syntax\": \"<declaration>? [ ; <page-body> ]? | <page-margin-box> <page-body>\"\n  },\n  \"page-margin-box\": {\n    \"syntax\": \"<page-margin-box-type> '{' <declaration-list> '}'\"\n  },\n  \"page-margin-box-type\": {\n    \"syntax\": \"@top-left-corner | @top-left | @top-center | @top-right | @top-right-corner | @bottom-left-corner | @bottom-left | @bottom-center | @bottom-right | @bottom-right-corner | @left-top | @left-middle | @left-bottom | @right-top | @right-middle | @right-bottom\"\n  },\n  \"page-selector-list\": {\n    \"syntax\": \"[ <page-selector># ]?\"\n  },\n  \"page-selector\": {\n    \"syntax\": \"<pseudo-page>+ | <ident> <pseudo-page>*\"\n  },\n  \"path()\": {\n    \"syntax\": \"path( [ <fill-rule>, ]? <string> )\"\n  },\n  \"paint()\": {\n    \"syntax\": \"paint( <ident>, <declaration-value>? )\"\n  },\n  \"perspective()\": {\n    \"syntax\": \"perspective( <length> )\"\n  },\n  \"polygon()\": {\n    \"syntax\": \"polygon( <fill-rule>? , [ <length-percentage> <length-percentage> ]# )\"\n  },\n  \"position\": {\n    \"syntax\": \"[ [ left | center | right ] || [ top | center | bottom ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ]? | [ [ left | right ] <length-percentage> ] && [ [ top | bottom ] <length-percentage> ] ]\"\n  },\n  \"pseudo-class-selector\": {\n    \"syntax\": \"':' <ident-token> | ':' <function-token> <any-value> ')'\"\n  },\n  \"pseudo-element-selector\": {\n    \"syntax\": \"':' <pseudo-class-selector>\"\n  },\n  \"pseudo-page\": {\n    \"syntax\": \": [ left | right | first | blank ]\"\n  },\n  \"quote\": {\n    \"syntax\": \"open-quote | close-quote | no-open-quote | no-close-quote\"\n  },\n  \"radial-gradient()\": {\n    \"syntax\": \"radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )\"\n  },\n  \"relative-selector\": {\n    \"syntax\": \"<combinator>? <complex-selector>\"\n  },\n  \"relative-selector-list\": {\n    \"syntax\": \"<relative-selector>#\"\n  },\n  \"relative-size\": {\n    \"syntax\": \"larger | smaller\"\n  },\n  \"repeat-style\": {\n    \"syntax\": \"repeat-x | repeat-y | [ repeat | space | round | no-repeat ]{1,2}\"\n  },\n  \"repeating-linear-gradient()\": {\n    \"syntax\": \"repeating-linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )\"\n  },\n  \"repeating-radial-gradient()\": {\n    \"syntax\": \"repeating-radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )\"\n  },\n  \"rgb()\": {\n    \"syntax\": \"rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? ) | rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )\"\n  },\n  \"rgba()\": {\n    \"syntax\": \"rgba( <percentage>{3} [ / <alpha-value> ]? ) | rgba( <number>{3} [ / <alpha-value> ]? ) | rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )\"\n  },\n  \"rotate()\": {\n    \"syntax\": \"rotate( [ <angle> | <zero> ] )\"\n  },\n  \"rotate3d()\": {\n    \"syntax\": \"rotate3d( <number> , <number> , <number> , [ <angle> | <zero> ] )\"\n  },\n  \"rotateX()\": {\n    \"syntax\": \"rotateX( [ <angle> | <zero> ] )\"\n  },\n  \"rotateY()\": {\n    \"syntax\": \"rotateY( [ <angle> | <zero> ] )\"\n  },\n  \"rotateZ()\": {\n    \"syntax\": \"rotateZ( [ <angle> | <zero> ] )\"\n  },\n  \"saturate()\": {\n    \"syntax\": \"saturate( <number-percentage> )\"\n  },\n  \"scale()\": {\n    \"syntax\": \"scale( <number> , <number>? )\"\n  },\n  \"scale3d()\": {\n    \"syntax\": \"scale3d( <number> , <number> , <number> )\"\n  },\n  \"scaleX()\": {\n    \"syntax\": \"scaleX( <number> )\"\n  },\n  \"scaleY()\": {\n    \"syntax\": \"scaleY( <number> )\"\n  },\n  \"scaleZ()\": {\n    \"syntax\": \"scaleZ( <number> )\"\n  },\n  \"self-position\": {\n    \"syntax\": \"center | start | end | self-start | self-end | flex-start | flex-end\"\n  },\n  \"shape-radius\": {\n    \"syntax\": \"<length-percentage> | closest-side | farthest-side\"\n  },\n  \"skew()\": {\n    \"syntax\": \"skew( [ <angle> | <zero> ] , [ <angle> | <zero> ]? )\"\n  },\n  \"skewX()\": {\n    \"syntax\": \"skewX( [ <angle> | <zero> ] )\"\n  },\n  \"skewY()\": {\n    \"syntax\": \"skewY( [ <angle> | <zero> ] )\"\n  },\n  \"sepia()\": {\n    \"syntax\": \"sepia( <number-percentage> )\"\n  },\n  \"shadow\": {\n    \"syntax\": \"inset? && <length>{2,4} && <color>?\"\n  },\n  \"shadow-t\": {\n    \"syntax\": \"[ <length>{2,3} && <color>? ]\"\n  },\n  \"shape\": {\n    \"syntax\": \"rect(<top>, <right>, <bottom>, <left>)\"\n  },\n  \"shape-box\": {\n    \"syntax\": \"<box> | margin-box\"\n  },\n  \"side-or-corner\": {\n    \"syntax\": \"[ left | right ] || [ top | bottom ]\"\n  },\n  \"single-animation\": {\n    \"syntax\": \"<time> || <timing-function> || <time> || <single-animation-iteration-count> || <single-animation-direction> || <single-animation-fill-mode> || <single-animation-play-state> || [ none | <keyframes-name> ]\"\n  },\n  \"single-animation-direction\": {\n    \"syntax\": \"normal | reverse | alternate | alternate-reverse\"\n  },\n  \"single-animation-fill-mode\": {\n    \"syntax\": \"none | forwards | backwards | both\"\n  },\n  \"single-animation-iteration-count\": {\n    \"syntax\": \"infinite | <number>\"\n  },\n  \"single-animation-play-state\": {\n    \"syntax\": \"running | paused\"\n  },\n  \"single-transition\": {\n    \"syntax\": \"[ none | <single-transition-property> ] || <time> || <timing-function> || <time>\"\n  },\n  \"single-transition-property\": {\n    \"syntax\": \"all | <custom-ident>\"\n  },\n  \"size\": {\n    \"syntax\": \"closest-side | farthest-side | closest-corner | farthest-corner | <length> | <length-percentage>{2}\"\n  },\n  \"step-position\": {\n    \"syntax\": \"jump-start | jump-end | jump-none | jump-both | start | end\"\n  },\n  \"step-timing-function\": {\n    \"syntax\": \"step-start | step-end | steps(<integer>[, <step-position>]?)\"\n  },\n  \"subclass-selector\": {\n    \"syntax\": \"<id-selector> | <class-selector> | <attribute-selector> | <pseudo-class-selector>\"\n  },\n  \"supports-condition\": {\n    \"syntax\": \"not <supports-in-parens> | <supports-in-parens> [ and <supports-in-parens> ]* | <supports-in-parens> [ or <supports-in-parens> ]*\"\n  },\n  \"supports-in-parens\": {\n    \"syntax\": \"( <supports-condition> ) | <supports-feature> | <general-enclosed>\"\n  },\n  \"supports-feature\": {\n    \"syntax\": \"<supports-decl> | <supports-selector-fn>\"\n  },\n  \"supports-decl\": {\n    \"syntax\": \"( <declaration> )\"\n  },\n  \"supports-selector-fn\": {\n    \"syntax\": \"selector( <complex-selector> )\"\n  },\n  \"symbol\": {\n    \"syntax\": \"<string> | <image> | <custom-ident>\"\n  },\n  \"target\": {\n    \"syntax\": \"<target-counter()> | <target-counters()> | <target-text()>\"\n  },\n  \"target-counter()\": {\n    \"syntax\": \"target-counter( [ <string> | <url> ] , <custom-ident> , <counter-style>? )\"\n  },\n  \"target-counters()\": {\n    \"syntax\": \"target-counters( [ <string> | <url> ] , <custom-ident> , <string> , <counter-style>? )\"\n  },\n  \"target-text()\": {\n    \"syntax\": \"target-text( [ <string> | <url> ] , [ content | before | after | first-letter ]? )\"\n  },\n  \"time-percentage\": {\n    \"syntax\": \"<time> | <percentage>\"\n  },\n  \"timing-function\": {\n    \"syntax\": \"linear | <cubic-bezier-timing-function> | <step-timing-function>\"\n  },\n  \"track-breadth\": {\n    \"syntax\": \"<length-percentage> | <flex> | min-content | max-content | auto\"\n  },\n  \"track-list\": {\n    \"syntax\": \"[ <line-names>? [ <track-size> | <track-repeat> ] ]+ <line-names>?\"\n  },\n  \"track-repeat\": {\n    \"syntax\": \"repeat( [ <positive-integer> ] , [ <line-names>? <track-size> ]+ <line-names>? )\"\n  },\n  \"track-size\": {\n    \"syntax\": \"<track-breadth> | minmax( <inflexible-breadth> , <track-breadth> ) | fit-content( [ <length> | <percentage> ] )\"\n  },\n  \"transform-function\": {\n    \"syntax\": \"<matrix()> | <translate()> | <translateX()> | <translateY()> | <scale()> | <scaleX()> | <scaleY()> | <rotate()> | <skew()> | <skewX()> | <skewY()> | <matrix3d()> | <translate3d()> | <translateZ()> | <scale3d()> | <scaleZ()> | <rotate3d()> | <rotateX()> | <rotateY()> | <rotateZ()> | <perspective()>\"\n  },\n  \"transform-list\": {\n    \"syntax\": \"<transform-function>+\"\n  },\n  \"translate()\": {\n    \"syntax\": \"translate( <length-percentage> , <length-percentage>? )\"\n  },\n  \"translate3d()\": {\n    \"syntax\": \"translate3d( <length-percentage> , <length-percentage> , <length> )\"\n  },\n  \"translateX()\": {\n    \"syntax\": \"translateX( <length-percentage> )\"\n  },\n  \"translateY()\": {\n    \"syntax\": \"translateY( <length-percentage> )\"\n  },\n  \"translateZ()\": {\n    \"syntax\": \"translateZ( <length> )\"\n  },\n  \"type-or-unit\": {\n    \"syntax\": \"string | color | url | integer | number | length | angle | time | frequency | cap | ch | em | ex | ic | lh | rlh | rem | vb | vi | vw | vh | vmin | vmax | mm | Q | cm | in | pt | pc | px | deg | grad | rad | turn | ms | s | Hz | kHz | %\"\n  },\n  \"type-selector\": {\n    \"syntax\": \"<wq-name> | <ns-prefix>? '*'\"\n  },\n  \"var()\": {\n    \"syntax\": \"var( <custom-property-name> , <declaration-value>? )\"\n  },\n  \"viewport-length\": {\n    \"syntax\": \"auto | <length-percentage>\"\n  },\n  \"wq-name\": {\n    \"syntax\": \"<ns-prefix>? <ident-token>\"\n  }\n}\n;\n});","lineCount":764,"map":[],"functionMap":null},"type":"js/module/asset"}]}